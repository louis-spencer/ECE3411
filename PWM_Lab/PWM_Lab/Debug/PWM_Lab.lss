
PWM_Lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00804000  0000156a  000015fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000156a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000064  00804032  00804032  00001630  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001630  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001660  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  000016a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005a0f  00000000  00000000  00001830  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000034db  00000000  00000000  0000723f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f31  00000000  00000000  0000a71a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003c8  00000000  00000000  0000b64c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002781  00000000  00000000  0000ba14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001196  00000000  00000000  0000e195  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  0000f32b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 06 01 	jmp	0x20c	; 0x20c <__ctors_end>
       4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
       8:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
       c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      10:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      14:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      18:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      1c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      20:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      24:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      28:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      2c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      30:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      34:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      38:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      3c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      40:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      44:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      48:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      4c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      50:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      54:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      58:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      5c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      60:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      64:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      68:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      6c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      70:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      74:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      78:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      7c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      80:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      84:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      88:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      8c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      90:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      94:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      98:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      9c:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      a0:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      a4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      a8:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      ac:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      b0:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      b4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      b8:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      bc:	0c 94 4a 03 	jmp	0x694	; 0x694 <__vector_47>
      c0:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      c4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      c8:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      cc:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      d0:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      d4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      d8:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      dc:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      e0:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      e4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      e8:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      ec:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      f0:	0c 94 25 01 	jmp	0x24a	; 0x24a <__bad_interrupt>
      f4:	05 a8       	ldd	r0, Z+53	; 0x35
      f6:	4c cd       	rjmp	.-1384   	; 0xfffffb90 <__eeprom_end+0xff7efb90>
      f8:	b2 d4       	rcall	.+2404   	; 0xa5e <__addsf3x+0x4c>
      fa:	4e b9       	out	0x0e, r20	; 14
      fc:	38 36       	cpi	r19, 0x68	; 104
      fe:	a9 02       	muls	r26, r25
     100:	0c 50       	subi	r16, 0x0C	; 12
     102:	b9 91       	ld	r27, Y+
     104:	86 88       	ldd	r8, Z+22	; 0x16
     106:	08 3c       	cpi	r16, 0xC8	; 200
     108:	a6 aa       	std	Z+54, r10	; 0x36
     10a:	aa 2a       	or	r10, r26
     10c:	be 00       	.word	0x00be	; ????
     10e:	00 00       	nop
     110:	80 3f       	cpi	r24, 0xF0	; 240

00000112 <__trampolines_end>:
     112:	00 40       	sbci	r16, 0x00	; 0
     114:	7a 10       	cpse	r7, r10
     116:	f3 5a       	subi	r31, 0xA3	; 163
     118:	00 a0       	ldd	r0, Z+32	; 0x20
     11a:	72 4e       	sbci	r23, 0xE2	; 226
     11c:	18 09       	sbc	r17, r8
     11e:	00 10       	cpse	r0, r0
     120:	a5 d4       	rcall	.+2378   	; 0xa6c <__addsf3x+0x5a>
     122:	e8 00       	.word	0x00e8	; ????
     124:	00 e8       	ldi	r16, 0x80	; 128
     126:	76 48       	sbci	r23, 0x86	; 134
     128:	17 00       	.word	0x0017	; ????
     12a:	00 e4       	ldi	r16, 0x40	; 64
     12c:	0b 54       	subi	r16, 0x4B	; 75
     12e:	02 00       	.word	0x0002	; ????
     130:	00 ca       	rjmp	.-3072   	; 0xfffff532 <__eeprom_end+0xff7ef532>
     132:	9a 3b       	cpi	r25, 0xBA	; 186
     134:	00 00       	nop
     136:	00 e1       	ldi	r16, 0x10	; 16
     138:	f5 05       	cpc	r31, r5
     13a:	00 00       	nop
     13c:	80 96       	adiw	r24, 0x20	; 32
     13e:	98 00       	.word	0x0098	; ????
     140:	00 00       	nop
     142:	40 42       	sbci	r20, 0x20	; 32
     144:	0f 00       	.word	0x000f	; ????
     146:	00 00       	nop
     148:	a0 86       	std	Z+8, r10	; 0x08
     14a:	01 00       	.word	0x0001	; ????
     14c:	00 00       	nop
     14e:	10 27       	eor	r17, r16
     150:	00 00       	nop
     152:	00 00       	nop
     154:	e8 03       	fmulsu	r22, r16
     156:	00 00       	nop
     158:	00 00       	nop
     15a:	64 00       	.word	0x0064	; ????
     15c:	00 00       	nop
     15e:	00 00       	nop
     160:	0a 00       	.word	0x000a	; ????
     162:	00 00       	nop
     164:	00 00       	nop
     166:	01 00       	.word	0x0001	; ????
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	2c 76       	andi	r18, 0x6C	; 108
     16e:	d8 88       	ldd	r13, Y+16	; 0x10
     170:	dc 67       	ori	r29, 0x7C	; 124
     172:	4f 08       	sbc	r4, r15
     174:	23 df       	rcall	.-442    	; 0xffffffbc <__eeprom_end+0xff7effbc>
     176:	c1 df       	rcall	.-126    	; 0xfa <__SREG__+0xbb>
     178:	ae 59       	subi	r26, 0x9E	; 158
     17a:	e1 b1       	in	r30, 0x01	; 1
     17c:	b7 96       	adiw	r30, 0x27	; 39
     17e:	e5 e3       	ldi	r30, 0x35	; 53
     180:	e4 53       	subi	r30, 0x34	; 52
     182:	c6 3a       	cpi	r28, 0xA6	; 166
     184:	e6 51       	subi	r30, 0x16	; 22
     186:	99 76       	andi	r25, 0x69	; 105
     188:	96 e8       	ldi	r25, 0x86	; 134
     18a:	e6 c2       	rjmp	.+1484   	; 0x758 <usart_init+0x3a>
     18c:	84 26       	eor	r8, r20
     18e:	eb 89       	ldd	r30, Y+19	; 0x13
     190:	8c 9b       	sbis	0x11, 4	; 17
     192:	62 ed       	ldi	r22, 0xD2	; 210
     194:	40 7c       	andi	r20, 0xC0	; 192
     196:	6f fc       	.word	0xfc6f	; ????
     198:	ef bc       	out	0x2f, r14	; 47
     19a:	9c 9f       	mul	r25, r28
     19c:	40 f2       	brcs	.-112    	; 0x12e <__trampolines_end+0x1c>
     19e:	ba a5       	ldd	r27, Y+42	; 0x2a
     1a0:	6f a5       	ldd	r22, Y+47	; 0x2f
     1a2:	f4 90       	lpm	r15, Z
     1a4:	05 5a       	subi	r16, 0xA5	; 165
     1a6:	2a f7       	brpl	.-54     	; 0x172 <__trampolines_end+0x60>
     1a8:	5c 93       	st	X, r21
     1aa:	6b 6c       	ori	r22, 0xCB	; 203
     1ac:	f9 67       	ori	r31, 0x79	; 121
     1ae:	6d c1       	rjmp	.+730    	; 0x48a <init_TCA1+0x10>
     1b0:	1b fc       	.word	0xfc1b	; ????
     1b2:	e0 e4       	ldi	r30, 0x40	; 64
     1b4:	0d 47       	sbci	r16, 0x7D	; 125
     1b6:	fe f5       	brtc	.+126    	; 0x236 <__do_clear_bss+0x4>
     1b8:	20 e6       	ldi	r18, 0x60	; 96
     1ba:	b5 00       	.word	0x00b5	; ????
     1bc:	d0 ed       	ldi	r29, 0xD0	; 208
     1be:	90 2e       	mov	r9, r16
     1c0:	03 00       	.word	0x0003	; ????
     1c2:	94 35       	cpi	r25, 0x54	; 84
     1c4:	77 05       	cpc	r23, r7
     1c6:	00 80       	ld	r0, Z
     1c8:	84 1e       	adc	r8, r20
     1ca:	08 00       	.word	0x0008	; ????
     1cc:	00 20       	and	r0, r0
     1ce:	4e 0a       	sbc	r4, r30
     1d0:	00 00       	nop
     1d2:	00 c8       	rjmp	.-4096   	; 0xfffff1d4 <__eeprom_end+0xff7ef1d4>
     1d4:	0c 33       	cpi	r16, 0x3C	; 60
     1d6:	33 33       	cpi	r19, 0x33	; 51
     1d8:	33 0f       	add	r19, r19
     1da:	98 6e       	ori	r25, 0xE8	; 232
     1dc:	12 83       	std	Z+2, r17	; 0x02
     1de:	11 41       	sbci	r17, 0x11	; 17
     1e0:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1e2:	21 14       	cp	r2, r1
     1e4:	89 3b       	cpi	r24, 0xB9	; 185
     1e6:	e6 55       	subi	r30, 0x56	; 86
     1e8:	16 cf       	rjmp	.-468    	; 0x16 <__FUSE_REGION_LENGTH__+0x6>
     1ea:	fe e6       	ldi	r31, 0x6E	; 110
     1ec:	db 18       	sub	r13, r11
     1ee:	d1 84       	ldd	r13, Z+9	; 0x09
     1f0:	4b 38       	cpi	r20, 0x8B	; 139
     1f2:	1b f7       	brvc	.-58     	; 0x1ba <__trampolines_end+0xa8>
     1f4:	7c 1d       	adc	r23, r12
     1f6:	90 1d       	adc	r25, r0
     1f8:	a4 bb       	out	0x14, r26	; 20
     1fa:	e4 24       	eor	r14, r4
     1fc:	20 32       	cpi	r18, 0x20	; 32
     1fe:	84 72       	andi	r24, 0x24	; 36
     200:	5e 22       	and	r5, r30
     202:	81 00       	.word	0x0081	; ????
     204:	c9 f1       	breq	.+114    	; 0x278 <TWI_Address+0x1e>
     206:	24 ec       	ldi	r18, 0xC4	; 196
     208:	a1 e5       	ldi	r26, 0x51	; 81
     20a:	3d 27       	eor	r19, r29

0000020c <__ctors_end>:
     20c:	11 24       	eor	r1, r1
     20e:	1f be       	out	0x3f, r1	; 63
     210:	cf ef       	ldi	r28, 0xFF	; 255
     212:	cd bf       	out	0x3d, r28	; 61
     214:	df e7       	ldi	r29, 0x7F	; 127
     216:	de bf       	out	0x3e, r29	; 62

00000218 <__do_copy_data>:
     218:	10 e4       	ldi	r17, 0x40	; 64
     21a:	a0 e0       	ldi	r26, 0x00	; 0
     21c:	b0 e4       	ldi	r27, 0x40	; 64
     21e:	ea e6       	ldi	r30, 0x6A	; 106
     220:	f5 e1       	ldi	r31, 0x15	; 21
     222:	00 e0       	ldi	r16, 0x00	; 0
     224:	0b bf       	out	0x3b, r16	; 59
     226:	02 c0       	rjmp	.+4      	; 0x22c <__do_copy_data+0x14>
     228:	07 90       	elpm	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	a2 33       	cpi	r26, 0x32	; 50
     22e:	b1 07       	cpc	r27, r17
     230:	d9 f7       	brne	.-10     	; 0x228 <__do_copy_data+0x10>

00000232 <__do_clear_bss>:
     232:	20 e4       	ldi	r18, 0x40	; 64
     234:	a2 e3       	ldi	r26, 0x32	; 50
     236:	b0 e4       	ldi	r27, 0x40	; 64
     238:	01 c0       	rjmp	.+2      	; 0x23c <.do_clear_bss_start>

0000023a <.do_clear_bss_loop>:
     23a:	1d 92       	st	X+, r1

0000023c <.do_clear_bss_start>:
     23c:	a6 39       	cpi	r26, 0x96	; 150
     23e:	b2 07       	cpc	r27, r18
     240:	e1 f7       	brne	.-8      	; 0x23a <.do_clear_bss_loop>
     242:	0e 94 87 02 	call	0x50e	; 0x50e <main>
     246:	0c 94 b3 0a 	jmp	0x1566	; 0x1566 <_exit>

0000024a <__bad_interrupt>:
     24a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000024e <TWI_Stop>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     24e:	e0 e0       	ldi	r30, 0x00	; 0
     250:	f9 e0       	ldi	r31, 0x09	; 9
     252:	84 81       	ldd	r24, Z+4	; 0x04
     254:	83 60       	ori	r24, 0x03	; 3
     256:	84 83       	std	Z+4, r24	; 0x04
     258:	08 95       	ret

0000025a <TWI_Address>:
     25a:	cf 93       	push	r28
     25c:	df 93       	push	r29
     25e:	d8 2f       	mov	r29, r24
     260:	c6 2f       	mov	r28, r22
     262:	8d 2f       	mov	r24, r29
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	88 0f       	add	r24, r24
     268:	99 1f       	adc	r25, r25
     26a:	8c 2b       	or	r24, r28
     26c:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     270:	c1 11       	cpse	r28, r1
     272:	02 c0       	rjmp	.+4      	; 0x278 <TWI_Address+0x1e>
     274:	26 e0       	ldi	r18, 0x06	; 6
     276:	01 c0       	rjmp	.+2      	; 0x27a <TWI_Address+0x20>
     278:	27 e0       	ldi	r18, 0x07	; 7
     27a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	02 2e       	mov	r0, r18
     282:	02 c0       	rjmp	.+4      	; 0x288 <TWI_Address+0x2e>
     284:	95 95       	asr	r25
     286:	87 95       	ror	r24
     288:	0a 94       	dec	r0
     28a:	e2 f7       	brpl	.-8      	; 0x284 <TWI_Address+0x2a>
     28c:	80 ff       	sbrs	r24, 0
     28e:	f5 cf       	rjmp	.-22     	; 0x27a <TWI_Address+0x20>
     290:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     294:	84 fd       	sbrc	r24, 4
     296:	0e 94 27 01 	call	0x24e	; 0x24e <TWI_Stop>
     29a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     29e:	8c 70       	andi	r24, 0x0C	; 12
     2a0:	01 f7       	brne	.-64     	; 0x262 <TWI_Address+0x8>
     2a2:	df 91       	pop	r29
     2a4:	cf 91       	pop	r28
     2a6:	08 95       	ret

000002a8 <TWI_TXData>:
     2a8:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     2ac:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     2b0:	86 ff       	sbrs	r24, 6
     2b2:	fc cf       	rjmp	.-8      	; 0x2ac <TWI_TXData+0x4>
     2b4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     2b8:	8c 70       	andi	r24, 0x0C	; 12
     2ba:	19 f0       	breq	.+6      	; 0x2c2 <TWI_TXData+0x1a>
     2bc:	8f ef       	ldi	r24, 0xFF	; 255
     2be:	9f ef       	ldi	r25, 0xFF	; 255
     2c0:	08 95       	ret
     2c2:	80 e0       	ldi	r24, 0x00	; 0
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	08 95       	ret

000002c8 <TWI_2TXData>:
     2c8:	1f 93       	push	r17
     2ca:	cf 93       	push	r28
     2cc:	df 93       	push	r29
     2ce:	c6 2f       	mov	r28, r22
     2d0:	14 2f       	mov	r17, r20
     2d2:	60 e0       	ldi	r22, 0x00	; 0
     2d4:	0e 94 2d 01 	call	0x25a	; 0x25a <TWI_Address>
     2d8:	8c 2f       	mov	r24, r28
     2da:	0e 94 54 01 	call	0x2a8	; 0x2a8 <TWI_TXData>
     2de:	ec 01       	movw	r28, r24
     2e0:	81 2f       	mov	r24, r17
     2e2:	0e 94 54 01 	call	0x2a8	; 0x2a8 <TWI_TXData>
     2e6:	c8 2b       	or	r28, r24
     2e8:	d9 2b       	or	r29, r25
     2ea:	0e 94 27 01 	call	0x24e	; 0x24e <TWI_Stop>
     2ee:	ce 01       	movw	r24, r28
     2f0:	df 91       	pop	r29
     2f2:	cf 91       	pop	r28
     2f4:	1f 91       	pop	r17
     2f6:	08 95       	ret

000002f8 <TWI_Host_Init>:
     2f8:	e0 e0       	ldi	r30, 0x00	; 0
     2fa:	f9 e0       	ldi	r31, 0x09	; 9
     2fc:	83 e2       	ldi	r24, 0x23	; 35
     2fe:	86 83       	std	Z+6, r24	; 0x06
     300:	83 81       	ldd	r24, Z+3	; 0x03
     302:	81 60       	ori	r24, 0x01	; 1
     304:	83 83       	std	Z+3, r24	; 0x03
     306:	85 81       	ldd	r24, Z+5	; 0x05
     308:	81 60       	ori	r24, 0x01	; 1
     30a:	85 83       	std	Z+5, r24	; 0x05
     30c:	08 95       	ret

0000030e <LCDsendCommand>:
     30e:	48 2f       	mov	r20, r24
     310:	60 e8       	ldi	r22, 0x80	; 128
     312:	8e e3       	ldi	r24, 0x3E	; 62
     314:	0e 94 64 01 	call	0x2c8	; 0x2c8 <TWI_2TXData>
     318:	08 95       	ret

0000031a <LCDsendData>:
     31a:	48 2f       	mov	r20, r24
     31c:	60 e4       	ldi	r22, 0x40	; 64
     31e:	8e e3       	ldi	r24, 0x3E	; 62
     320:	0e 94 64 01 	call	0x2c8	; 0x2c8 <TWI_2TXData>
     324:	08 95       	ret

00000326 <LCDinitialize>:
     326:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <TWI_Host_Init>
     32a:	40 e0       	ldi	r20, 0x00	; 0
     32c:	6f e2       	ldi	r22, 0x2F	; 47
     32e:	8b e6       	ldi	r24, 0x6B	; 107
     330:	0e 94 64 01 	call	0x2c8	; 0x2c8 <TWI_2TXData>
     334:	87 ec       	ldi	r24, 0xC7	; 199
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <LCDinitialize+0x12>
     33c:	00 c0       	rjmp	.+0      	; 0x33e <LCDinitialize+0x18>
     33e:	00 00       	nop
     340:	40 e2       	ldi	r20, 0x20	; 32
     342:	60 e0       	ldi	r22, 0x00	; 0
     344:	8b e6       	ldi	r24, 0x6B	; 107
     346:	0e 94 64 01 	call	0x2c8	; 0x2c8 <TWI_2TXData>
     34a:	87 ec       	ldi	r24, 0xC7	; 199
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	01 97       	sbiw	r24, 0x01	; 1
     350:	f1 f7       	brne	.-4      	; 0x34e <LCDinitialize+0x28>
     352:	00 c0       	rjmp	.+0      	; 0x354 <LCDinitialize+0x2e>
     354:	00 00       	nop
     356:	4f ef       	ldi	r20, 0xFF	; 255
     358:	64 e0       	ldi	r22, 0x04	; 4
     35a:	8b e6       	ldi	r24, 0x6B	; 107
     35c:	0e 94 64 01 	call	0x2c8	; 0x2c8 <TWI_2TXData>
     360:	87 ec       	ldi	r24, 0xC7	; 199
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	01 97       	sbiw	r24, 0x01	; 1
     366:	f1 f7       	brne	.-4      	; 0x364 <LCDinitialize+0x3e>
     368:	00 c0       	rjmp	.+0      	; 0x36a <LCDinitialize+0x44>
     36a:	00 00       	nop
     36c:	40 e0       	ldi	r20, 0x00	; 0
     36e:	67 e0       	ldi	r22, 0x07	; 7
     370:	8b e6       	ldi	r24, 0x6B	; 107
     372:	0e 94 64 01 	call	0x2c8	; 0x2c8 <TWI_2TXData>
     376:	8f e5       	ldi	r24, 0x5F	; 95
     378:	9a ee       	ldi	r25, 0xEA	; 234
     37a:	01 97       	sbiw	r24, 0x01	; 1
     37c:	f1 f7       	brne	.-4      	; 0x37a <LCDinitialize+0x54>
     37e:	00 c0       	rjmp	.+0      	; 0x380 <LCDinitialize+0x5a>
     380:	00 00       	nop
     382:	8c e0       	ldi	r24, 0x0C	; 12
     384:	0e 94 87 01 	call	0x30e	; 0x30e <LCDsendCommand>
     388:	95 e3       	ldi	r25, 0x35	; 53
     38a:	9a 95       	dec	r25
     38c:	f1 f7       	brne	.-4      	; 0x38a <LCDinitialize+0x64>
     38e:	00 00       	nop
     390:	88 e3       	ldi	r24, 0x38	; 56
     392:	0e 94 87 01 	call	0x30e	; 0x30e <LCDsendCommand>
     396:	85 e3       	ldi	r24, 0x35	; 53
     398:	8a 95       	dec	r24
     39a:	f1 f7       	brne	.-4      	; 0x398 <LCDinitialize+0x72>
     39c:	00 00       	nop
     39e:	81 e0       	ldi	r24, 0x01	; 1
     3a0:	0e 94 87 01 	call	0x30e	; 0x30e <LCDsendCommand>
     3a4:	8f e3       	ldi	r24, 0x3F	; 63
     3a6:	9f e1       	ldi	r25, 0x1F	; 31
     3a8:	01 97       	sbiw	r24, 0x01	; 1
     3aa:	f1 f7       	brne	.-4      	; 0x3a8 <LCDinitialize+0x82>
     3ac:	00 c0       	rjmp	.+0      	; 0x3ae <LCDinitialize+0x88>
     3ae:	00 00       	nop
     3b0:	86 e0       	ldi	r24, 0x06	; 6
     3b2:	0e 94 87 01 	call	0x30e	; 0x30e <LCDsendCommand>
     3b6:	08 95       	ret

000003b8 <LCDdataWrite>:
     3b8:	0e 94 8d 01 	call	0x31a	; 0x31a <LCDsendData>
     3bc:	08 95       	ret

000003be <LCDclr>:
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	0e 94 87 01 	call	0x30e	; 0x30e <LCDsendCommand>
     3c4:	8f e3       	ldi	r24, 0x3F	; 63
     3c6:	9f e1       	ldi	r25, 0x1F	; 31
     3c8:	01 97       	sbiw	r24, 0x01	; 1
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <LCDclr+0xa>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <LCDclr+0x10>
     3ce:	00 00       	nop
     3d0:	08 95       	ret

000003d2 <LCDstring>:
void LCDhome(void) {
	LCDsendCommand(0x02);
	_delay_ms(2);
}

void LCDstring(char* str) {
     3d2:	0f 93       	push	r16
     3d4:	1f 93       	push	r17
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	8c 01       	movw	r16, r24
	int i = 0;
     3dc:	c0 e0       	ldi	r28, 0x00	; 0
     3de:	d0 e0       	ldi	r29, 0x00	; 0
	char p;
	while (str[i] != '\0') {
     3e0:	07 c0       	rjmp	.+14     	; 0x3f0 <LCDstring+0x1e>
		LCDdataWrite(str[i]);
     3e2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LCDdataWrite>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3e6:	85 ee       	ldi	r24, 0xE5	; 229
     3e8:	8a 95       	dec	r24
     3ea:	f1 f7       	brne	.-4      	; 0x3e8 <LCDstring+0x16>
     3ec:	00 00       	nop
		_delay_us(43);
		i++;
     3ee:	21 96       	adiw	r28, 0x01	; 1
}

void LCDstring(char* str) {
	int i = 0;
	char p;
	while (str[i] != '\0') {
     3f0:	f8 01       	movw	r30, r16
     3f2:	ec 0f       	add	r30, r28
     3f4:	fd 1f       	adc	r31, r29
     3f6:	80 81       	ld	r24, Z
     3f8:	81 11       	cpse	r24, r1
     3fa:	f3 cf       	rjmp	.-26     	; 0x3e2 <LCDstring+0x10>
		LCDdataWrite(str[i]);
		_delay_us(43);
		i++;
	}
}
     3fc:	df 91       	pop	r29
     3fe:	cf 91       	pop	r28
     400:	1f 91       	pop	r17
     402:	0f 91       	pop	r16
     404:	08 95       	ret

00000406 <LCDgotoXY>:

void LCDgotoXY(uint8_t x, uint8_t y) {
	if (y == 0) x |= 0x80;
     406:	61 11       	cpse	r22, r1
     408:	02 c0       	rjmp	.+4      	; 0x40e <LCDgotoXY+0x8>
     40a:	80 68       	ori	r24, 0x80	; 128
     40c:	01 c0       	rjmp	.+2      	; 0x410 <LCDgotoXY+0xa>
	else x |= 0xc0;
     40e:	80 6c       	ori	r24, 0xC0	; 192
	LCDsendCommand(x);
     410:	0e 94 87 01 	call	0x30e	; 0x30e <LCDsendCommand>
     414:	08 95       	ret

00000416 <init_clock>:
#define PWM_SCALE		1
#define PWM_PER			4095

void init_clock(void) {
	// initialize external 16MHz clock
	CPU_CCP = CCP_IOREG_gc;
     416:	88 ed       	ldi	r24, 0xD8	; 216
     418:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.XOSCHFCTRLA = CLKCTRL_FRQRANGE_16M_gc | CLKCTRL_ENABLE_bm;
     41a:	e0 e6       	ldi	r30, 0x60	; 96
     41c:	f0 e0       	ldi	r31, 0x00	; 0
     41e:	95 e0       	ldi	r25, 0x05	; 5
     420:	90 a3       	std	Z+32, r25	; 0x20
	CPU_CCP = CCP_IOREG_gc;
     422:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKCTRLA = CLKCTRL_CLKSEL_EXTCLK_gc;
     424:	83 e0       	ldi	r24, 0x03	; 3
     426:	80 83       	st	Z, r24
	// wait for clock to startup
	while(!(CLKCTRL.MCLKSTATUS & CLKCTRL_EXTS_bm));
     428:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     42c:	84 ff       	sbrs	r24, 4
     42e:	fc cf       	rjmp	.-8      	; 0x428 <init_clock+0x12>
}
     430:	08 95       	ret

00000432 <init_TCA0>:
// sawtooth waveform
void init_TCA0(void) {
	// use to generate sawtooth wave
	
	//-----initialize PWM timer-----
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
     432:	e0 e0       	ldi	r30, 0x00	; 0
     434:	fa e0       	ldi	r31, 0x0A	; 10
     436:	83 e0       	ldi	r24, 0x03	; 3
     438:	81 83       	std	Z+1, r24	; 0x01
	
	//-----set the timer frequency-----
	// settings for 12 bit resolution
	TCA0.SINGLE.CTRLA |= TCA_SINGLE_CLKSEL_DIV4_gc;
     43a:	80 81       	ld	r24, Z
     43c:	84 60       	ori	r24, 0x04	; 4
     43e:	80 83       	st	Z, r24
	TCA0.SINGLE.PER = 4095;
     440:	8f ef       	ldi	r24, 0xFF	; 255
     442:	9f e0       	ldi	r25, 0x0F	; 15
     444:	86 a3       	std	Z+38, r24	; 0x26
     446:	97 a3       	std	Z+39, r25	; 0x27
	TCA0.SINGLE.CMP2 = 0;
     448:	14 a6       	std	Z+44, r1	; 0x2c
     44a:	15 a6       	std	Z+45, r1	; 0x2d
	
	//-----mux rerouting-----
	TCA0.SINGLE.CTRLB |= TCA_SINGLE_CMP2EN_bm;
     44c:	81 81       	ldd	r24, Z+1	; 0x01
     44e:	80 64       	ori	r24, 0x40	; 64
     450:	81 83       	std	Z+1, r24	; 0x01
	PORTMUX.TCAROUTEA |= PORTMUX_TCA0_PORTC_gc;
     452:	a0 ee       	ldi	r26, 0xE0	; 224
     454:	b5 e0       	ldi	r27, 0x05	; 5
     456:	16 96       	adiw	r26, 0x06	; 6
     458:	8c 91       	ld	r24, X
     45a:	16 97       	sbiw	r26, 0x06	; 6
     45c:	82 60       	ori	r24, 0x02	; 2
     45e:	16 96       	adiw	r26, 0x06	; 6
     460:	8c 93       	st	X, r24
	PORTC.DIRSET |= PIN2_bm;
     462:	a0 e4       	ldi	r26, 0x40	; 64
     464:	b4 e0       	ldi	r27, 0x04	; 4
     466:	11 96       	adiw	r26, 0x01	; 1
     468:	8c 91       	ld	r24, X
     46a:	11 97       	sbiw	r26, 0x01	; 1
     46c:	84 60       	ori	r24, 0x04	; 4
     46e:	11 96       	adiw	r26, 0x01	; 1
     470:	8c 93       	st	X, r24
	
	//-----start timer-----
	TCA0.SINGLE.CTRLA |= TCA_SINGLE_ENABLE_bm;
     472:	80 81       	ld	r24, Z
     474:	81 60       	ori	r24, 0x01	; 1
     476:	80 83       	st	Z, r24
     478:	08 95       	ret

0000047a <init_TCA1>:
// led brightness
void init_TCA1(void) {
	// use for the led
	
	//-----initialize PWM timer-----
	TCA1.SINGLE.CTRLB = TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
     47a:	e0 e4       	ldi	r30, 0x40	; 64
     47c:	fa e0       	ldi	r31, 0x0A	; 10
     47e:	83 e0       	ldi	r24, 0x03	; 3
     480:	81 83       	std	Z+1, r24	; 0x01
	
	//-----set the timer frequency and dc-----
	// 1ms = (PER+1) * 1/(F_CLK / DIV) = 2000 * 1/(16e6 / 8)
	TCA1.SINGLE.CTRLA |= TCA_SINGLE_CLKSEL_DIV8_gc;
     482:	80 81       	ld	r24, Z
     484:	86 60       	ori	r24, 0x06	; 6
     486:	80 83       	st	Z, r24
	TCA1.SINGLE.PER = 1999;
     488:	8f ec       	ldi	r24, 0xCF	; 207
     48a:	97 e0       	ldi	r25, 0x07	; 7
     48c:	86 a3       	std	Z+38, r24	; 0x26
     48e:	97 a3       	std	Z+39, r25	; 0x27
	// 10% duty cycle
	TCA1.SINGLE.CMP2 = 199;
     490:	87 ec       	ldi	r24, 0xC7	; 199
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	84 a7       	std	Z+44, r24	; 0x2c
     496:	95 a7       	std	Z+45, r25	; 0x2d
	
	//-----enable interrupt control-----
	TCA1.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	82 87       	std	Z+10, r24	; 0x0a
	
	//-----mux rerouting-----
	TCA1.SINGLE.CTRLB |= TCA_SINGLE_CMP2EN_bm;
     49c:	81 81       	ldd	r24, Z+1	; 0x01
     49e:	80 64       	ori	r24, 0x40	; 64
     4a0:	81 83       	std	Z+1, r24	; 0x01
	PORTMUX.TCAROUTEA |= PORTMUX_TCA1_PORTB_gc;
     4a2:	a0 ee       	ldi	r26, 0xE0	; 224
     4a4:	b5 e0       	ldi	r27, 0x05	; 5
     4a6:	16 96       	adiw	r26, 0x06	; 6
     4a8:	8c 91       	ld	r24, X
     4aa:	16 97       	sbiw	r26, 0x06	; 6
     4ac:	16 96       	adiw	r26, 0x06	; 6
     4ae:	8c 93       	st	X, r24
	PORTB.DIRSET |= PIN2_bm;
     4b0:	a0 e2       	ldi	r26, 0x20	; 32
     4b2:	b4 e0       	ldi	r27, 0x04	; 4
     4b4:	11 96       	adiw	r26, 0x01	; 1
     4b6:	8c 91       	ld	r24, X
     4b8:	11 97       	sbiw	r26, 0x01	; 1
     4ba:	84 60       	ori	r24, 0x04	; 4
     4bc:	11 96       	adiw	r26, 0x01	; 1
     4be:	8c 93       	st	X, r24
	
	//-----start timer-----
	TCA1.SINGLE.CTRLA |= TCA_SINGLE_ENABLE_bm;
     4c0:	80 81       	ld	r24, Z
     4c2:	81 60       	ori	r24, 0x01	; 1
     4c4:	80 83       	st	Z, r24
     4c6:	08 95       	ret

000004c8 <set_dc_TCA1>:
}

void set_dc_TCA1(float f_pc) {
	TCA1.SINGLE.CMP2 = (uint16_t)(f_pc * 1999.0);
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	30 ee       	ldi	r19, 0xE0	; 224
     4cc:	49 ef       	ldi	r20, 0xF9	; 249
     4ce:	54 e4       	ldi	r21, 0x44	; 68
     4d0:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__mulsf3>
     4d4:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__fixunssfsi>
     4d8:	60 93 6c 0a 	sts	0x0A6C, r22	; 0x800a6c <__TEXT_REGION_LENGTH__+0x7e0a6c>
     4dc:	70 93 6d 0a 	sts	0x0A6D, r23	; 0x800a6d <__TEXT_REGION_LENGTH__+0x7e0a6d>
     4e0:	08 95       	ret

000004e2 <init_ADC0>:
	//TCA1.SINGLE.CMP2 = (uint8_t)((percent/100)*(PWM_PER+1))/100)-1;
}

void init_ADC0(void) {
	ADC0.MUXPOS = ADC_MUXPOS_AIN8_gc;
     4e2:	e0 e0       	ldi	r30, 0x00	; 0
     4e4:	f6 e0       	ldi	r31, 0x06	; 6
     4e6:	88 e0       	ldi	r24, 0x08	; 8
     4e8:	80 87       	std	Z+8, r24	; 0x08
	ADC0.CTRLC = ADC_PRESC_DIV8_gc;
     4ea:	82 e0       	ldi	r24, 0x02	; 2
     4ec:	82 83       	std	Z+2, r24	; 0x02
	ADC0.CTRLD = ADC_INITDLY_DLY16_gc;
     4ee:	80 e2       	ldi	r24, 0x20	; 32
     4f0:	83 83       	std	Z+3, r24	; 0x03
	VREF.ADC0REF = VREF_REFSEL_VDD_gc;
     4f2:	85 e0       	ldi	r24, 0x05	; 5
     4f4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	ADC0.CTRLA = ADC_ENABLE_bm;
     4f8:	81 e0       	ldi	r24, 0x01	; 1
     4fa:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADC0.COMMAND, ADC_STCONV_bp);
     4fc:	80 91 0a 06 	lds	r24, 0x060A	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
     500:	80 fd       	sbrc	r24, 0
     502:	fc cf       	rjmp	.-8      	; 0x4fc <init_ADC0+0x1a>
}
     504:	08 95       	ret

00000506 <read_ADC0>:

void read_ADC0(void) {
	ADC0.COMMAND = ADC_STCONV_bm;
     506:	81 e0       	ldi	r24, 0x01	; 1
     508:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
     50c:	08 95       	ret

0000050e <main>:
float dc = 0;
int dc_cmp = 0;
int sawtooth_period = 1000;
float pre_cmp2buf = 0;

int main(void) {
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	cd b7       	in	r28, 0x3d	; 61
     514:	de b7       	in	r29, 0x3e	; 62
     516:	26 97       	sbiw	r28, 0x06	; 6
     518:	cd bf       	out	0x3d, r28	; 61
     51a:	de bf       	out	0x3e, r29	; 62
	
	init_clock();
     51c:	0e 94 0b 02 	call	0x416	; 0x416 <init_clock>
	init_TCA0();
     520:	0e 94 19 02 	call	0x432	; 0x432 <init_TCA0>
	init_TCA1();
     524:	0e 94 3d 02 	call	0x47a	; 0x47a <init_TCA1>
	init_ADC0();
     528:	0e 94 71 02 	call	0x4e2	; 0x4e2 <init_ADC0>
	
	LCDinitialize();
     52c:	0e 94 93 01 	call	0x326	; 0x326 <LCDinitialize>
	
	uart_init(3, 9600, NULL);
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	40 e8       	ldi	r20, 0x80	; 128
     536:	55 e2       	ldi	r21, 0x25	; 37
     538:	60 e0       	ldi	r22, 0x00	; 0
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	83 e0       	ldi	r24, 0x03	; 3
     53e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_init>
	printf("done init\n");
     542:	83 e1       	ldi	r24, 0x13	; 19
     544:	90 e4       	ldi	r25, 0x40	; 64
     546:	0e 94 3a 08 	call	0x1074	; 0x1074 <puts>
	
	sei();
     54a:	78 94       	sei
	while (1) {
		if (millis >= 250) {
     54c:	80 91 3c 40 	lds	r24, 0x403C	; 0x80403c <millis>
     550:	90 91 3d 40 	lds	r25, 0x403D	; 0x80403d <millis+0x1>
     554:	8a 3f       	cpi	r24, 0xFA	; 250
     556:	91 05       	cpc	r25, r1
     558:	70 f1       	brcs	.+92     	; 0x5b6 <main+0xa8>
			millis = 0;
     55a:	10 92 3c 40 	sts	0x403C, r1	; 0x80403c <millis>
     55e:	10 92 3d 40 	sts	0x403D, r1	; 0x80403d <millis+0x1>
			read_ADC0();
     562:	0e 94 83 02 	call	0x506	; 0x506 <read_ADC0>
			//char strbuf[6];
			//dtostrf((float)sin(2.0*M_PI*dc_cmp/sawtooth_period), 4, 2, strbuf);
			//printf("%d\t%d\t%s\n", sawtooth_period, dc_cmp, strbuf);
			
			char strbuf[6];
			dtostrf(dc*100.0, 4, 2, strbuf);
     566:	20 e0       	ldi	r18, 0x00	; 0
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	48 ec       	ldi	r20, 0xC8	; 200
     56c:	52 e4       	ldi	r21, 0x42	; 66
     56e:	60 91 38 40 	lds	r22, 0x4038	; 0x804038 <dc>
     572:	70 91 39 40 	lds	r23, 0x4039	; 0x804039 <dc+0x1>
     576:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <dc+0x2>
     57a:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <dc+0x3>
     57e:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__mulsf3>
     582:	8e 01       	movw	r16, r28
     584:	0f 5f       	subi	r16, 0xFF	; 255
     586:	1f 4f       	sbci	r17, 0xFF	; 255
     588:	22 e0       	ldi	r18, 0x02	; 2
     58a:	44 e0       	ldi	r20, 0x04	; 4
     58c:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <dtostrf>
			LCDclr();
     590:	0e 94 df 01 	call	0x3be	; 0x3be <LCDclr>
			LCDstring("duty cycle:");
     594:	8d e1       	ldi	r24, 0x1D	; 29
     596:	90 e4       	ldi	r25, 0x40	; 64
     598:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <LCDstring>
			LCDgotoXY(0, 1);
     59c:	61 e0       	ldi	r22, 0x01	; 1
     59e:	70 e0       	ldi	r23, 0x00	; 0
     5a0:	80 e0       	ldi	r24, 0x00	; 0
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	0e 94 03 02 	call	0x406	; 0x406 <LCDgotoXY>
			LCDstring(strbuf);
     5a8:	c8 01       	movw	r24, r16
     5aa:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <LCDstring>
			LCDstring("\%\0");
     5ae:	80 e1       	ldi	r24, 0x10	; 16
     5b0:	90 e4       	ldi	r25, 0x40	; 64
     5b2:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <LCDstring>
		}
		
		dc = (float)(ADC0.RES)/4096;
     5b6:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
     5ba:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
     5be:	80 e0       	ldi	r24, 0x00	; 0
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	0e 94 0b 06 	call	0xc16	; 0xc16 <__floatunsisf>
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e8       	ldi	r20, 0x80	; 128
     5cc:	59 e3       	ldi	r21, 0x39	; 57
     5ce:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__mulsf3>
     5d2:	60 93 38 40 	sts	0x4038, r22	; 0x804038 <dc>
     5d6:	70 93 39 40 	sts	0x4039, r23	; 0x804039 <dc+0x1>
     5da:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <dc+0x2>
     5de:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <dc+0x3>
		
		// this controls the brightness of the led
		set_dc_TCA1(dc);
     5e2:	0e 94 64 02 	call	0x4c8	; 0x4c8 <set_dc_TCA1>
		
		sawtooth_period = dc * 1000;
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	4a e7       	ldi	r20, 0x7A	; 122
     5ec:	54 e4       	ldi	r21, 0x44	; 68
     5ee:	60 91 38 40 	lds	r22, 0x4038	; 0x804038 <dc>
     5f2:	70 91 39 40 	lds	r23, 0x4039	; 0x804039 <dc+0x1>
     5f6:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <dc+0x2>
     5fa:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <dc+0x3>
     5fe:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__mulsf3>
     602:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__fixsfsi>
     606:	6b 01       	movw	r12, r22
     608:	7c 01       	movw	r14, r24
     60a:	60 93 00 40 	sts	0x4000, r22	; 0x804000 <__DATA_REGION_ORIGIN__>
     60e:	70 93 01 40 	sts	0x4001, r23	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
		pre_cmp2buf = 0.5 * ((float)cos(2.0*M_PI*dc_cmp/sawtooth_period) + 1.0) * (PWM_PER+1);
     612:	60 91 36 40 	lds	r22, 0x4036	; 0x804036 <dc_cmp>
     616:	70 91 37 40 	lds	r23, 0x4037	; 0x804037 <dc_cmp+0x1>
     61a:	07 2e       	mov	r0, r23
     61c:	00 0c       	add	r0, r0
     61e:	88 0b       	sbc	r24, r24
     620:	99 0b       	sbc	r25, r25
     622:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__floatsisf>
     626:	2b ed       	ldi	r18, 0xDB	; 219
     628:	3f e0       	ldi	r19, 0x0F	; 15
     62a:	49 ec       	ldi	r20, 0xC9	; 201
     62c:	50 e4       	ldi	r21, 0x40	; 64
     62e:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__mulsf3>
     632:	4b 01       	movw	r8, r22
     634:	5c 01       	movw	r10, r24
     636:	b6 01       	movw	r22, r12
     638:	dd 0c       	add	r13, r13
     63a:	88 0b       	sbc	r24, r24
     63c:	99 0b       	sbc	r25, r25
     63e:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__floatsisf>
     642:	9b 01       	movw	r18, r22
     644:	ac 01       	movw	r20, r24
     646:	c5 01       	movw	r24, r10
     648:	b4 01       	movw	r22, r8
     64a:	0e 94 63 05 	call	0xac6	; 0xac6 <__divsf3>
     64e:	0e 94 5e 05 	call	0xabc	; 0xabc <cos>
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	40 e8       	ldi	r20, 0x80	; 128
     658:	5f e3       	ldi	r21, 0x3F	; 63
     65a:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__addsf3>
     65e:	20 e0       	ldi	r18, 0x00	; 0
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	40 e0       	ldi	r20, 0x00	; 0
     664:	5f e3       	ldi	r21, 0x3F	; 63
     666:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__mulsf3>
     66a:	20 e0       	ldi	r18, 0x00	; 0
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	40 e8       	ldi	r20, 0x80	; 128
     670:	55 e4       	ldi	r21, 0x45	; 69
     672:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__mulsf3>
     676:	60 93 32 40 	sts	0x4032, r22	; 0x804032 <__data_end>
     67a:	70 93 33 40 	sts	0x4033, r23	; 0x804033 <__data_end+0x1>
     67e:	80 93 34 40 	sts	0x4034, r24	; 0x804034 <__data_end+0x2>
     682:	90 93 35 40 	sts	0x4035, r25	; 0x804035 <__data_end+0x3>
		//pre_cmp2buf = 1.0*dc_cmp/sawtooth_period * (PWM_PER+1);
		TCA0.SINGLE.CMP2BUF = (uint16_t)pre_cmp2buf;
     686:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__fixunssfsi>
     68a:	60 93 3c 0a 	sts	0x0A3C, r22	; 0x800a3c <__TEXT_REGION_LENGTH__+0x7e0a3c>
     68e:	70 93 3d 0a 	sts	0x0A3D, r23	; 0x800a3d <__TEXT_REGION_LENGTH__+0x7e0a3d>
	}
     692:	5c cf       	rjmp	.-328    	; 0x54c <main+0x3e>

00000694 <__vector_47>:
	
	return 0;
}

ISR(TCA1_OVF_vect) {
     694:	1f 92       	push	r1
     696:	0f 92       	push	r0
     698:	0f b6       	in	r0, 0x3f	; 63
     69a:	0f 92       	push	r0
     69c:	11 24       	eor	r1, r1
     69e:	0b b6       	in	r0, 0x3b	; 59
     6a0:	0f 92       	push	r0
     6a2:	2f 93       	push	r18
     6a4:	5f 93       	push	r21
     6a6:	6f 93       	push	r22
     6a8:	7f 93       	push	r23
     6aa:	8f 93       	push	r24
     6ac:	9f 93       	push	r25
     6ae:	af 93       	push	r26
     6b0:	bf 93       	push	r27
     6b2:	ef 93       	push	r30
     6b4:	ff 93       	push	r31
	if (millis < UINT16_MAX) millis++;
     6b6:	80 91 3c 40 	lds	r24, 0x403C	; 0x80403c <millis>
     6ba:	90 91 3d 40 	lds	r25, 0x403D	; 0x80403d <millis+0x1>
     6be:	01 96       	adiw	r24, 0x01	; 1
     6c0:	49 f0       	breq	.+18     	; 0x6d4 <__vector_47+0x40>
     6c2:	80 91 3c 40 	lds	r24, 0x403C	; 0x80403c <millis>
     6c6:	90 91 3d 40 	lds	r25, 0x403D	; 0x80403d <millis+0x1>
     6ca:	01 96       	adiw	r24, 0x01	; 1
     6cc:	80 93 3c 40 	sts	0x403C, r24	; 0x80403c <millis>
     6d0:	90 93 3d 40 	sts	0x403D, r25	; 0x80403d <millis+0x1>
	dc_cmp = (dc_cmp + 1) % sawtooth_period;
     6d4:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <dc_cmp>
     6d8:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <dc_cmp+0x1>
     6dc:	01 96       	adiw	r24, 0x01	; 1
     6de:	60 91 00 40 	lds	r22, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     6e2:	70 91 01 40 	lds	r23, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
     6e6:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__divmodhi4>
     6ea:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <dc_cmp>
     6ee:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <dc_cmp+0x1>
	
	TCA1.SINGLE.INTFLAGS |= TCA_SINGLE_OVF_bm;
     6f2:	e0 e4       	ldi	r30, 0x40	; 64
     6f4:	fa e0       	ldi	r31, 0x0A	; 10
     6f6:	83 85       	ldd	r24, Z+11	; 0x0b
     6f8:	81 60       	ori	r24, 0x01	; 1
     6fa:	83 87       	std	Z+11, r24	; 0x0b
     6fc:	ff 91       	pop	r31
     6fe:	ef 91       	pop	r30
     700:	bf 91       	pop	r27
     702:	af 91       	pop	r26
     704:	9f 91       	pop	r25
     706:	8f 91       	pop	r24
     708:	7f 91       	pop	r23
     70a:	6f 91       	pop	r22
     70c:	5f 91       	pop	r21
     70e:	2f 91       	pop	r18
     710:	0f 90       	pop	r0
     712:	0b be       	out	0x3b, r0	; 59
     714:	0f 90       	pop	r0
     716:	0f be       	out	0x3f, r0	; 63
     718:	0f 90       	pop	r0
     71a:	1f 90       	pop	r1
     71c:	18 95       	reti

0000071e <usart_init>:
#include "uart.h"

#define SMPL 16

void* usart_init(uint8_t usartnum, uint32_t baud_rate)
{
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
    USART_t* usart;

    if (usartnum == 0) {
     722:	81 11       	cpse	r24, r1
     724:	06 c0       	rjmp	.+12     	; 0x732 <usart_init+0x14>
        usart = &USART0;
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__TEXT_REGION_LENGTH__+0x7e0401>
void* usart_init(uint8_t usartnum, uint32_t baud_rate)
{
    USART_t* usart;

    if (usartnum == 0) {
        usart = &USART0;
     72c:	c0 e0       	ldi	r28, 0x00	; 0
     72e:	d8 e0       	ldi	r29, 0x08	; 8
     730:	19 c0       	rjmp	.+50     	; 0x764 <usart_init+0x46>
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
    }
    else if (usartnum == 1) {
     732:	81 30       	cpi	r24, 0x01	; 1
     734:	29 f4       	brne	.+10     	; 0x740 <usart_init+0x22>
        usart = &USART1;
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
     736:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <__TEXT_REGION_LENGTH__+0x7e0441>
        usart = &USART0;
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
    }
    else if (usartnum == 1) {
        usart = &USART1;
     73a:	c0 e2       	ldi	r28, 0x20	; 32
     73c:	d8 e0       	ldi	r29, 0x08	; 8
     73e:	12 c0       	rjmp	.+36     	; 0x764 <usart_init+0x46>
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
    }
    else if (usartnum == 2) {
     740:	82 30       	cpi	r24, 0x02	; 2
     742:	31 f4       	brne	.+12     	; 0x750 <usart_init+0x32>
        usart = &USART2;
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	80 93 a1 04 	sts	0x04A1, r24	; 0x8004a1 <__TEXT_REGION_LENGTH__+0x7e04a1>
        usart = &USART1;
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
    }
    else if (usartnum == 2) {
        usart = &USART2;
     74a:	c0 e4       	ldi	r28, 0x40	; 64
     74c:	d8 e0       	ldi	r29, 0x08	; 8
     74e:	0a c0       	rjmp	.+20     	; 0x764 <usart_init+0x46>
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
    }
    else if (usartnum == 3) {
     750:	83 30       	cpi	r24, 0x03	; 3
     752:	31 f4       	brne	.+12     	; 0x760 <usart_init+0x42>
        usart = &USART3;
        // enable USART3 TX pin
        PORTB.DIRSET = PIN0_bm;
     754:	81 e0       	ldi	r24, 0x01	; 1
     756:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <__TEXT_REGION_LENGTH__+0x7e0421>
        usart = &USART2;
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
    }
    else if (usartnum == 3) {
        usart = &USART3;
     75a:	c0 e6       	ldi	r28, 0x60	; 96
     75c:	d8 e0       	ldi	r29, 0x08	; 8
     75e:	02 c0       	rjmp	.+4      	; 0x764 <usart_init+0x46>
        // enable USART3 TX pin
        PORTB.DIRSET = PIN0_bm;
    } 
    else {
        usart = NULL;
     760:	c0 e0       	ldi	r28, 0x00	; 0
     762:	d0 e0       	ldi	r29, 0x00	; 0
    }

    // set BAUD and CTRLB registers
	// make sure to cast the BAUD to uint16_t before assigning
	usart->BAUD = (uint16_t)( (64 * F_CPU) / (SMPL * baud_rate) );
     764:	db 01       	movw	r26, r22
     766:	ca 01       	movw	r24, r20
     768:	88 0f       	add	r24, r24
     76a:	99 1f       	adc	r25, r25
     76c:	aa 1f       	adc	r26, r26
     76e:	bb 1f       	adc	r27, r27
     770:	88 0f       	add	r24, r24
     772:	99 1f       	adc	r25, r25
     774:	aa 1f       	adc	r26, r26
     776:	bb 1f       	adc	r27, r27
     778:	9c 01       	movw	r18, r24
     77a:	ad 01       	movw	r20, r26
     77c:	22 0f       	add	r18, r18
     77e:	33 1f       	adc	r19, r19
     780:	44 1f       	adc	r20, r20
     782:	55 1f       	adc	r21, r21
     784:	22 0f       	add	r18, r18
     786:	33 1f       	adc	r19, r19
     788:	44 1f       	adc	r20, r20
     78a:	55 1f       	adc	r21, r21
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	89 e0       	ldi	r24, 0x09	; 9
     792:	9d e3       	ldi	r25, 0x3D	; 61
     794:	0e 94 a2 07 	call	0xf44	; 0xf44 <__udivmodsi4>
     798:	28 87       	std	Y+8, r18	; 0x08
     79a:	39 87       	std	Y+9, r19	; 0x09
	usart->CTRLB |= USART_RXEN_bm | USART_TXEN_bm;
     79c:	8e 81       	ldd	r24, Y+6	; 0x06
     79e:	80 6c       	ori	r24, 0xC0	; 192
     7a0:	8e 83       	std	Y+6, r24	; 0x06
    return usart;
}
     7a2:	ce 01       	movw	r24, r28
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	08 95       	ret

000007aa <usart_transmit_data>:

void usart_transmit_data(void* ptr, char c)
{
    USART_t* usart = (USART_t*)ptr;
    // TODO send data
	usart->TXDATAL = c;
     7aa:	fc 01       	movw	r30, r24
     7ac:	62 83       	std	Z+2, r22	; 0x02
     7ae:	08 95       	ret

000007b0 <usart_wait_until_transmit_ready>:
}

void usart_wait_until_transmit_ready(void *ptr)
{
     7b0:	fc 01       	movw	r30, r24
    USART_t* usart = (USART_t*)ptr;
    // TODO wait until UART is ready to transmit
	while ( !(usart->STATUS & USART_DREIF_bm) );
     7b2:	94 81       	ldd	r25, Z+4	; 0x04
     7b4:	95 ff       	sbrs	r25, 5
     7b6:	fd cf       	rjmp	.-6      	; 0x7b2 <usart_wait_until_transmit_ready+0x2>
}
     7b8:	08 95       	ret

000007ba <usart_receive_data>:

int usart_receive_data(void* ptr)
{
     7ba:	fc 01       	movw	r30, r24
    USART_t* usart = (USART_t*)ptr;
    // TODO wait until data has arrived and then return the data
	while ( !(usart->STATUS & USART_RXCIF_bm) );
     7bc:	94 81       	ldd	r25, Z+4	; 0x04
     7be:	99 23       	and	r25, r25
     7c0:	ec f7       	brge	.-6      	; 0x7bc <usart_receive_data+0x2>
	return (usart->RXDATAL);
     7c2:	80 81       	ld	r24, Z
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	08 95       	ret

000007c8 <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	c8 2f       	mov	r28, r24
     7d0:	8b 01       	movw	r16, r22
	if (c == '\a') {
     7d2:	87 30       	cpi	r24, 0x07	; 7
     7d4:	69 f4       	brne	.+26     	; 0x7f0 <uart_putchar+0x28>
		fputs("*ring*\n", stderr);
     7d6:	20 91 94 40 	lds	r18, 0x4094	; 0x804094 <__iob+0x4>
     7da:	30 91 95 40 	lds	r19, 0x4095	; 0x804095 <__iob+0x5>
     7de:	47 e0       	ldi	r20, 0x07	; 7
     7e0:	50 e0       	ldi	r21, 0x00	; 0
     7e2:	61 e0       	ldi	r22, 0x01	; 1
     7e4:	70 e0       	ldi	r23, 0x00	; 0
     7e6:	89 e2       	ldi	r24, 0x29	; 41
     7e8:	90 e4       	ldi	r25, 0x40	; 64
     7ea:	0e 94 f8 07 	call	0xff0	; 0xff0 <fwrite>
		return 0;
     7ee:	0f c0       	rjmp	.+30     	; 0x80e <uart_putchar+0x46>
	}

	if (c == '\n') {
     7f0:	8a 30       	cpi	r24, 0x0A	; 10
     7f2:	19 f4       	brne	.+6      	; 0x7fa <uart_putchar+0x32>
		uart_putchar('\r', stream);
     7f4:	8d e0       	ldi	r24, 0x0D	; 13
     7f6:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
	}

	void* usart = fdev_get_udata(stream);
     7fa:	f8 01       	movw	r30, r16
     7fc:	04 85       	ldd	r16, Z+12	; 0x0c
     7fe:	15 85       	ldd	r17, Z+13	; 0x0d
	usart_wait_until_transmit_ready(usart);
     800:	c8 01       	movw	r24, r16
     802:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <usart_wait_until_transmit_ready>
	usart_transmit_data(usart, c);
     806:	6c 2f       	mov	r22, r28
     808:	c8 01       	movw	r24, r16
     80a:	0e 94 d5 03 	call	0x7aa	; 0x7aa <usart_transmit_data>

	return 0;
}
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	08 95       	ret

0000081a <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     81a:	ef 92       	push	r14
     81c:	ff 92       	push	r15
     81e:	0f 93       	push	r16
     820:	1f 93       	push	r17
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
	uint8_t c;
	char *cp, *cp2;
	static char b[RX_BUFSIZE];
	static char *rxp;

	if (rxp == 0) {
     826:	20 91 8e 40 	lds	r18, 0x408E	; 0x80408e <rxp.1995>
     82a:	30 91 8f 40 	lds	r19, 0x408F	; 0x80408f <rxp.1995+0x1>
     82e:	23 2b       	or	r18, r19
     830:	09 f0       	breq	.+2      	; 0x834 <uart_getchar+0x1a>
     832:	9a c0       	rjmp	.+308    	; 0x968 <uart_getchar+0x14e>
     834:	8c 01       	movw	r16, r24
     836:	ce e3       	ldi	r28, 0x3E	; 62
     838:	d0 e4       	ldi	r29, 0x40	; 64
		for (cp = b;;) {
			void* usart = fdev_get_udata(stream);
			c = usart_receive_data(usart);
     83a:	f8 01       	movw	r30, r16
     83c:	84 85       	ldd	r24, Z+12	; 0x0c
     83e:	95 85       	ldd	r25, Z+13	; 0x0d
     840:	0e 94 dd 03 	call	0x7ba	; 0x7ba <usart_receive_data>

			/* behaviour similar to Unix stty ICRNL */
			if (c == '\r')
     844:	8d 30       	cpi	r24, 0x0D	; 13
     846:	09 f4       	brne	.+2      	; 0x84a <uart_getchar+0x30>
				c = '\n';
     848:	8a e0       	ldi	r24, 0x0A	; 10
			if (c == '\n') {
     84a:	8a 30       	cpi	r24, 0x0A	; 10
     84c:	59 f4       	brne	.+22     	; 0x864 <uart_getchar+0x4a>
			    *cp = c;
     84e:	88 83       	st	Y, r24
				uart_putchar(c, stream);
     850:	b8 01       	movw	r22, r16
     852:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
			    rxp = b;
     856:	8e e3       	ldi	r24, 0x3E	; 62
     858:	90 e4       	ldi	r25, 0x40	; 64
     85a:	80 93 8e 40 	sts	0x408E, r24	; 0x80408e <rxp.1995>
     85e:	90 93 8f 40 	sts	0x408F, r25	; 0x80408f <rxp.1995+0x1>
				break;
     862:	82 c0       	rjmp	.+260    	; 0x968 <uart_getchar+0x14e>
			}
			else if (c == '\t')
     864:	89 30       	cpi	r24, 0x09	; 9
     866:	09 f4       	brne	.+2      	; 0x86a <uart_getchar+0x50>
				c = ' ';
     868:	80 e2       	ldi	r24, 0x20	; 32

			if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     86a:	90 ee       	ldi	r25, 0xE0	; 224
     86c:	98 0f       	add	r25, r24
     86e:	9f 35       	cpi	r25, 0x5F	; 95
     870:	10 f0       	brcs	.+4      	; 0x876 <uart_getchar+0x5c>
     872:	80 3a       	cpi	r24, 0xA0	; 160
     874:	98 f0       	brcs	.+38     	; 0x89c <uart_getchar+0x82>
				c >= (uint8_t)'\xa0') {
			    if (cp == b + RX_BUFSIZE - 1)
     876:	f0 e4       	ldi	r31, 0x40	; 64
     878:	cd 38       	cpi	r28, 0x8D	; 141
     87a:	df 07       	cpc	r29, r31
     87c:	29 f4       	brne	.+10     	; 0x888 <uart_getchar+0x6e>
					uart_putchar('\a', stream);
     87e:	b8 01       	movw	r22, r16
     880:	87 e0       	ldi	r24, 0x07	; 7
     882:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
     886:	d9 cf       	rjmp	.-78     	; 0x83a <uart_getchar+0x20>
				else {
					*cp++ = c;
     888:	7e 01       	movw	r14, r28
     88a:	9f ef       	ldi	r25, 0xFF	; 255
     88c:	e9 1a       	sub	r14, r25
     88e:	f9 0a       	sbc	r15, r25
     890:	88 83       	st	Y, r24
					uart_putchar(c, stream);
     892:	b8 01       	movw	r22, r16
     894:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
			if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
				c >= (uint8_t)'\xa0') {
			    if (cp == b + RX_BUFSIZE - 1)
					uart_putchar('\a', stream);
				else {
					*cp++ = c;
     898:	e7 01       	movw	r28, r14
					uart_putchar(c, stream);
				}
			    continue;
     89a:	cf cf       	rjmp	.-98     	; 0x83a <uart_getchar+0x20>
			}

			switch (c) {
     89c:	82 31       	cpi	r24, 0x12	; 18
     89e:	19 f1       	breq	.+70     	; 0x8e6 <uart_getchar+0xcc>
     8a0:	30 f4       	brcc	.+12     	; 0x8ae <uart_getchar+0x94>
     8a2:	83 30       	cpi	r24, 0x03	; 3
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <uart_getchar+0x8e>
     8a6:	73 c0       	rjmp	.+230    	; 0x98e <uart_getchar+0x174>
     8a8:	88 30       	cpi	r24, 0x08	; 8
     8aa:	49 f0       	breq	.+18     	; 0x8be <uart_getchar+0xa4>
     8ac:	c6 cf       	rjmp	.-116    	; 0x83a <uart_getchar+0x20>
     8ae:	87 31       	cpi	r24, 0x17	; 23
     8b0:	09 f4       	brne	.+2      	; 0x8b4 <uart_getchar+0x9a>
     8b2:	4e c0       	rjmp	.+156    	; 0x950 <uart_getchar+0x136>
     8b4:	8f 37       	cpi	r24, 0x7F	; 127
     8b6:	19 f0       	breq	.+6      	; 0x8be <uart_getchar+0xa4>
     8b8:	85 31       	cpi	r24, 0x15	; 21
     8ba:	b9 f1       	breq	.+110    	; 0x92a <uart_getchar+0x110>
     8bc:	be cf       	rjmp	.-132    	; 0x83a <uart_getchar+0x20>
				case 'c' & 0x1f:
				    return -1;

				case '\b':
				case '\x7f':
				    if (cp > b) {
     8be:	e0 e4       	ldi	r30, 0x40	; 64
     8c0:	ce 33       	cpi	r28, 0x3E	; 62
     8c2:	de 07       	cpc	r29, r30
     8c4:	09 f0       	breq	.+2      	; 0x8c8 <uart_getchar+0xae>
     8c6:	08 f4       	brcc	.+2      	; 0x8ca <uart_getchar+0xb0>
     8c8:	b8 cf       	rjmp	.-144    	; 0x83a <uart_getchar+0x20>
						uart_putchar('\b', stream);
     8ca:	b8 01       	movw	r22, r16
     8cc:	88 e0       	ldi	r24, 0x08	; 8
     8ce:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						uart_putchar(' ', stream);
     8d2:	b8 01       	movw	r22, r16
     8d4:	80 e2       	ldi	r24, 0x20	; 32
     8d6:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						uart_putchar('\b', stream);
     8da:	b8 01       	movw	r22, r16
     8dc:	88 e0       	ldi	r24, 0x08	; 8
     8de:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						cp--;
     8e2:	21 97       	sbiw	r28, 0x01	; 1
     8e4:	aa cf       	rjmp	.-172    	; 0x83a <uart_getchar+0x20>
					}
					break;

				case 'r' & 0x1f:
					uart_putchar('\r', stream);
     8e6:	b8 01       	movw	r22, r16
     8e8:	8d e0       	ldi	r24, 0x0D	; 13
     8ea:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
					for (cp2 = b; cp2 < cp; cp2++)
     8ee:	0f 2e       	mov	r0, r31
     8f0:	fe e3       	ldi	r31, 0x3E	; 62
     8f2:	ef 2e       	mov	r14, r31
     8f4:	f0 e4       	ldi	r31, 0x40	; 64
     8f6:	ff 2e       	mov	r15, r31
     8f8:	f0 2d       	mov	r31, r0
     8fa:	06 c0       	rjmp	.+12     	; 0x908 <uart_getchar+0xee>
						uart_putchar(*cp2, stream);
     8fc:	b8 01       	movw	r22, r16
     8fe:	f7 01       	movw	r30, r14
     900:	81 91       	ld	r24, Z+
     902:	7f 01       	movw	r14, r30
     904:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
					}
					break;

				case 'r' & 0x1f:
					uart_putchar('\r', stream);
					for (cp2 = b; cp2 < cp; cp2++)
     908:	ec 16       	cp	r14, r28
     90a:	fd 06       	cpc	r15, r29
     90c:	b8 f3       	brcs	.-18     	; 0x8fc <uart_getchar+0xe2>
     90e:	95 cf       	rjmp	.-214    	; 0x83a <uart_getchar+0x20>
						uart_putchar(*cp2, stream);
					break;

				case 'u' & 0x1f:
					while (cp > b) {
						uart_putchar('\b', stream);
     910:	b8 01       	movw	r22, r16
     912:	88 e0       	ldi	r24, 0x08	; 8
     914:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						uart_putchar(' ', stream);
     918:	b8 01       	movw	r22, r16
     91a:	80 e2       	ldi	r24, 0x20	; 32
     91c:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						uart_putchar('\b', stream);
     920:	b8 01       	movw	r22, r16
     922:	88 e0       	ldi	r24, 0x08	; 8
     924:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						cp--;
     928:	21 97       	sbiw	r28, 0x01	; 1
					for (cp2 = b; cp2 < cp; cp2++)
						uart_putchar(*cp2, stream);
					break;

				case 'u' & 0x1f:
					while (cp > b) {
     92a:	f0 e4       	ldi	r31, 0x40	; 64
     92c:	ce 33       	cpi	r28, 0x3E	; 62
     92e:	df 07       	cpc	r29, r31
     930:	09 f0       	breq	.+2      	; 0x934 <uart_getchar+0x11a>
     932:	70 f7       	brcc	.-36     	; 0x910 <uart_getchar+0xf6>
     934:	82 cf       	rjmp	.-252    	; 0x83a <uart_getchar+0x20>
					}
					break;

				case 'w' & 0x1f:
					while (cp > b && cp[-1] != ' ') {
						uart_putchar('\b', stream);
     936:	b8 01       	movw	r22, r16
     938:	88 e0       	ldi	r24, 0x08	; 8
     93a:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						uart_putchar(' ', stream);
     93e:	b8 01       	movw	r22, r16
     940:	80 e2       	ldi	r24, 0x20	; 32
     942:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						uart_putchar('\b', stream);
     946:	b8 01       	movw	r22, r16
     948:	88 e0       	ldi	r24, 0x08	; 8
     94a:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <uart_putchar>
						cp--;
     94e:	21 97       	sbiw	r28, 0x01	; 1
						cp--;
					}
					break;

				case 'w' & 0x1f:
					while (cp > b && cp[-1] != ' ') {
     950:	80 e4       	ldi	r24, 0x40	; 64
     952:	ce 33       	cpi	r28, 0x3E	; 62
     954:	d8 07       	cpc	r29, r24
     956:	09 f0       	breq	.+2      	; 0x95a <uart_getchar+0x140>
     958:	08 f4       	brcc	.+2      	; 0x95c <uart_getchar+0x142>
     95a:	6f cf       	rjmp	.-290    	; 0x83a <uart_getchar+0x20>
     95c:	fe 01       	movw	r30, r28
     95e:	31 97       	sbiw	r30, 0x01	; 1
     960:	80 81       	ld	r24, Z
     962:	80 32       	cpi	r24, 0x20	; 32
     964:	41 f7       	brne	.-48     	; 0x936 <uart_getchar+0x11c>
     966:	69 cf       	rjmp	.-302    	; 0x83a <uart_getchar+0x20>
					break;
			}
		}
	}

	c = *rxp++;
     968:	e0 91 8e 40 	lds	r30, 0x408E	; 0x80408e <rxp.1995>
     96c:	f0 91 8f 40 	lds	r31, 0x408F	; 0x80408f <rxp.1995+0x1>
     970:	cf 01       	movw	r24, r30
     972:	01 96       	adiw	r24, 0x01	; 1
     974:	80 93 8e 40 	sts	0x408E, r24	; 0x80408e <rxp.1995>
     978:	90 93 8f 40 	sts	0x408F, r25	; 0x80408f <rxp.1995+0x1>
     97c:	80 81       	ld	r24, Z
	if (c == '\n')
     97e:	8a 30       	cpi	r24, 0x0A	; 10
     980:	21 f4       	brne	.+8      	; 0x98a <uart_getchar+0x170>
		rxp = 0;
     982:	10 92 8e 40 	sts	0x408E, r1	; 0x80408e <rxp.1995>
     986:	10 92 8f 40 	sts	0x408F, r1	; 0x80408f <rxp.1995+0x1>

	return c;
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	02 c0       	rjmp	.+4      	; 0x992 <uart_getchar+0x178>
			    continue;
			}

			switch (c) {
				case 'c' & 0x1f:
				    return -1;
     98e:	8f ef       	ldi	r24, 0xFF	; 255
     990:	9f ef       	ldi	r25, 0xFF	; 255
	c = *rxp++;
	if (c == '\n')
		rxp = 0;

	return c;
}
     992:	df 91       	pop	r29
     994:	cf 91       	pop	r28
     996:	1f 91       	pop	r17
     998:	0f 91       	pop	r16
     99a:	ff 90       	pop	r15
     99c:	ef 90       	pop	r14
     99e:	08 95       	ret

000009a0 <uart_init>:
/*
 * Initialize the UART to 9600 Bd, tx/rx, 8N1.
 */
FILE*
uart_init(uint8_t usartnum, uint32_t baud_rate, FILE* stream)
{
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
     9a4:	e9 01       	movw	r28, r18
	if (stream) {
     9a6:	20 97       	sbiw	r28, 0x00	; 0
     9a8:	49 f0       	breq	.+18     	; 0x9bc <uart_init+0x1c>
		*stream = uartFile;
     9aa:	9e e0       	ldi	r25, 0x0E	; 14
     9ac:	e2 e0       	ldi	r30, 0x02	; 2
     9ae:	f0 e4       	ldi	r31, 0x40	; 64
     9b0:	d9 01       	movw	r26, r18
     9b2:	01 90       	ld	r0, Z+
     9b4:	0d 92       	st	X+, r0
     9b6:	9a 95       	dec	r25
     9b8:	e1 f7       	brne	.-8      	; 0x9b2 <uart_init+0x12>
     9ba:	0b c0       	rjmp	.+22     	; 0x9d2 <uart_init+0x32>
	} else {
		stdout = &uartFile;
     9bc:	e0 e9       	ldi	r30, 0x90	; 144
     9be:	f0 e4       	ldi	r31, 0x40	; 64
     9c0:	22 e0       	ldi	r18, 0x02	; 2
     9c2:	30 e4       	ldi	r19, 0x40	; 64
     9c4:	22 83       	std	Z+2, r18	; 0x02
     9c6:	33 83       	std	Z+3, r19	; 0x03
		stdin = &uartFile;
     9c8:	20 83       	st	Z, r18
     9ca:	31 83       	std	Z+1, r19	; 0x01
		stderr = &uartFile;
     9cc:	24 83       	std	Z+4, r18	; 0x04
     9ce:	35 83       	std	Z+5, r19	; 0x05
		stream = &uartFile;
     9d0:	e9 01       	movw	r28, r18
	}

	void* usart = usart_init(usartnum, baud_rate);
     9d2:	0e 94 8f 03 	call	0x71e	; 0x71e <usart_init>
	fdev_set_udata(stream, usart);
     9d6:	8c 87       	std	Y+12, r24	; 0x0c
     9d8:	9d 87       	std	Y+13, r25	; 0x0d
	  
	return stream;
}
     9da:	ce 01       	movw	r24, r28
     9dc:	df 91       	pop	r29
     9de:	cf 91       	pop	r28
     9e0:	08 95       	ret

000009e2 <__subsf3>:
     9e2:	50 58       	subi	r21, 0x80	; 128

000009e4 <__addsf3>:
     9e4:	bb 27       	eor	r27, r27
     9e6:	aa 27       	eor	r26, r26
     9e8:	0e 94 09 05 	call	0xa12	; 0xa12 <__addsf3x>
     9ec:	0c 94 8a 06 	jmp	0xd14	; 0xd14 <__fp_round>
     9f0:	0e 94 51 06 	call	0xca2	; 0xca2 <__fp_pscA>
     9f4:	38 f0       	brcs	.+14     	; 0xa04 <__addsf3+0x20>
     9f6:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__fp_pscB>
     9fa:	20 f0       	brcs	.+8      	; 0xa04 <__addsf3+0x20>
     9fc:	39 f4       	brne	.+14     	; 0xa0c <__addsf3+0x28>
     9fe:	9f 3f       	cpi	r25, 0xFF	; 255
     a00:	19 f4       	brne	.+6      	; 0xa08 <__addsf3+0x24>
     a02:	26 f4       	brtc	.+8      	; 0xa0c <__addsf3+0x28>
     a04:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_nan>
     a08:	0e f4       	brtc	.+2      	; 0xa0c <__addsf3+0x28>
     a0a:	e0 95       	com	r30
     a0c:	e7 fb       	bst	r30, 7
     a0e:	0c 94 48 06 	jmp	0xc90	; 0xc90 <__fp_inf>

00000a12 <__addsf3x>:
     a12:	e9 2f       	mov	r30, r25
     a14:	0e 94 af 06 	call	0xd5e	; 0xd5e <__fp_split3>
     a18:	58 f3       	brcs	.-42     	; 0x9f0 <__addsf3+0xc>
     a1a:	ba 17       	cp	r27, r26
     a1c:	62 07       	cpc	r22, r18
     a1e:	73 07       	cpc	r23, r19
     a20:	84 07       	cpc	r24, r20
     a22:	95 07       	cpc	r25, r21
     a24:	20 f0       	brcs	.+8      	; 0xa2e <__addsf3x+0x1c>
     a26:	79 f4       	brne	.+30     	; 0xa46 <__addsf3x+0x34>
     a28:	a6 f5       	brtc	.+104    	; 0xa92 <__addsf3x+0x80>
     a2a:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_zero>
     a2e:	0e f4       	brtc	.+2      	; 0xa32 <__addsf3x+0x20>
     a30:	e0 95       	com	r30
     a32:	0b 2e       	mov	r0, r27
     a34:	ba 2f       	mov	r27, r26
     a36:	a0 2d       	mov	r26, r0
     a38:	0b 01       	movw	r0, r22
     a3a:	b9 01       	movw	r22, r18
     a3c:	90 01       	movw	r18, r0
     a3e:	0c 01       	movw	r0, r24
     a40:	ca 01       	movw	r24, r20
     a42:	a0 01       	movw	r20, r0
     a44:	11 24       	eor	r1, r1
     a46:	ff 27       	eor	r31, r31
     a48:	59 1b       	sub	r21, r25
     a4a:	99 f0       	breq	.+38     	; 0xa72 <__addsf3x+0x60>
     a4c:	59 3f       	cpi	r21, 0xF9	; 249
     a4e:	50 f4       	brcc	.+20     	; 0xa64 <__addsf3x+0x52>
     a50:	50 3e       	cpi	r21, 0xE0	; 224
     a52:	68 f1       	brcs	.+90     	; 0xaae <__addsf3x+0x9c>
     a54:	1a 16       	cp	r1, r26
     a56:	f0 40       	sbci	r31, 0x00	; 0
     a58:	a2 2f       	mov	r26, r18
     a5a:	23 2f       	mov	r18, r19
     a5c:	34 2f       	mov	r19, r20
     a5e:	44 27       	eor	r20, r20
     a60:	58 5f       	subi	r21, 0xF8	; 248
     a62:	f3 cf       	rjmp	.-26     	; 0xa4a <__addsf3x+0x38>
     a64:	46 95       	lsr	r20
     a66:	37 95       	ror	r19
     a68:	27 95       	ror	r18
     a6a:	a7 95       	ror	r26
     a6c:	f0 40       	sbci	r31, 0x00	; 0
     a6e:	53 95       	inc	r21
     a70:	c9 f7       	brne	.-14     	; 0xa64 <__addsf3x+0x52>
     a72:	7e f4       	brtc	.+30     	; 0xa92 <__addsf3x+0x80>
     a74:	1f 16       	cp	r1, r31
     a76:	ba 0b       	sbc	r27, r26
     a78:	62 0b       	sbc	r22, r18
     a7a:	73 0b       	sbc	r23, r19
     a7c:	84 0b       	sbc	r24, r20
     a7e:	ba f0       	brmi	.+46     	; 0xaae <__addsf3x+0x9c>
     a80:	91 50       	subi	r25, 0x01	; 1
     a82:	a1 f0       	breq	.+40     	; 0xaac <__addsf3x+0x9a>
     a84:	ff 0f       	add	r31, r31
     a86:	bb 1f       	adc	r27, r27
     a88:	66 1f       	adc	r22, r22
     a8a:	77 1f       	adc	r23, r23
     a8c:	88 1f       	adc	r24, r24
     a8e:	c2 f7       	brpl	.-16     	; 0xa80 <__addsf3x+0x6e>
     a90:	0e c0       	rjmp	.+28     	; 0xaae <__addsf3x+0x9c>
     a92:	ba 0f       	add	r27, r26
     a94:	62 1f       	adc	r22, r18
     a96:	73 1f       	adc	r23, r19
     a98:	84 1f       	adc	r24, r20
     a9a:	48 f4       	brcc	.+18     	; 0xaae <__addsf3x+0x9c>
     a9c:	87 95       	ror	r24
     a9e:	77 95       	ror	r23
     aa0:	67 95       	ror	r22
     aa2:	b7 95       	ror	r27
     aa4:	f7 95       	ror	r31
     aa6:	9e 3f       	cpi	r25, 0xFE	; 254
     aa8:	08 f0       	brcs	.+2      	; 0xaac <__addsf3x+0x9a>
     aaa:	b0 cf       	rjmp	.-160    	; 0xa0c <__addsf3+0x28>
     aac:	93 95       	inc	r25
     aae:	88 0f       	add	r24, r24
     ab0:	08 f0       	brcs	.+2      	; 0xab4 <__addsf3x+0xa2>
     ab2:	99 27       	eor	r25, r25
     ab4:	ee 0f       	add	r30, r30
     ab6:	97 95       	ror	r25
     ab8:	87 95       	ror	r24
     aba:	08 95       	ret

00000abc <cos>:
     abc:	0e 94 61 06 	call	0xcc2	; 0xcc2 <__fp_rempio2>
     ac0:	e3 95       	inc	r30
     ac2:	0c 94 9b 06 	jmp	0xd36	; 0xd36 <__fp_sinus>

00000ac6 <__divsf3>:
     ac6:	0e 94 77 05 	call	0xaee	; 0xaee <__divsf3x>
     aca:	0c 94 8a 06 	jmp	0xd14	; 0xd14 <__fp_round>
     ace:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__fp_pscB>
     ad2:	58 f0       	brcs	.+22     	; 0xaea <__divsf3+0x24>
     ad4:	0e 94 51 06 	call	0xca2	; 0xca2 <__fp_pscA>
     ad8:	40 f0       	brcs	.+16     	; 0xaea <__divsf3+0x24>
     ada:	29 f4       	brne	.+10     	; 0xae6 <__divsf3+0x20>
     adc:	5f 3f       	cpi	r21, 0xFF	; 255
     ade:	29 f0       	breq	.+10     	; 0xaea <__divsf3+0x24>
     ae0:	0c 94 48 06 	jmp	0xc90	; 0xc90 <__fp_inf>
     ae4:	51 11       	cpse	r21, r1
     ae6:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_szero>
     aea:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_nan>

00000aee <__divsf3x>:
     aee:	0e 94 af 06 	call	0xd5e	; 0xd5e <__fp_split3>
     af2:	68 f3       	brcs	.-38     	; 0xace <__divsf3+0x8>

00000af4 <__divsf3_pse>:
     af4:	99 23       	and	r25, r25
     af6:	b1 f3       	breq	.-20     	; 0xae4 <__divsf3+0x1e>
     af8:	55 23       	and	r21, r21
     afa:	91 f3       	breq	.-28     	; 0xae0 <__divsf3+0x1a>
     afc:	95 1b       	sub	r25, r21
     afe:	55 0b       	sbc	r21, r21
     b00:	bb 27       	eor	r27, r27
     b02:	aa 27       	eor	r26, r26
     b04:	62 17       	cp	r22, r18
     b06:	73 07       	cpc	r23, r19
     b08:	84 07       	cpc	r24, r20
     b0a:	38 f0       	brcs	.+14     	; 0xb1a <__divsf3_pse+0x26>
     b0c:	9f 5f       	subi	r25, 0xFF	; 255
     b0e:	5f 4f       	sbci	r21, 0xFF	; 255
     b10:	22 0f       	add	r18, r18
     b12:	33 1f       	adc	r19, r19
     b14:	44 1f       	adc	r20, r20
     b16:	aa 1f       	adc	r26, r26
     b18:	a9 f3       	breq	.-22     	; 0xb04 <__divsf3_pse+0x10>
     b1a:	35 d0       	rcall	.+106    	; 0xb86 <__divsf3_pse+0x92>
     b1c:	0e 2e       	mov	r0, r30
     b1e:	3a f0       	brmi	.+14     	; 0xb2e <__divsf3_pse+0x3a>
     b20:	e0 e8       	ldi	r30, 0x80	; 128
     b22:	32 d0       	rcall	.+100    	; 0xb88 <__divsf3_pse+0x94>
     b24:	91 50       	subi	r25, 0x01	; 1
     b26:	50 40       	sbci	r21, 0x00	; 0
     b28:	e6 95       	lsr	r30
     b2a:	00 1c       	adc	r0, r0
     b2c:	ca f7       	brpl	.-14     	; 0xb20 <__divsf3_pse+0x2c>
     b2e:	2b d0       	rcall	.+86     	; 0xb86 <__divsf3_pse+0x92>
     b30:	fe 2f       	mov	r31, r30
     b32:	29 d0       	rcall	.+82     	; 0xb86 <__divsf3_pse+0x92>
     b34:	66 0f       	add	r22, r22
     b36:	77 1f       	adc	r23, r23
     b38:	88 1f       	adc	r24, r24
     b3a:	bb 1f       	adc	r27, r27
     b3c:	26 17       	cp	r18, r22
     b3e:	37 07       	cpc	r19, r23
     b40:	48 07       	cpc	r20, r24
     b42:	ab 07       	cpc	r26, r27
     b44:	b0 e8       	ldi	r27, 0x80	; 128
     b46:	09 f0       	breq	.+2      	; 0xb4a <__divsf3_pse+0x56>
     b48:	bb 0b       	sbc	r27, r27
     b4a:	80 2d       	mov	r24, r0
     b4c:	bf 01       	movw	r22, r30
     b4e:	ff 27       	eor	r31, r31
     b50:	93 58       	subi	r25, 0x83	; 131
     b52:	5f 4f       	sbci	r21, 0xFF	; 255
     b54:	3a f0       	brmi	.+14     	; 0xb64 <__divsf3_pse+0x70>
     b56:	9e 3f       	cpi	r25, 0xFE	; 254
     b58:	51 05       	cpc	r21, r1
     b5a:	78 f0       	brcs	.+30     	; 0xb7a <__divsf3_pse+0x86>
     b5c:	0c 94 48 06 	jmp	0xc90	; 0xc90 <__fp_inf>
     b60:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_szero>
     b64:	5f 3f       	cpi	r21, 0xFF	; 255
     b66:	e4 f3       	brlt	.-8      	; 0xb60 <__divsf3_pse+0x6c>
     b68:	98 3e       	cpi	r25, 0xE8	; 232
     b6a:	d4 f3       	brlt	.-12     	; 0xb60 <__divsf3_pse+0x6c>
     b6c:	86 95       	lsr	r24
     b6e:	77 95       	ror	r23
     b70:	67 95       	ror	r22
     b72:	b7 95       	ror	r27
     b74:	f7 95       	ror	r31
     b76:	9f 5f       	subi	r25, 0xFF	; 255
     b78:	c9 f7       	brne	.-14     	; 0xb6c <__divsf3_pse+0x78>
     b7a:	88 0f       	add	r24, r24
     b7c:	91 1d       	adc	r25, r1
     b7e:	96 95       	lsr	r25
     b80:	87 95       	ror	r24
     b82:	97 f9       	bld	r25, 7
     b84:	08 95       	ret
     b86:	e1 e0       	ldi	r30, 0x01	; 1
     b88:	66 0f       	add	r22, r22
     b8a:	77 1f       	adc	r23, r23
     b8c:	88 1f       	adc	r24, r24
     b8e:	bb 1f       	adc	r27, r27
     b90:	62 17       	cp	r22, r18
     b92:	73 07       	cpc	r23, r19
     b94:	84 07       	cpc	r24, r20
     b96:	ba 07       	cpc	r27, r26
     b98:	20 f0       	brcs	.+8      	; 0xba2 <__divsf3_pse+0xae>
     b9a:	62 1b       	sub	r22, r18
     b9c:	73 0b       	sbc	r23, r19
     b9e:	84 0b       	sbc	r24, r20
     ba0:	ba 0b       	sbc	r27, r26
     ba2:	ee 1f       	adc	r30, r30
     ba4:	88 f7       	brcc	.-30     	; 0xb88 <__divsf3_pse+0x94>
     ba6:	e0 95       	com	r30
     ba8:	08 95       	ret

00000baa <__fixsfsi>:
     baa:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__fixunssfsi>
     bae:	68 94       	set
     bb0:	b1 11       	cpse	r27, r1
     bb2:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_szero>
     bb6:	08 95       	ret

00000bb8 <__fixunssfsi>:
     bb8:	0e 94 b7 06 	call	0xd6e	; 0xd6e <__fp_splitA>
     bbc:	88 f0       	brcs	.+34     	; 0xbe0 <__fixunssfsi+0x28>
     bbe:	9f 57       	subi	r25, 0x7F	; 127
     bc0:	98 f0       	brcs	.+38     	; 0xbe8 <__fixunssfsi+0x30>
     bc2:	b9 2f       	mov	r27, r25
     bc4:	99 27       	eor	r25, r25
     bc6:	b7 51       	subi	r27, 0x17	; 23
     bc8:	b0 f0       	brcs	.+44     	; 0xbf6 <__fixunssfsi+0x3e>
     bca:	e1 f0       	breq	.+56     	; 0xc04 <__fixunssfsi+0x4c>
     bcc:	66 0f       	add	r22, r22
     bce:	77 1f       	adc	r23, r23
     bd0:	88 1f       	adc	r24, r24
     bd2:	99 1f       	adc	r25, r25
     bd4:	1a f0       	brmi	.+6      	; 0xbdc <__fixunssfsi+0x24>
     bd6:	ba 95       	dec	r27
     bd8:	c9 f7       	brne	.-14     	; 0xbcc <__fixunssfsi+0x14>
     bda:	14 c0       	rjmp	.+40     	; 0xc04 <__fixunssfsi+0x4c>
     bdc:	b1 30       	cpi	r27, 0x01	; 1
     bde:	91 f0       	breq	.+36     	; 0xc04 <__fixunssfsi+0x4c>
     be0:	0e 94 d1 06 	call	0xda2	; 0xda2 <__fp_zero>
     be4:	b1 e0       	ldi	r27, 0x01	; 1
     be6:	08 95       	ret
     be8:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_zero>
     bec:	67 2f       	mov	r22, r23
     bee:	78 2f       	mov	r23, r24
     bf0:	88 27       	eor	r24, r24
     bf2:	b8 5f       	subi	r27, 0xF8	; 248
     bf4:	39 f0       	breq	.+14     	; 0xc04 <__fixunssfsi+0x4c>
     bf6:	b9 3f       	cpi	r27, 0xF9	; 249
     bf8:	cc f3       	brlt	.-14     	; 0xbec <__fixunssfsi+0x34>
     bfa:	86 95       	lsr	r24
     bfc:	77 95       	ror	r23
     bfe:	67 95       	ror	r22
     c00:	b3 95       	inc	r27
     c02:	d9 f7       	brne	.-10     	; 0xbfa <__fixunssfsi+0x42>
     c04:	3e f4       	brtc	.+14     	; 0xc14 <__fixunssfsi+0x5c>
     c06:	90 95       	com	r25
     c08:	80 95       	com	r24
     c0a:	70 95       	com	r23
     c0c:	61 95       	neg	r22
     c0e:	7f 4f       	sbci	r23, 0xFF	; 255
     c10:	8f 4f       	sbci	r24, 0xFF	; 255
     c12:	9f 4f       	sbci	r25, 0xFF	; 255
     c14:	08 95       	ret

00000c16 <__floatunsisf>:
     c16:	e8 94       	clt
     c18:	09 c0       	rjmp	.+18     	; 0xc2c <__floatsisf+0x12>

00000c1a <__floatsisf>:
     c1a:	97 fb       	bst	r25, 7
     c1c:	3e f4       	brtc	.+14     	; 0xc2c <__floatsisf+0x12>
     c1e:	90 95       	com	r25
     c20:	80 95       	com	r24
     c22:	70 95       	com	r23
     c24:	61 95       	neg	r22
     c26:	7f 4f       	sbci	r23, 0xFF	; 255
     c28:	8f 4f       	sbci	r24, 0xFF	; 255
     c2a:	9f 4f       	sbci	r25, 0xFF	; 255
     c2c:	99 23       	and	r25, r25
     c2e:	a9 f0       	breq	.+42     	; 0xc5a <__floatsisf+0x40>
     c30:	f9 2f       	mov	r31, r25
     c32:	96 e9       	ldi	r25, 0x96	; 150
     c34:	bb 27       	eor	r27, r27
     c36:	93 95       	inc	r25
     c38:	f6 95       	lsr	r31
     c3a:	87 95       	ror	r24
     c3c:	77 95       	ror	r23
     c3e:	67 95       	ror	r22
     c40:	b7 95       	ror	r27
     c42:	f1 11       	cpse	r31, r1
     c44:	f8 cf       	rjmp	.-16     	; 0xc36 <__floatsisf+0x1c>
     c46:	fa f4       	brpl	.+62     	; 0xc86 <__floatsisf+0x6c>
     c48:	bb 0f       	add	r27, r27
     c4a:	11 f4       	brne	.+4      	; 0xc50 <__floatsisf+0x36>
     c4c:	60 ff       	sbrs	r22, 0
     c4e:	1b c0       	rjmp	.+54     	; 0xc86 <__floatsisf+0x6c>
     c50:	6f 5f       	subi	r22, 0xFF	; 255
     c52:	7f 4f       	sbci	r23, 0xFF	; 255
     c54:	8f 4f       	sbci	r24, 0xFF	; 255
     c56:	9f 4f       	sbci	r25, 0xFF	; 255
     c58:	16 c0       	rjmp	.+44     	; 0xc86 <__floatsisf+0x6c>
     c5a:	88 23       	and	r24, r24
     c5c:	11 f0       	breq	.+4      	; 0xc62 <__floatsisf+0x48>
     c5e:	96 e9       	ldi	r25, 0x96	; 150
     c60:	11 c0       	rjmp	.+34     	; 0xc84 <__floatsisf+0x6a>
     c62:	77 23       	and	r23, r23
     c64:	21 f0       	breq	.+8      	; 0xc6e <__floatsisf+0x54>
     c66:	9e e8       	ldi	r25, 0x8E	; 142
     c68:	87 2f       	mov	r24, r23
     c6a:	76 2f       	mov	r23, r22
     c6c:	05 c0       	rjmp	.+10     	; 0xc78 <__floatsisf+0x5e>
     c6e:	66 23       	and	r22, r22
     c70:	71 f0       	breq	.+28     	; 0xc8e <__floatsisf+0x74>
     c72:	96 e8       	ldi	r25, 0x86	; 134
     c74:	86 2f       	mov	r24, r22
     c76:	70 e0       	ldi	r23, 0x00	; 0
     c78:	60 e0       	ldi	r22, 0x00	; 0
     c7a:	2a f0       	brmi	.+10     	; 0xc86 <__floatsisf+0x6c>
     c7c:	9a 95       	dec	r25
     c7e:	66 0f       	add	r22, r22
     c80:	77 1f       	adc	r23, r23
     c82:	88 1f       	adc	r24, r24
     c84:	da f7       	brpl	.-10     	; 0xc7c <__floatsisf+0x62>
     c86:	88 0f       	add	r24, r24
     c88:	96 95       	lsr	r25
     c8a:	87 95       	ror	r24
     c8c:	97 f9       	bld	r25, 7
     c8e:	08 95       	ret

00000c90 <__fp_inf>:
     c90:	97 f9       	bld	r25, 7
     c92:	9f 67       	ori	r25, 0x7F	; 127
     c94:	80 e8       	ldi	r24, 0x80	; 128
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	60 e0       	ldi	r22, 0x00	; 0
     c9a:	08 95       	ret

00000c9c <__fp_nan>:
     c9c:	9f ef       	ldi	r25, 0xFF	; 255
     c9e:	80 ec       	ldi	r24, 0xC0	; 192
     ca0:	08 95       	ret

00000ca2 <__fp_pscA>:
     ca2:	00 24       	eor	r0, r0
     ca4:	0a 94       	dec	r0
     ca6:	16 16       	cp	r1, r22
     ca8:	17 06       	cpc	r1, r23
     caa:	18 06       	cpc	r1, r24
     cac:	09 06       	cpc	r0, r25
     cae:	08 95       	ret

00000cb0 <__fp_pscB>:
     cb0:	00 24       	eor	r0, r0
     cb2:	0a 94       	dec	r0
     cb4:	12 16       	cp	r1, r18
     cb6:	13 06       	cpc	r1, r19
     cb8:	14 06       	cpc	r1, r20
     cba:	05 06       	cpc	r0, r21
     cbc:	08 95       	ret
     cbe:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_nan>

00000cc2 <__fp_rempio2>:
     cc2:	0e 94 b7 06 	call	0xd6e	; 0xd6e <__fp_splitA>
     cc6:	d8 f3       	brcs	.-10     	; 0xcbe <__fp_pscB+0xe>
     cc8:	e8 94       	clt
     cca:	e0 e0       	ldi	r30, 0x00	; 0
     ccc:	bb 27       	eor	r27, r27
     cce:	9f 57       	subi	r25, 0x7F	; 127
     cd0:	f0 f0       	brcs	.+60     	; 0xd0e <__fp_rempio2+0x4c>
     cd2:	2a ed       	ldi	r18, 0xDA	; 218
     cd4:	3f e0       	ldi	r19, 0x0F	; 15
     cd6:	49 ec       	ldi	r20, 0xC9	; 201
     cd8:	06 c0       	rjmp	.+12     	; 0xce6 <__fp_rempio2+0x24>
     cda:	ee 0f       	add	r30, r30
     cdc:	bb 0f       	add	r27, r27
     cde:	66 1f       	adc	r22, r22
     ce0:	77 1f       	adc	r23, r23
     ce2:	88 1f       	adc	r24, r24
     ce4:	28 f0       	brcs	.+10     	; 0xcf0 <__fp_rempio2+0x2e>
     ce6:	b2 3a       	cpi	r27, 0xA2	; 162
     ce8:	62 07       	cpc	r22, r18
     cea:	73 07       	cpc	r23, r19
     cec:	84 07       	cpc	r24, r20
     cee:	28 f0       	brcs	.+10     	; 0xcfa <__fp_rempio2+0x38>
     cf0:	b2 5a       	subi	r27, 0xA2	; 162
     cf2:	62 0b       	sbc	r22, r18
     cf4:	73 0b       	sbc	r23, r19
     cf6:	84 0b       	sbc	r24, r20
     cf8:	e3 95       	inc	r30
     cfa:	9a 95       	dec	r25
     cfc:	72 f7       	brpl	.-36     	; 0xcda <__fp_rempio2+0x18>
     cfe:	80 38       	cpi	r24, 0x80	; 128
     d00:	30 f4       	brcc	.+12     	; 0xd0e <__fp_rempio2+0x4c>
     d02:	9a 95       	dec	r25
     d04:	bb 0f       	add	r27, r27
     d06:	66 1f       	adc	r22, r22
     d08:	77 1f       	adc	r23, r23
     d0a:	88 1f       	adc	r24, r24
     d0c:	d2 f7       	brpl	.-12     	; 0xd02 <__fp_rempio2+0x40>
     d0e:	90 48       	sbci	r25, 0x80	; 128
     d10:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_mpack_finite>

00000d14 <__fp_round>:
     d14:	09 2e       	mov	r0, r25
     d16:	03 94       	inc	r0
     d18:	00 0c       	add	r0, r0
     d1a:	11 f4       	brne	.+4      	; 0xd20 <__fp_round+0xc>
     d1c:	88 23       	and	r24, r24
     d1e:	52 f0       	brmi	.+20     	; 0xd34 <__fp_round+0x20>
     d20:	bb 0f       	add	r27, r27
     d22:	40 f4       	brcc	.+16     	; 0xd34 <__fp_round+0x20>
     d24:	bf 2b       	or	r27, r31
     d26:	11 f4       	brne	.+4      	; 0xd2c <__fp_round+0x18>
     d28:	60 ff       	sbrs	r22, 0
     d2a:	04 c0       	rjmp	.+8      	; 0xd34 <__fp_round+0x20>
     d2c:	6f 5f       	subi	r22, 0xFF	; 255
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	8f 4f       	sbci	r24, 0xFF	; 255
     d32:	9f 4f       	sbci	r25, 0xFF	; 255
     d34:	08 95       	ret

00000d36 <__fp_sinus>:
     d36:	ef 93       	push	r30
     d38:	e0 ff       	sbrs	r30, 0
     d3a:	07 c0       	rjmp	.+14     	; 0xd4a <__fp_sinus+0x14>
     d3c:	a2 ea       	ldi	r26, 0xA2	; 162
     d3e:	2a ed       	ldi	r18, 0xDA	; 218
     d40:	3f e0       	ldi	r19, 0x0F	; 15
     d42:	49 ec       	ldi	r20, 0xC9	; 201
     d44:	5f eb       	ldi	r21, 0xBF	; 191
     d46:	0e 94 09 05 	call	0xa12	; 0xa12 <__addsf3x>
     d4a:	0e 94 8a 06 	call	0xd14	; 0xd14 <__fp_round>
     d4e:	0f 90       	pop	r0
     d50:	03 94       	inc	r0
     d52:	01 fc       	sbrc	r0, 1
     d54:	90 58       	subi	r25, 0x80	; 128
     d56:	e4 ef       	ldi	r30, 0xF4	; 244
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	0c 94 53 07 	jmp	0xea6	; 0xea6 <__fp_powsodd>

00000d5e <__fp_split3>:
     d5e:	57 fd       	sbrc	r21, 7
     d60:	90 58       	subi	r25, 0x80	; 128
     d62:	44 0f       	add	r20, r20
     d64:	55 1f       	adc	r21, r21
     d66:	59 f0       	breq	.+22     	; 0xd7e <__fp_splitA+0x10>
     d68:	5f 3f       	cpi	r21, 0xFF	; 255
     d6a:	71 f0       	breq	.+28     	; 0xd88 <__fp_splitA+0x1a>
     d6c:	47 95       	ror	r20

00000d6e <__fp_splitA>:
     d6e:	88 0f       	add	r24, r24
     d70:	97 fb       	bst	r25, 7
     d72:	99 1f       	adc	r25, r25
     d74:	61 f0       	breq	.+24     	; 0xd8e <__fp_splitA+0x20>
     d76:	9f 3f       	cpi	r25, 0xFF	; 255
     d78:	79 f0       	breq	.+30     	; 0xd98 <__fp_splitA+0x2a>
     d7a:	87 95       	ror	r24
     d7c:	08 95       	ret
     d7e:	12 16       	cp	r1, r18
     d80:	13 06       	cpc	r1, r19
     d82:	14 06       	cpc	r1, r20
     d84:	55 1f       	adc	r21, r21
     d86:	f2 cf       	rjmp	.-28     	; 0xd6c <__fp_split3+0xe>
     d88:	46 95       	lsr	r20
     d8a:	f1 df       	rcall	.-30     	; 0xd6e <__fp_splitA>
     d8c:	08 c0       	rjmp	.+16     	; 0xd9e <__fp_splitA+0x30>
     d8e:	16 16       	cp	r1, r22
     d90:	17 06       	cpc	r1, r23
     d92:	18 06       	cpc	r1, r24
     d94:	99 1f       	adc	r25, r25
     d96:	f1 cf       	rjmp	.-30     	; 0xd7a <__fp_splitA+0xc>
     d98:	86 95       	lsr	r24
     d9a:	71 05       	cpc	r23, r1
     d9c:	61 05       	cpc	r22, r1
     d9e:	08 94       	sec
     da0:	08 95       	ret

00000da2 <__fp_zero>:
     da2:	e8 94       	clt

00000da4 <__fp_szero>:
     da4:	bb 27       	eor	r27, r27
     da6:	66 27       	eor	r22, r22
     da8:	77 27       	eor	r23, r23
     daa:	cb 01       	movw	r24, r22
     dac:	97 f9       	bld	r25, 7
     dae:	08 95       	ret

00000db0 <__mulsf3>:
     db0:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3x>
     db4:	0c 94 8a 06 	jmp	0xd14	; 0xd14 <__fp_round>
     db8:	0e 94 51 06 	call	0xca2	; 0xca2 <__fp_pscA>
     dbc:	38 f0       	brcs	.+14     	; 0xdcc <__mulsf3+0x1c>
     dbe:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__fp_pscB>
     dc2:	20 f0       	brcs	.+8      	; 0xdcc <__mulsf3+0x1c>
     dc4:	95 23       	and	r25, r21
     dc6:	11 f0       	breq	.+4      	; 0xdcc <__mulsf3+0x1c>
     dc8:	0c 94 48 06 	jmp	0xc90	; 0xc90 <__fp_inf>
     dcc:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_nan>
     dd0:	11 24       	eor	r1, r1
     dd2:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_szero>

00000dd6 <__mulsf3x>:
     dd6:	0e 94 af 06 	call	0xd5e	; 0xd5e <__fp_split3>
     dda:	70 f3       	brcs	.-36     	; 0xdb8 <__mulsf3+0x8>

00000ddc <__mulsf3_pse>:
     ddc:	95 9f       	mul	r25, r21
     dde:	c1 f3       	breq	.-16     	; 0xdd0 <__mulsf3+0x20>
     de0:	95 0f       	add	r25, r21
     de2:	50 e0       	ldi	r21, 0x00	; 0
     de4:	55 1f       	adc	r21, r21
     de6:	62 9f       	mul	r22, r18
     de8:	f0 01       	movw	r30, r0
     dea:	72 9f       	mul	r23, r18
     dec:	bb 27       	eor	r27, r27
     dee:	f0 0d       	add	r31, r0
     df0:	b1 1d       	adc	r27, r1
     df2:	63 9f       	mul	r22, r19
     df4:	aa 27       	eor	r26, r26
     df6:	f0 0d       	add	r31, r0
     df8:	b1 1d       	adc	r27, r1
     dfa:	aa 1f       	adc	r26, r26
     dfc:	64 9f       	mul	r22, r20
     dfe:	66 27       	eor	r22, r22
     e00:	b0 0d       	add	r27, r0
     e02:	a1 1d       	adc	r26, r1
     e04:	66 1f       	adc	r22, r22
     e06:	82 9f       	mul	r24, r18
     e08:	22 27       	eor	r18, r18
     e0a:	b0 0d       	add	r27, r0
     e0c:	a1 1d       	adc	r26, r1
     e0e:	62 1f       	adc	r22, r18
     e10:	73 9f       	mul	r23, r19
     e12:	b0 0d       	add	r27, r0
     e14:	a1 1d       	adc	r26, r1
     e16:	62 1f       	adc	r22, r18
     e18:	83 9f       	mul	r24, r19
     e1a:	a0 0d       	add	r26, r0
     e1c:	61 1d       	adc	r22, r1
     e1e:	22 1f       	adc	r18, r18
     e20:	74 9f       	mul	r23, r20
     e22:	33 27       	eor	r19, r19
     e24:	a0 0d       	add	r26, r0
     e26:	61 1d       	adc	r22, r1
     e28:	23 1f       	adc	r18, r19
     e2a:	84 9f       	mul	r24, r20
     e2c:	60 0d       	add	r22, r0
     e2e:	21 1d       	adc	r18, r1
     e30:	82 2f       	mov	r24, r18
     e32:	76 2f       	mov	r23, r22
     e34:	6a 2f       	mov	r22, r26
     e36:	11 24       	eor	r1, r1
     e38:	9f 57       	subi	r25, 0x7F	; 127
     e3a:	50 40       	sbci	r21, 0x00	; 0
     e3c:	9a f0       	brmi	.+38     	; 0xe64 <__mulsf3_pse+0x88>
     e3e:	f1 f0       	breq	.+60     	; 0xe7c <__mulsf3_pse+0xa0>
     e40:	88 23       	and	r24, r24
     e42:	4a f0       	brmi	.+18     	; 0xe56 <__mulsf3_pse+0x7a>
     e44:	ee 0f       	add	r30, r30
     e46:	ff 1f       	adc	r31, r31
     e48:	bb 1f       	adc	r27, r27
     e4a:	66 1f       	adc	r22, r22
     e4c:	77 1f       	adc	r23, r23
     e4e:	88 1f       	adc	r24, r24
     e50:	91 50       	subi	r25, 0x01	; 1
     e52:	50 40       	sbci	r21, 0x00	; 0
     e54:	a9 f7       	brne	.-22     	; 0xe40 <__mulsf3_pse+0x64>
     e56:	9e 3f       	cpi	r25, 0xFE	; 254
     e58:	51 05       	cpc	r21, r1
     e5a:	80 f0       	brcs	.+32     	; 0xe7c <__mulsf3_pse+0xa0>
     e5c:	0c 94 48 06 	jmp	0xc90	; 0xc90 <__fp_inf>
     e60:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_szero>
     e64:	5f 3f       	cpi	r21, 0xFF	; 255
     e66:	e4 f3       	brlt	.-8      	; 0xe60 <__mulsf3_pse+0x84>
     e68:	98 3e       	cpi	r25, 0xE8	; 232
     e6a:	d4 f3       	brlt	.-12     	; 0xe60 <__mulsf3_pse+0x84>
     e6c:	86 95       	lsr	r24
     e6e:	77 95       	ror	r23
     e70:	67 95       	ror	r22
     e72:	b7 95       	ror	r27
     e74:	f7 95       	ror	r31
     e76:	e7 95       	ror	r30
     e78:	9f 5f       	subi	r25, 0xFF	; 255
     e7a:	c1 f7       	brne	.-16     	; 0xe6c <__mulsf3_pse+0x90>
     e7c:	fe 2b       	or	r31, r30
     e7e:	88 0f       	add	r24, r24
     e80:	91 1d       	adc	r25, r1
     e82:	96 95       	lsr	r25
     e84:	87 95       	ror	r24
     e86:	97 f9       	bld	r25, 7
     e88:	08 95       	ret

00000e8a <__fp_mpack>:
     e8a:	9f 3f       	cpi	r25, 0xFF	; 255
     e8c:	31 f0       	breq	.+12     	; 0xe9a <__fp_mpack_finite+0xc>

00000e8e <__fp_mpack_finite>:
     e8e:	91 50       	subi	r25, 0x01	; 1
     e90:	20 f4       	brcc	.+8      	; 0xe9a <__fp_mpack_finite+0xc>
     e92:	87 95       	ror	r24
     e94:	77 95       	ror	r23
     e96:	67 95       	ror	r22
     e98:	b7 95       	ror	r27
     e9a:	88 0f       	add	r24, r24
     e9c:	91 1d       	adc	r25, r1
     e9e:	96 95       	lsr	r25
     ea0:	87 95       	ror	r24
     ea2:	97 f9       	bld	r25, 7
     ea4:	08 95       	ret

00000ea6 <__fp_powsodd>:
     ea6:	9f 93       	push	r25
     ea8:	8f 93       	push	r24
     eaa:	7f 93       	push	r23
     eac:	6f 93       	push	r22
     eae:	ff 93       	push	r31
     eb0:	ef 93       	push	r30
     eb2:	9b 01       	movw	r18, r22
     eb4:	ac 01       	movw	r20, r24
     eb6:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__mulsf3>
     eba:	ef 91       	pop	r30
     ebc:	ff 91       	pop	r31
     ebe:	0e 94 67 07 	call	0xece	; 0xece <__fp_powser>
     ec2:	2f 91       	pop	r18
     ec4:	3f 91       	pop	r19
     ec6:	4f 91       	pop	r20
     ec8:	5f 91       	pop	r21
     eca:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__mulsf3>

00000ece <__fp_powser>:
     ece:	df 93       	push	r29
     ed0:	cf 93       	push	r28
     ed2:	1f 93       	push	r17
     ed4:	0f 93       	push	r16
     ed6:	ff 92       	push	r15
     ed8:	ef 92       	push	r14
     eda:	df 92       	push	r13
     edc:	7b 01       	movw	r14, r22
     ede:	8c 01       	movw	r16, r24
     ee0:	68 94       	set
     ee2:	06 c0       	rjmp	.+12     	; 0xef0 <__fp_powser+0x22>
     ee4:	da 2e       	mov	r13, r26
     ee6:	ef 01       	movw	r28, r30
     ee8:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3x>
     eec:	fe 01       	movw	r30, r28
     eee:	e8 94       	clt
     ef0:	a5 91       	lpm	r26, Z+
     ef2:	25 91       	lpm	r18, Z+
     ef4:	35 91       	lpm	r19, Z+
     ef6:	45 91       	lpm	r20, Z+
     ef8:	55 91       	lpm	r21, Z+
     efa:	a6 f3       	brts	.-24     	; 0xee4 <__fp_powser+0x16>
     efc:	ef 01       	movw	r28, r30
     efe:	0e 94 09 05 	call	0xa12	; 0xa12 <__addsf3x>
     f02:	fe 01       	movw	r30, r28
     f04:	97 01       	movw	r18, r14
     f06:	a8 01       	movw	r20, r16
     f08:	da 94       	dec	r13
     f0a:	69 f7       	brne	.-38     	; 0xee6 <__fp_powser+0x18>
     f0c:	df 90       	pop	r13
     f0e:	ef 90       	pop	r14
     f10:	ff 90       	pop	r15
     f12:	0f 91       	pop	r16
     f14:	1f 91       	pop	r17
     f16:	cf 91       	pop	r28
     f18:	df 91       	pop	r29
     f1a:	08 95       	ret

00000f1c <__divmodhi4>:
     f1c:	97 fb       	bst	r25, 7
     f1e:	07 2e       	mov	r0, r23
     f20:	16 f4       	brtc	.+4      	; 0xf26 <__divmodhi4+0xa>
     f22:	00 94       	com	r0
     f24:	07 d0       	rcall	.+14     	; 0xf34 <__divmodhi4_neg1>
     f26:	77 fd       	sbrc	r23, 7
     f28:	09 d0       	rcall	.+18     	; 0xf3c <__divmodhi4_neg2>
     f2a:	0e 94 c4 07 	call	0xf88	; 0xf88 <__udivmodhi4>
     f2e:	07 fc       	sbrc	r0, 7
     f30:	05 d0       	rcall	.+10     	; 0xf3c <__divmodhi4_neg2>
     f32:	3e f4       	brtc	.+14     	; 0xf42 <__divmodhi4_exit>

00000f34 <__divmodhi4_neg1>:
     f34:	90 95       	com	r25
     f36:	81 95       	neg	r24
     f38:	9f 4f       	sbci	r25, 0xFF	; 255
     f3a:	08 95       	ret

00000f3c <__divmodhi4_neg2>:
     f3c:	70 95       	com	r23
     f3e:	61 95       	neg	r22
     f40:	7f 4f       	sbci	r23, 0xFF	; 255

00000f42 <__divmodhi4_exit>:
     f42:	08 95       	ret

00000f44 <__udivmodsi4>:
     f44:	a1 e2       	ldi	r26, 0x21	; 33
     f46:	1a 2e       	mov	r1, r26
     f48:	aa 1b       	sub	r26, r26
     f4a:	bb 1b       	sub	r27, r27
     f4c:	fd 01       	movw	r30, r26
     f4e:	0d c0       	rjmp	.+26     	; 0xf6a <__udivmodsi4_ep>

00000f50 <__udivmodsi4_loop>:
     f50:	aa 1f       	adc	r26, r26
     f52:	bb 1f       	adc	r27, r27
     f54:	ee 1f       	adc	r30, r30
     f56:	ff 1f       	adc	r31, r31
     f58:	a2 17       	cp	r26, r18
     f5a:	b3 07       	cpc	r27, r19
     f5c:	e4 07       	cpc	r30, r20
     f5e:	f5 07       	cpc	r31, r21
     f60:	20 f0       	brcs	.+8      	; 0xf6a <__udivmodsi4_ep>
     f62:	a2 1b       	sub	r26, r18
     f64:	b3 0b       	sbc	r27, r19
     f66:	e4 0b       	sbc	r30, r20
     f68:	f5 0b       	sbc	r31, r21

00000f6a <__udivmodsi4_ep>:
     f6a:	66 1f       	adc	r22, r22
     f6c:	77 1f       	adc	r23, r23
     f6e:	88 1f       	adc	r24, r24
     f70:	99 1f       	adc	r25, r25
     f72:	1a 94       	dec	r1
     f74:	69 f7       	brne	.-38     	; 0xf50 <__udivmodsi4_loop>
     f76:	60 95       	com	r22
     f78:	70 95       	com	r23
     f7a:	80 95       	com	r24
     f7c:	90 95       	com	r25
     f7e:	9b 01       	movw	r18, r22
     f80:	ac 01       	movw	r20, r24
     f82:	bd 01       	movw	r22, r26
     f84:	cf 01       	movw	r24, r30
     f86:	08 95       	ret

00000f88 <__udivmodhi4>:
     f88:	aa 1b       	sub	r26, r26
     f8a:	bb 1b       	sub	r27, r27
     f8c:	51 e1       	ldi	r21, 0x11	; 17
     f8e:	07 c0       	rjmp	.+14     	; 0xf9e <__udivmodhi4_ep>

00000f90 <__udivmodhi4_loop>:
     f90:	aa 1f       	adc	r26, r26
     f92:	bb 1f       	adc	r27, r27
     f94:	a6 17       	cp	r26, r22
     f96:	b7 07       	cpc	r27, r23
     f98:	10 f0       	brcs	.+4      	; 0xf9e <__udivmodhi4_ep>
     f9a:	a6 1b       	sub	r26, r22
     f9c:	b7 0b       	sbc	r27, r23

00000f9e <__udivmodhi4_ep>:
     f9e:	88 1f       	adc	r24, r24
     fa0:	99 1f       	adc	r25, r25
     fa2:	5a 95       	dec	r21
     fa4:	a9 f7       	brne	.-22     	; 0xf90 <__udivmodhi4_loop>
     fa6:	80 95       	com	r24
     fa8:	90 95       	com	r25
     faa:	bc 01       	movw	r22, r24
     fac:	cd 01       	movw	r24, r26
     fae:	08 95       	ret

00000fb0 <dtostrf>:
     fb0:	ef 92       	push	r14
     fb2:	0f 93       	push	r16
     fb4:	1f 93       	push	r17
     fb6:	cf 93       	push	r28
     fb8:	df 93       	push	r29
     fba:	e8 01       	movw	r28, r16
     fbc:	47 fd       	sbrc	r20, 7
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <dtostrf+0x14>
     fc0:	34 e0       	ldi	r19, 0x04	; 4
     fc2:	01 c0       	rjmp	.+2      	; 0xfc6 <dtostrf+0x16>
     fc4:	34 e1       	ldi	r19, 0x14	; 20
     fc6:	04 2e       	mov	r0, r20
     fc8:	00 0c       	add	r0, r0
     fca:	55 0b       	sbc	r21, r21
     fcc:	57 ff       	sbrs	r21, 7
     fce:	03 c0       	rjmp	.+6      	; 0xfd6 <dtostrf+0x26>
     fd0:	51 95       	neg	r21
     fd2:	41 95       	neg	r20
     fd4:	51 09       	sbc	r21, r1
     fd6:	e3 2e       	mov	r14, r19
     fd8:	02 2f       	mov	r16, r18
     fda:	24 2f       	mov	r18, r20
     fdc:	ae 01       	movw	r20, r28
     fde:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <dtoa_prf>
     fe2:	ce 01       	movw	r24, r28
     fe4:	df 91       	pop	r29
     fe6:	cf 91       	pop	r28
     fe8:	1f 91       	pop	r17
     fea:	0f 91       	pop	r16
     fec:	ef 90       	pop	r14
     fee:	08 95       	ret

00000ff0 <fwrite>:
     ff0:	8f 92       	push	r8
     ff2:	9f 92       	push	r9
     ff4:	af 92       	push	r10
     ff6:	bf 92       	push	r11
     ff8:	cf 92       	push	r12
     ffa:	df 92       	push	r13
     ffc:	ef 92       	push	r14
     ffe:	ff 92       	push	r15
    1000:	0f 93       	push	r16
    1002:	1f 93       	push	r17
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	5b 01       	movw	r10, r22
    100a:	4a 01       	movw	r8, r20
    100c:	79 01       	movw	r14, r18
    100e:	d9 01       	movw	r26, r18
    1010:	13 96       	adiw	r26, 0x03	; 3
    1012:	2c 91       	ld	r18, X
    1014:	21 ff       	sbrs	r18, 1
    1016:	1d c0       	rjmp	.+58     	; 0x1052 <fwrite+0x62>
    1018:	c0 e0       	ldi	r28, 0x00	; 0
    101a:	d0 e0       	ldi	r29, 0x00	; 0
    101c:	c8 15       	cp	r28, r8
    101e:	d9 05       	cpc	r29, r9
    1020:	d9 f0       	breq	.+54     	; 0x1058 <fwrite+0x68>
    1022:	8c 01       	movw	r16, r24
    1024:	6c 01       	movw	r12, r24
    1026:	ca 0c       	add	r12, r10
    1028:	db 1c       	adc	r13, r11
    102a:	c8 01       	movw	r24, r16
    102c:	0c 15       	cp	r16, r12
    102e:	1d 05       	cpc	r17, r13
    1030:	71 f0       	breq	.+28     	; 0x104e <fwrite+0x5e>
    1032:	0f 5f       	subi	r16, 0xFF	; 255
    1034:	1f 4f       	sbci	r17, 0xFF	; 255
    1036:	d7 01       	movw	r26, r14
    1038:	18 96       	adiw	r26, 0x08	; 8
    103a:	ed 91       	ld	r30, X+
    103c:	fc 91       	ld	r31, X
    103e:	19 97       	sbiw	r26, 0x09	; 9
    1040:	b7 01       	movw	r22, r14
    1042:	dc 01       	movw	r26, r24
    1044:	8c 91       	ld	r24, X
    1046:	09 95       	icall
    1048:	89 2b       	or	r24, r25
    104a:	79 f3       	breq	.-34     	; 0x102a <fwrite+0x3a>
    104c:	05 c0       	rjmp	.+10     	; 0x1058 <fwrite+0x68>
    104e:	21 96       	adiw	r28, 0x01	; 1
    1050:	e5 cf       	rjmp	.-54     	; 0x101c <fwrite+0x2c>
    1052:	80 e0       	ldi	r24, 0x00	; 0
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	01 c0       	rjmp	.+2      	; 0x105a <fwrite+0x6a>
    1058:	ce 01       	movw	r24, r28
    105a:	df 91       	pop	r29
    105c:	cf 91       	pop	r28
    105e:	1f 91       	pop	r17
    1060:	0f 91       	pop	r16
    1062:	ff 90       	pop	r15
    1064:	ef 90       	pop	r14
    1066:	df 90       	pop	r13
    1068:	cf 90       	pop	r12
    106a:	bf 90       	pop	r11
    106c:	af 90       	pop	r10
    106e:	9f 90       	pop	r9
    1070:	8f 90       	pop	r8
    1072:	08 95       	ret

00001074 <puts>:
    1074:	0f 93       	push	r16
    1076:	1f 93       	push	r17
    1078:	cf 93       	push	r28
    107a:	df 93       	push	r29
    107c:	e0 91 92 40 	lds	r30, 0x4092	; 0x804092 <__iob+0x2>
    1080:	f0 91 93 40 	lds	r31, 0x4093	; 0x804093 <__iob+0x3>
    1084:	23 81       	ldd	r18, Z+3	; 0x03
    1086:	21 ff       	sbrs	r18, 1
    1088:	1b c0       	rjmp	.+54     	; 0x10c0 <puts+0x4c>
    108a:	8c 01       	movw	r16, r24
    108c:	d0 e0       	ldi	r29, 0x00	; 0
    108e:	c0 e0       	ldi	r28, 0x00	; 0
    1090:	f8 01       	movw	r30, r16
    1092:	81 91       	ld	r24, Z+
    1094:	8f 01       	movw	r16, r30
    1096:	60 91 92 40 	lds	r22, 0x4092	; 0x804092 <__iob+0x2>
    109a:	70 91 93 40 	lds	r23, 0x4093	; 0x804093 <__iob+0x3>
    109e:	db 01       	movw	r26, r22
    10a0:	18 96       	adiw	r26, 0x08	; 8
    10a2:	ed 91       	ld	r30, X+
    10a4:	fc 91       	ld	r31, X
    10a6:	19 97       	sbiw	r26, 0x09	; 9
    10a8:	88 23       	and	r24, r24
    10aa:	31 f0       	breq	.+12     	; 0x10b8 <puts+0x44>
    10ac:	09 95       	icall
    10ae:	89 2b       	or	r24, r25
    10b0:	79 f3       	breq	.-34     	; 0x1090 <puts+0x1c>
    10b2:	df ef       	ldi	r29, 0xFF	; 255
    10b4:	cf ef       	ldi	r28, 0xFF	; 255
    10b6:	ec cf       	rjmp	.-40     	; 0x1090 <puts+0x1c>
    10b8:	8a e0       	ldi	r24, 0x0A	; 10
    10ba:	09 95       	icall
    10bc:	89 2b       	or	r24, r25
    10be:	19 f0       	breq	.+6      	; 0x10c6 <puts+0x52>
    10c0:	8f ef       	ldi	r24, 0xFF	; 255
    10c2:	9f ef       	ldi	r25, 0xFF	; 255
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <puts+0x56>
    10c6:	8d 2f       	mov	r24, r29
    10c8:	9c 2f       	mov	r25, r28
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	1f 91       	pop	r17
    10d0:	0f 91       	pop	r16
    10d2:	08 95       	ret

000010d4 <dtoa_prf>:
    10d4:	8f 92       	push	r8
    10d6:	9f 92       	push	r9
    10d8:	af 92       	push	r10
    10da:	bf 92       	push	r11
    10dc:	cf 92       	push	r12
    10de:	df 92       	push	r13
    10e0:	ef 92       	push	r14
    10e2:	ff 92       	push	r15
    10e4:	0f 93       	push	r16
    10e6:	1f 93       	push	r17
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	cd b7       	in	r28, 0x3d	; 61
    10ee:	de b7       	in	r29, 0x3e	; 62
    10f0:	29 97       	sbiw	r28, 0x09	; 9
    10f2:	cd bf       	out	0x3d, r28	; 61
    10f4:	de bf       	out	0x3e, r29	; 62
    10f6:	6a 01       	movw	r12, r20
    10f8:	12 2f       	mov	r17, r18
    10fa:	b0 2e       	mov	r11, r16
    10fc:	2b e3       	ldi	r18, 0x3B	; 59
    10fe:	20 17       	cp	r18, r16
    1100:	20 f0       	brcs	.+8      	; 0x110a <dtoa_prf+0x36>
    1102:	ff 24       	eor	r15, r15
    1104:	f3 94       	inc	r15
    1106:	f0 0e       	add	r15, r16
    1108:	02 c0       	rjmp	.+4      	; 0x110e <dtoa_prf+0x3a>
    110a:	2c e3       	ldi	r18, 0x3C	; 60
    110c:	f2 2e       	mov	r15, r18
    110e:	0f 2d       	mov	r16, r15
    1110:	27 e0       	ldi	r18, 0x07	; 7
    1112:	ae 01       	movw	r20, r28
    1114:	4f 5f       	subi	r20, 0xFF	; 255
    1116:	5f 4f       	sbci	r21, 0xFF	; 255
    1118:	0e 94 db 09 	call	0x13b6	; 0x13b6 <__ftoa_engine>
    111c:	bc 01       	movw	r22, r24
    111e:	49 81       	ldd	r20, Y+1	; 0x01
    1120:	84 2f       	mov	r24, r20
    1122:	89 70       	andi	r24, 0x09	; 9
    1124:	81 30       	cpi	r24, 0x01	; 1
    1126:	31 f0       	breq	.+12     	; 0x1134 <dtoa_prf+0x60>
    1128:	e1 fc       	sbrc	r14, 1
    112a:	06 c0       	rjmp	.+12     	; 0x1138 <dtoa_prf+0x64>
    112c:	e0 fe       	sbrs	r14, 0
    112e:	06 c0       	rjmp	.+12     	; 0x113c <dtoa_prf+0x68>
    1130:	90 e2       	ldi	r25, 0x20	; 32
    1132:	05 c0       	rjmp	.+10     	; 0x113e <dtoa_prf+0x6a>
    1134:	9d e2       	ldi	r25, 0x2D	; 45
    1136:	03 c0       	rjmp	.+6      	; 0x113e <dtoa_prf+0x6a>
    1138:	9b e2       	ldi	r25, 0x2B	; 43
    113a:	01 c0       	rjmp	.+2      	; 0x113e <dtoa_prf+0x6a>
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	5e 2d       	mov	r21, r14
    1140:	50 71       	andi	r21, 0x10	; 16
    1142:	43 ff       	sbrs	r20, 3
    1144:	3c c0       	rjmp	.+120    	; 0x11be <dtoa_prf+0xea>
    1146:	91 11       	cpse	r25, r1
    1148:	02 c0       	rjmp	.+4      	; 0x114e <dtoa_prf+0x7a>
    114a:	83 e0       	ldi	r24, 0x03	; 3
    114c:	01 c0       	rjmp	.+2      	; 0x1150 <dtoa_prf+0x7c>
    114e:	84 e0       	ldi	r24, 0x04	; 4
    1150:	81 17       	cp	r24, r17
    1152:	18 f4       	brcc	.+6      	; 0x115a <dtoa_prf+0x86>
    1154:	21 2f       	mov	r18, r17
    1156:	28 1b       	sub	r18, r24
    1158:	01 c0       	rjmp	.+2      	; 0x115c <dtoa_prf+0x88>
    115a:	20 e0       	ldi	r18, 0x00	; 0
    115c:	51 11       	cpse	r21, r1
    115e:	0b c0       	rjmp	.+22     	; 0x1176 <dtoa_prf+0xa2>
    1160:	f6 01       	movw	r30, r12
    1162:	82 2f       	mov	r24, r18
    1164:	30 e2       	ldi	r19, 0x20	; 32
    1166:	88 23       	and	r24, r24
    1168:	19 f0       	breq	.+6      	; 0x1170 <dtoa_prf+0x9c>
    116a:	31 93       	st	Z+, r19
    116c:	81 50       	subi	r24, 0x01	; 1
    116e:	fb cf       	rjmp	.-10     	; 0x1166 <dtoa_prf+0x92>
    1170:	c2 0e       	add	r12, r18
    1172:	d1 1c       	adc	r13, r1
    1174:	20 e0       	ldi	r18, 0x00	; 0
    1176:	99 23       	and	r25, r25
    1178:	29 f0       	breq	.+10     	; 0x1184 <dtoa_prf+0xb0>
    117a:	d6 01       	movw	r26, r12
    117c:	9c 93       	st	X, r25
    117e:	f6 01       	movw	r30, r12
    1180:	31 96       	adiw	r30, 0x01	; 1
    1182:	6f 01       	movw	r12, r30
    1184:	c6 01       	movw	r24, r12
    1186:	03 96       	adiw	r24, 0x03	; 3
    1188:	e2 fe       	sbrs	r14, 2
    118a:	0a c0       	rjmp	.+20     	; 0x11a0 <dtoa_prf+0xcc>
    118c:	3e e4       	ldi	r19, 0x4E	; 78
    118e:	d6 01       	movw	r26, r12
    1190:	3c 93       	st	X, r19
    1192:	41 e4       	ldi	r20, 0x41	; 65
    1194:	11 96       	adiw	r26, 0x01	; 1
    1196:	4c 93       	st	X, r20
    1198:	11 97       	sbiw	r26, 0x01	; 1
    119a:	12 96       	adiw	r26, 0x02	; 2
    119c:	3c 93       	st	X, r19
    119e:	06 c0       	rjmp	.+12     	; 0x11ac <dtoa_prf+0xd8>
    11a0:	3e e6       	ldi	r19, 0x6E	; 110
    11a2:	f6 01       	movw	r30, r12
    11a4:	30 83       	st	Z, r19
    11a6:	41 e6       	ldi	r20, 0x61	; 97
    11a8:	41 83       	std	Z+1, r20	; 0x01
    11aa:	32 83       	std	Z+2, r19	; 0x02
    11ac:	fc 01       	movw	r30, r24
    11ae:	32 2f       	mov	r19, r18
    11b0:	40 e2       	ldi	r20, 0x20	; 32
    11b2:	33 23       	and	r19, r19
    11b4:	09 f4       	brne	.+2      	; 0x11b8 <dtoa_prf+0xe4>
    11b6:	42 c0       	rjmp	.+132    	; 0x123c <dtoa_prf+0x168>
    11b8:	41 93       	st	Z+, r20
    11ba:	31 50       	subi	r19, 0x01	; 1
    11bc:	fa cf       	rjmp	.-12     	; 0x11b2 <dtoa_prf+0xde>
    11be:	42 ff       	sbrs	r20, 2
    11c0:	44 c0       	rjmp	.+136    	; 0x124a <dtoa_prf+0x176>
    11c2:	91 11       	cpse	r25, r1
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <dtoa_prf+0xf6>
    11c6:	83 e0       	ldi	r24, 0x03	; 3
    11c8:	01 c0       	rjmp	.+2      	; 0x11cc <dtoa_prf+0xf8>
    11ca:	84 e0       	ldi	r24, 0x04	; 4
    11cc:	81 17       	cp	r24, r17
    11ce:	18 f4       	brcc	.+6      	; 0x11d6 <dtoa_prf+0x102>
    11d0:	21 2f       	mov	r18, r17
    11d2:	28 1b       	sub	r18, r24
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <dtoa_prf+0x104>
    11d6:	20 e0       	ldi	r18, 0x00	; 0
    11d8:	51 11       	cpse	r21, r1
    11da:	0b c0       	rjmp	.+22     	; 0x11f2 <dtoa_prf+0x11e>
    11dc:	f6 01       	movw	r30, r12
    11de:	82 2f       	mov	r24, r18
    11e0:	30 e2       	ldi	r19, 0x20	; 32
    11e2:	88 23       	and	r24, r24
    11e4:	19 f0       	breq	.+6      	; 0x11ec <dtoa_prf+0x118>
    11e6:	31 93       	st	Z+, r19
    11e8:	81 50       	subi	r24, 0x01	; 1
    11ea:	fb cf       	rjmp	.-10     	; 0x11e2 <dtoa_prf+0x10e>
    11ec:	c2 0e       	add	r12, r18
    11ee:	d1 1c       	adc	r13, r1
    11f0:	20 e0       	ldi	r18, 0x00	; 0
    11f2:	99 23       	and	r25, r25
    11f4:	29 f0       	breq	.+10     	; 0x1200 <dtoa_prf+0x12c>
    11f6:	d6 01       	movw	r26, r12
    11f8:	9c 93       	st	X, r25
    11fa:	f6 01       	movw	r30, r12
    11fc:	31 96       	adiw	r30, 0x01	; 1
    11fe:	6f 01       	movw	r12, r30
    1200:	c6 01       	movw	r24, r12
    1202:	03 96       	adiw	r24, 0x03	; 3
    1204:	e2 fe       	sbrs	r14, 2
    1206:	0b c0       	rjmp	.+22     	; 0x121e <dtoa_prf+0x14a>
    1208:	39 e4       	ldi	r19, 0x49	; 73
    120a:	d6 01       	movw	r26, r12
    120c:	3c 93       	st	X, r19
    120e:	3e e4       	ldi	r19, 0x4E	; 78
    1210:	11 96       	adiw	r26, 0x01	; 1
    1212:	3c 93       	st	X, r19
    1214:	11 97       	sbiw	r26, 0x01	; 1
    1216:	36 e4       	ldi	r19, 0x46	; 70
    1218:	12 96       	adiw	r26, 0x02	; 2
    121a:	3c 93       	st	X, r19
    121c:	07 c0       	rjmp	.+14     	; 0x122c <dtoa_prf+0x158>
    121e:	39 e6       	ldi	r19, 0x69	; 105
    1220:	f6 01       	movw	r30, r12
    1222:	30 83       	st	Z, r19
    1224:	3e e6       	ldi	r19, 0x6E	; 110
    1226:	31 83       	std	Z+1, r19	; 0x01
    1228:	36 e6       	ldi	r19, 0x66	; 102
    122a:	32 83       	std	Z+2, r19	; 0x02
    122c:	fc 01       	movw	r30, r24
    122e:	32 2f       	mov	r19, r18
    1230:	40 e2       	ldi	r20, 0x20	; 32
    1232:	33 23       	and	r19, r19
    1234:	19 f0       	breq	.+6      	; 0x123c <dtoa_prf+0x168>
    1236:	41 93       	st	Z+, r20
    1238:	31 50       	subi	r19, 0x01	; 1
    123a:	fb cf       	rjmp	.-10     	; 0x1232 <dtoa_prf+0x15e>
    123c:	fc 01       	movw	r30, r24
    123e:	e2 0f       	add	r30, r18
    1240:	f1 1d       	adc	r31, r1
    1242:	10 82       	st	Z, r1
    1244:	8e ef       	ldi	r24, 0xFE	; 254
    1246:	9f ef       	ldi	r25, 0xFF	; 255
    1248:	a6 c0       	rjmp	.+332    	; 0x1396 <dtoa_prf+0x2c2>
    124a:	21 e0       	ldi	r18, 0x01	; 1
    124c:	30 e0       	ldi	r19, 0x00	; 0
    124e:	91 11       	cpse	r25, r1
    1250:	02 c0       	rjmp	.+4      	; 0x1256 <dtoa_prf+0x182>
    1252:	20 e0       	ldi	r18, 0x00	; 0
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	16 16       	cp	r1, r22
    1258:	17 06       	cpc	r1, r23
    125a:	1c f4       	brge	.+6      	; 0x1262 <dtoa_prf+0x18e>
    125c:	fb 01       	movw	r30, r22
    125e:	31 96       	adiw	r30, 0x01	; 1
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <dtoa_prf+0x192>
    1262:	e1 e0       	ldi	r30, 0x01	; 1
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	2e 0f       	add	r18, r30
    1268:	3f 1f       	adc	r19, r31
    126a:	bb 20       	and	r11, r11
    126c:	21 f0       	breq	.+8      	; 0x1276 <dtoa_prf+0x1a2>
    126e:	eb 2d       	mov	r30, r11
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	31 96       	adiw	r30, 0x01	; 1
    1274:	02 c0       	rjmp	.+4      	; 0x127a <dtoa_prf+0x1a6>
    1276:	e0 e0       	ldi	r30, 0x00	; 0
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	2e 0f       	add	r18, r30
    127c:	3f 1f       	adc	r19, r31
    127e:	e1 2f       	mov	r30, r17
    1280:	f0 e0       	ldi	r31, 0x00	; 0
    1282:	2e 17       	cp	r18, r30
    1284:	3f 07       	cpc	r19, r31
    1286:	1c f4       	brge	.+6      	; 0x128e <dtoa_prf+0x1ba>
    1288:	12 1b       	sub	r17, r18
    128a:	21 2f       	mov	r18, r17
    128c:	01 c0       	rjmp	.+2      	; 0x1290 <dtoa_prf+0x1bc>
    128e:	20 e0       	ldi	r18, 0x00	; 0
    1290:	8e 2d       	mov	r24, r14
    1292:	88 71       	andi	r24, 0x18	; 24
    1294:	59 f4       	brne	.+22     	; 0x12ac <dtoa_prf+0x1d8>
    1296:	f6 01       	movw	r30, r12
    1298:	82 2f       	mov	r24, r18
    129a:	30 e2       	ldi	r19, 0x20	; 32
    129c:	88 23       	and	r24, r24
    129e:	19 f0       	breq	.+6      	; 0x12a6 <dtoa_prf+0x1d2>
    12a0:	31 93       	st	Z+, r19
    12a2:	81 50       	subi	r24, 0x01	; 1
    12a4:	fb cf       	rjmp	.-10     	; 0x129c <dtoa_prf+0x1c8>
    12a6:	c2 0e       	add	r12, r18
    12a8:	d1 1c       	adc	r13, r1
    12aa:	20 e0       	ldi	r18, 0x00	; 0
    12ac:	99 23       	and	r25, r25
    12ae:	29 f0       	breq	.+10     	; 0x12ba <dtoa_prf+0x1e6>
    12b0:	d6 01       	movw	r26, r12
    12b2:	9c 93       	st	X, r25
    12b4:	f6 01       	movw	r30, r12
    12b6:	31 96       	adiw	r30, 0x01	; 1
    12b8:	6f 01       	movw	r12, r30
    12ba:	51 11       	cpse	r21, r1
    12bc:	0b c0       	rjmp	.+22     	; 0x12d4 <dtoa_prf+0x200>
    12be:	f6 01       	movw	r30, r12
    12c0:	82 2f       	mov	r24, r18
    12c2:	90 e3       	ldi	r25, 0x30	; 48
    12c4:	88 23       	and	r24, r24
    12c6:	19 f0       	breq	.+6      	; 0x12ce <dtoa_prf+0x1fa>
    12c8:	91 93       	st	Z+, r25
    12ca:	81 50       	subi	r24, 0x01	; 1
    12cc:	fb cf       	rjmp	.-10     	; 0x12c4 <dtoa_prf+0x1f0>
    12ce:	c2 0e       	add	r12, r18
    12d0:	d1 1c       	adc	r13, r1
    12d2:	20 e0       	ldi	r18, 0x00	; 0
    12d4:	0f 2d       	mov	r16, r15
    12d6:	06 0f       	add	r16, r22
    12d8:	9a 81       	ldd	r25, Y+2	; 0x02
    12da:	34 2f       	mov	r19, r20
    12dc:	30 71       	andi	r19, 0x10	; 16
    12de:	44 ff       	sbrs	r20, 4
    12e0:	03 c0       	rjmp	.+6      	; 0x12e8 <dtoa_prf+0x214>
    12e2:	91 33       	cpi	r25, 0x31	; 49
    12e4:	09 f4       	brne	.+2      	; 0x12e8 <dtoa_prf+0x214>
    12e6:	01 50       	subi	r16, 0x01	; 1
    12e8:	10 16       	cp	r1, r16
    12ea:	24 f4       	brge	.+8      	; 0x12f4 <dtoa_prf+0x220>
    12ec:	09 30       	cpi	r16, 0x09	; 9
    12ee:	18 f0       	brcs	.+6      	; 0x12f6 <dtoa_prf+0x222>
    12f0:	08 e0       	ldi	r16, 0x08	; 8
    12f2:	01 c0       	rjmp	.+2      	; 0x12f6 <dtoa_prf+0x222>
    12f4:	01 e0       	ldi	r16, 0x01	; 1
    12f6:	ab 01       	movw	r20, r22
    12f8:	77 ff       	sbrs	r23, 7
    12fa:	02 c0       	rjmp	.+4      	; 0x1300 <dtoa_prf+0x22c>
    12fc:	40 e0       	ldi	r20, 0x00	; 0
    12fe:	50 e0       	ldi	r21, 0x00	; 0
    1300:	fb 01       	movw	r30, r22
    1302:	e4 1b       	sub	r30, r20
    1304:	f5 0b       	sbc	r31, r21
    1306:	a1 e0       	ldi	r26, 0x01	; 1
    1308:	b0 e0       	ldi	r27, 0x00	; 0
    130a:	ac 0f       	add	r26, r28
    130c:	bd 1f       	adc	r27, r29
    130e:	ea 0f       	add	r30, r26
    1310:	fb 1f       	adc	r31, r27
    1312:	8e e2       	ldi	r24, 0x2E	; 46
    1314:	a8 2e       	mov	r10, r24
    1316:	4b 01       	movw	r8, r22
    1318:	80 1a       	sub	r8, r16
    131a:	91 08       	sbc	r9, r1
    131c:	0b 2d       	mov	r16, r11
    131e:	10 e0       	ldi	r17, 0x00	; 0
    1320:	11 95       	neg	r17
    1322:	01 95       	neg	r16
    1324:	11 09       	sbc	r17, r1
    1326:	4f 3f       	cpi	r20, 0xFF	; 255
    1328:	bf ef       	ldi	r27, 0xFF	; 255
    132a:	5b 07       	cpc	r21, r27
    132c:	21 f4       	brne	.+8      	; 0x1336 <dtoa_prf+0x262>
    132e:	d6 01       	movw	r26, r12
    1330:	ac 92       	st	X, r10
    1332:	11 96       	adiw	r26, 0x01	; 1
    1334:	6d 01       	movw	r12, r26
    1336:	64 17       	cp	r22, r20
    1338:	75 07       	cpc	r23, r21
    133a:	2c f0       	brlt	.+10     	; 0x1346 <dtoa_prf+0x272>
    133c:	84 16       	cp	r8, r20
    133e:	95 06       	cpc	r9, r21
    1340:	14 f4       	brge	.+4      	; 0x1346 <dtoa_prf+0x272>
    1342:	81 81       	ldd	r24, Z+1	; 0x01
    1344:	01 c0       	rjmp	.+2      	; 0x1348 <dtoa_prf+0x274>
    1346:	80 e3       	ldi	r24, 0x30	; 48
    1348:	41 50       	subi	r20, 0x01	; 1
    134a:	51 09       	sbc	r21, r1
    134c:	31 96       	adiw	r30, 0x01	; 1
    134e:	d6 01       	movw	r26, r12
    1350:	11 96       	adiw	r26, 0x01	; 1
    1352:	7d 01       	movw	r14, r26
    1354:	40 17       	cp	r20, r16
    1356:	51 07       	cpc	r21, r17
    1358:	24 f0       	brlt	.+8      	; 0x1362 <dtoa_prf+0x28e>
    135a:	d6 01       	movw	r26, r12
    135c:	8c 93       	st	X, r24
    135e:	67 01       	movw	r12, r14
    1360:	e2 cf       	rjmp	.-60     	; 0x1326 <dtoa_prf+0x252>
    1362:	64 17       	cp	r22, r20
    1364:	75 07       	cpc	r23, r21
    1366:	39 f4       	brne	.+14     	; 0x1376 <dtoa_prf+0x2a2>
    1368:	96 33       	cpi	r25, 0x36	; 54
    136a:	20 f4       	brcc	.+8      	; 0x1374 <dtoa_prf+0x2a0>
    136c:	95 33       	cpi	r25, 0x35	; 53
    136e:	19 f4       	brne	.+6      	; 0x1376 <dtoa_prf+0x2a2>
    1370:	31 11       	cpse	r19, r1
    1372:	01 c0       	rjmp	.+2      	; 0x1376 <dtoa_prf+0x2a2>
    1374:	81 e3       	ldi	r24, 0x31	; 49
    1376:	f6 01       	movw	r30, r12
    1378:	80 83       	st	Z, r24
    137a:	f7 01       	movw	r30, r14
    137c:	82 2f       	mov	r24, r18
    137e:	90 e2       	ldi	r25, 0x20	; 32
    1380:	88 23       	and	r24, r24
    1382:	19 f0       	breq	.+6      	; 0x138a <dtoa_prf+0x2b6>
    1384:	91 93       	st	Z+, r25
    1386:	81 50       	subi	r24, 0x01	; 1
    1388:	fb cf       	rjmp	.-10     	; 0x1380 <dtoa_prf+0x2ac>
    138a:	f7 01       	movw	r30, r14
    138c:	e2 0f       	add	r30, r18
    138e:	f1 1d       	adc	r31, r1
    1390:	10 82       	st	Z, r1
    1392:	80 e0       	ldi	r24, 0x00	; 0
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	29 96       	adiw	r28, 0x09	; 9
    1398:	cd bf       	out	0x3d, r28	; 61
    139a:	de bf       	out	0x3e, r29	; 62
    139c:	df 91       	pop	r29
    139e:	cf 91       	pop	r28
    13a0:	1f 91       	pop	r17
    13a2:	0f 91       	pop	r16
    13a4:	ff 90       	pop	r15
    13a6:	ef 90       	pop	r14
    13a8:	df 90       	pop	r13
    13aa:	cf 90       	pop	r12
    13ac:	bf 90       	pop	r11
    13ae:	af 90       	pop	r10
    13b0:	9f 90       	pop	r9
    13b2:	8f 90       	pop	r8
    13b4:	08 95       	ret

000013b6 <__ftoa_engine>:
    13b6:	28 30       	cpi	r18, 0x08	; 8
    13b8:	08 f0       	brcs	.+2      	; 0x13bc <__ftoa_engine+0x6>
    13ba:	27 e0       	ldi	r18, 0x07	; 7
    13bc:	33 27       	eor	r19, r19
    13be:	da 01       	movw	r26, r20
    13c0:	99 0f       	add	r25, r25
    13c2:	31 1d       	adc	r19, r1
    13c4:	87 fd       	sbrc	r24, 7
    13c6:	91 60       	ori	r25, 0x01	; 1
    13c8:	00 96       	adiw	r24, 0x00	; 0
    13ca:	61 05       	cpc	r22, r1
    13cc:	71 05       	cpc	r23, r1
    13ce:	39 f4       	brne	.+14     	; 0x13de <__ftoa_engine+0x28>
    13d0:	32 60       	ori	r19, 0x02	; 2
    13d2:	2e 5f       	subi	r18, 0xFE	; 254
    13d4:	3d 93       	st	X+, r19
    13d6:	30 e3       	ldi	r19, 0x30	; 48
    13d8:	2a 95       	dec	r18
    13da:	e1 f7       	brne	.-8      	; 0x13d4 <__ftoa_engine+0x1e>
    13dc:	08 95       	ret
    13de:	9f 3f       	cpi	r25, 0xFF	; 255
    13e0:	30 f0       	brcs	.+12     	; 0x13ee <__ftoa_engine+0x38>
    13e2:	80 38       	cpi	r24, 0x80	; 128
    13e4:	71 05       	cpc	r23, r1
    13e6:	61 05       	cpc	r22, r1
    13e8:	09 f0       	breq	.+2      	; 0x13ec <__ftoa_engine+0x36>
    13ea:	3c 5f       	subi	r19, 0xFC	; 252
    13ec:	3c 5f       	subi	r19, 0xFC	; 252
    13ee:	3d 93       	st	X+, r19
    13f0:	91 30       	cpi	r25, 0x01	; 1
    13f2:	08 f0       	brcs	.+2      	; 0x13f6 <__ftoa_engine+0x40>
    13f4:	80 68       	ori	r24, 0x80	; 128
    13f6:	91 1d       	adc	r25, r1
    13f8:	df 93       	push	r29
    13fa:	cf 93       	push	r28
    13fc:	1f 93       	push	r17
    13fe:	0f 93       	push	r16
    1400:	ff 92       	push	r15
    1402:	ef 92       	push	r14
    1404:	19 2f       	mov	r17, r25
    1406:	98 7f       	andi	r25, 0xF8	; 248
    1408:	96 95       	lsr	r25
    140a:	e9 2f       	mov	r30, r25
    140c:	96 95       	lsr	r25
    140e:	96 95       	lsr	r25
    1410:	e9 0f       	add	r30, r25
    1412:	ff 27       	eor	r31, r31
    1414:	e4 59       	subi	r30, 0x94	; 148
    1416:	fe 4f       	sbci	r31, 0xFE	; 254
    1418:	99 27       	eor	r25, r25
    141a:	33 27       	eor	r19, r19
    141c:	ee 24       	eor	r14, r14
    141e:	ff 24       	eor	r15, r15
    1420:	a7 01       	movw	r20, r14
    1422:	e7 01       	movw	r28, r14
    1424:	05 90       	lpm	r0, Z+
    1426:	08 94       	sec
    1428:	07 94       	ror	r0
    142a:	28 f4       	brcc	.+10     	; 0x1436 <__ftoa_engine+0x80>
    142c:	36 0f       	add	r19, r22
    142e:	e7 1e       	adc	r14, r23
    1430:	f8 1e       	adc	r15, r24
    1432:	49 1f       	adc	r20, r25
    1434:	51 1d       	adc	r21, r1
    1436:	66 0f       	add	r22, r22
    1438:	77 1f       	adc	r23, r23
    143a:	88 1f       	adc	r24, r24
    143c:	99 1f       	adc	r25, r25
    143e:	06 94       	lsr	r0
    1440:	a1 f7       	brne	.-24     	; 0x142a <__ftoa_engine+0x74>
    1442:	05 90       	lpm	r0, Z+
    1444:	07 94       	ror	r0
    1446:	28 f4       	brcc	.+10     	; 0x1452 <__ftoa_engine+0x9c>
    1448:	e7 0e       	add	r14, r23
    144a:	f8 1e       	adc	r15, r24
    144c:	49 1f       	adc	r20, r25
    144e:	56 1f       	adc	r21, r22
    1450:	c1 1d       	adc	r28, r1
    1452:	77 0f       	add	r23, r23
    1454:	88 1f       	adc	r24, r24
    1456:	99 1f       	adc	r25, r25
    1458:	66 1f       	adc	r22, r22
    145a:	06 94       	lsr	r0
    145c:	a1 f7       	brne	.-24     	; 0x1446 <__ftoa_engine+0x90>
    145e:	05 90       	lpm	r0, Z+
    1460:	07 94       	ror	r0
    1462:	28 f4       	brcc	.+10     	; 0x146e <__ftoa_engine+0xb8>
    1464:	f8 0e       	add	r15, r24
    1466:	49 1f       	adc	r20, r25
    1468:	56 1f       	adc	r21, r22
    146a:	c7 1f       	adc	r28, r23
    146c:	d1 1d       	adc	r29, r1
    146e:	88 0f       	add	r24, r24
    1470:	99 1f       	adc	r25, r25
    1472:	66 1f       	adc	r22, r22
    1474:	77 1f       	adc	r23, r23
    1476:	06 94       	lsr	r0
    1478:	a1 f7       	brne	.-24     	; 0x1462 <__ftoa_engine+0xac>
    147a:	05 90       	lpm	r0, Z+
    147c:	07 94       	ror	r0
    147e:	20 f4       	brcc	.+8      	; 0x1488 <__ftoa_engine+0xd2>
    1480:	49 0f       	add	r20, r25
    1482:	56 1f       	adc	r21, r22
    1484:	c7 1f       	adc	r28, r23
    1486:	d8 1f       	adc	r29, r24
    1488:	99 0f       	add	r25, r25
    148a:	66 1f       	adc	r22, r22
    148c:	77 1f       	adc	r23, r23
    148e:	88 1f       	adc	r24, r24
    1490:	06 94       	lsr	r0
    1492:	a9 f7       	brne	.-22     	; 0x147e <__ftoa_engine+0xc8>
    1494:	84 91       	lpm	r24, Z
    1496:	10 95       	com	r17
    1498:	17 70       	andi	r17, 0x07	; 7
    149a:	41 f0       	breq	.+16     	; 0x14ac <__ftoa_engine+0xf6>
    149c:	d6 95       	lsr	r29
    149e:	c7 95       	ror	r28
    14a0:	57 95       	ror	r21
    14a2:	47 95       	ror	r20
    14a4:	f7 94       	ror	r15
    14a6:	e7 94       	ror	r14
    14a8:	1a 95       	dec	r17
    14aa:	c1 f7       	brne	.-16     	; 0x149c <__ftoa_engine+0xe6>
    14ac:	e2 e1       	ldi	r30, 0x12	; 18
    14ae:	f1 e0       	ldi	r31, 0x01	; 1
    14b0:	68 94       	set
    14b2:	15 90       	lpm	r1, Z+
    14b4:	15 91       	lpm	r17, Z+
    14b6:	35 91       	lpm	r19, Z+
    14b8:	65 91       	lpm	r22, Z+
    14ba:	95 91       	lpm	r25, Z+
    14bc:	05 90       	lpm	r0, Z+
    14be:	7f e2       	ldi	r23, 0x2F	; 47
    14c0:	73 95       	inc	r23
    14c2:	e1 18       	sub	r14, r1
    14c4:	f1 0a       	sbc	r15, r17
    14c6:	43 0b       	sbc	r20, r19
    14c8:	56 0b       	sbc	r21, r22
    14ca:	c9 0b       	sbc	r28, r25
    14cc:	d0 09       	sbc	r29, r0
    14ce:	c0 f7       	brcc	.-16     	; 0x14c0 <__ftoa_engine+0x10a>
    14d0:	e1 0c       	add	r14, r1
    14d2:	f1 1e       	adc	r15, r17
    14d4:	43 1f       	adc	r20, r19
    14d6:	56 1f       	adc	r21, r22
    14d8:	c9 1f       	adc	r28, r25
    14da:	d0 1d       	adc	r29, r0
    14dc:	7e f4       	brtc	.+30     	; 0x14fc <__ftoa_engine+0x146>
    14de:	70 33       	cpi	r23, 0x30	; 48
    14e0:	11 f4       	brne	.+4      	; 0x14e6 <__ftoa_engine+0x130>
    14e2:	8a 95       	dec	r24
    14e4:	e6 cf       	rjmp	.-52     	; 0x14b2 <__ftoa_engine+0xfc>
    14e6:	e8 94       	clt
    14e8:	01 50       	subi	r16, 0x01	; 1
    14ea:	30 f0       	brcs	.+12     	; 0x14f8 <__ftoa_engine+0x142>
    14ec:	08 0f       	add	r16, r24
    14ee:	0a f4       	brpl	.+2      	; 0x14f2 <__ftoa_engine+0x13c>
    14f0:	00 27       	eor	r16, r16
    14f2:	02 17       	cp	r16, r18
    14f4:	08 f4       	brcc	.+2      	; 0x14f8 <__ftoa_engine+0x142>
    14f6:	20 2f       	mov	r18, r16
    14f8:	23 95       	inc	r18
    14fa:	02 2f       	mov	r16, r18
    14fc:	7a 33       	cpi	r23, 0x3A	; 58
    14fe:	28 f0       	brcs	.+10     	; 0x150a <__ftoa_engine+0x154>
    1500:	79 e3       	ldi	r23, 0x39	; 57
    1502:	7d 93       	st	X+, r23
    1504:	2a 95       	dec	r18
    1506:	e9 f7       	brne	.-6      	; 0x1502 <__ftoa_engine+0x14c>
    1508:	10 c0       	rjmp	.+32     	; 0x152a <__ftoa_engine+0x174>
    150a:	7d 93       	st	X+, r23
    150c:	2a 95       	dec	r18
    150e:	89 f6       	brne	.-94     	; 0x14b2 <__ftoa_engine+0xfc>
    1510:	06 94       	lsr	r0
    1512:	97 95       	ror	r25
    1514:	67 95       	ror	r22
    1516:	37 95       	ror	r19
    1518:	17 95       	ror	r17
    151a:	17 94       	ror	r1
    151c:	e1 18       	sub	r14, r1
    151e:	f1 0a       	sbc	r15, r17
    1520:	43 0b       	sbc	r20, r19
    1522:	56 0b       	sbc	r21, r22
    1524:	c9 0b       	sbc	r28, r25
    1526:	d0 09       	sbc	r29, r0
    1528:	98 f0       	brcs	.+38     	; 0x1550 <__ftoa_engine+0x19a>
    152a:	23 95       	inc	r18
    152c:	7e 91       	ld	r23, -X
    152e:	73 95       	inc	r23
    1530:	7a 33       	cpi	r23, 0x3A	; 58
    1532:	08 f0       	brcs	.+2      	; 0x1536 <__ftoa_engine+0x180>
    1534:	70 e3       	ldi	r23, 0x30	; 48
    1536:	7c 93       	st	X, r23
    1538:	20 13       	cpse	r18, r16
    153a:	b8 f7       	brcc	.-18     	; 0x152a <__ftoa_engine+0x174>
    153c:	7e 91       	ld	r23, -X
    153e:	70 61       	ori	r23, 0x10	; 16
    1540:	7d 93       	st	X+, r23
    1542:	30 f0       	brcs	.+12     	; 0x1550 <__ftoa_engine+0x19a>
    1544:	83 95       	inc	r24
    1546:	71 e3       	ldi	r23, 0x31	; 49
    1548:	7d 93       	st	X+, r23
    154a:	70 e3       	ldi	r23, 0x30	; 48
    154c:	2a 95       	dec	r18
    154e:	e1 f7       	brne	.-8      	; 0x1548 <__ftoa_engine+0x192>
    1550:	11 24       	eor	r1, r1
    1552:	ef 90       	pop	r14
    1554:	ff 90       	pop	r15
    1556:	0f 91       	pop	r16
    1558:	1f 91       	pop	r17
    155a:	cf 91       	pop	r28
    155c:	df 91       	pop	r29
    155e:	99 27       	eor	r25, r25
    1560:	87 fd       	sbrc	r24, 7
    1562:	90 95       	com	r25
    1564:	08 95       	ret

00001566 <_exit>:
    1566:	f8 94       	cli

00001568 <__stop_program>:
    1568:	ff cf       	rjmp	.-2      	; 0x1568 <__stop_program>
