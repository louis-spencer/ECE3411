
Digital_Input_Lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  00000580  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000052c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000580  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000336b  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002e4b  00000000  00000000  0000398b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a6  00000000  00000000  000067d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000008c  00000000  00000000  00006c7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000017f5  00000000  00000000  00006d08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000031a  00000000  00000000  000084fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00008817  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <main>
 104:	0c 94 94 02 	jmp	0x528	; 0x528 <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <delay>:
#include <util/delay.h>

#define BM_(x) ((1 << x))


void delay(double time_ms) {
 10c:	cf 92       	push	r12
 10e:	df 92       	push	r13
 110:	ef 92       	push	r14
 112:	ff 92       	push	r15
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	6b 01       	movw	r12, r22
 11a:	7c 01       	movw	r14, r24
	for (int i = 0; i < time_ms; i++) {
 11c:	c0 e0       	ldi	r28, 0x00	; 0
 11e:	d0 e0       	ldi	r29, 0x00	; 0
 120:	07 c0       	rjmp	.+14     	; 0x130 <delay+0x24>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 122:	87 ee       	ldi	r24, 0xE7	; 231
 124:	93 e0       	ldi	r25, 0x03	; 3
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <delay+0x1a>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <delay+0x20>
 12c:	00 00       	nop
 12e:	21 96       	adiw	r28, 0x01	; 1
 130:	be 01       	movw	r22, r28
 132:	0d 2e       	mov	r0, r29
 134:	00 0c       	add	r0, r0
 136:	88 0b       	sbc	r24, r24
 138:	99 0b       	sbc	r25, r25
 13a:	0e 94 4f 01 	call	0x29e	; 0x29e <__floatsisf>
 13e:	a7 01       	movw	r20, r14
 140:	96 01       	movw	r18, r12
 142:	0e 94 48 01 	call	0x290	; 0x290 <__cmpsf2>
 146:	88 23       	and	r24, r24
 148:	64 f3       	brlt	.-40     	; 0x122 <delay+0x16>
		_delay_ms(1);
	}
}
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	ff 90       	pop	r15
 150:	ef 90       	pop	r14
 152:	df 90       	pop	r13
 154:	cf 90       	pop	r12
 156:	08 95       	ret

00000158 <blink_cycle>:

void blink_cycle(char pin, double period_ms) {
 158:	cf 92       	push	r12
 15a:	df 92       	push	r13
 15c:	ef 92       	push	r14
 15e:	ff 92       	push	r15
 160:	0f 93       	push	r16
 162:	1f 93       	push	r17
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	6a 01       	movw	r12, r20
 16a:	7b 01       	movw	r14, r22
	PORTD.OUT |= (1 << pin);
 16c:	00 e6       	ldi	r16, 0x60	; 96
 16e:	14 e0       	ldi	r17, 0x04	; 4
 170:	f8 01       	movw	r30, r16
 172:	94 81       	ldd	r25, Z+4	; 0x04
 174:	c1 e0       	ldi	r28, 0x01	; 1
 176:	d0 e0       	ldi	r29, 0x00	; 0
 178:	02 c0       	rjmp	.+4      	; 0x17e <blink_cycle+0x26>
 17a:	cc 0f       	add	r28, r28
 17c:	dd 1f       	adc	r29, r29
 17e:	8a 95       	dec	r24
 180:	e2 f7       	brpl	.-8      	; 0x17a <blink_cycle+0x22>
 182:	9c 2b       	or	r25, r28
 184:	f8 01       	movw	r30, r16
 186:	94 83       	std	Z+4, r25	; 0x04
	delay(period_ms/2);
 188:	20 e0       	ldi	r18, 0x00	; 0
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	5f e3       	ldi	r21, 0x3F	; 63
 190:	c7 01       	movw	r24, r14
 192:	b6 01       	movw	r22, r12
 194:	0e 94 ae 01 	call	0x35c	; 0x35c <__mulsf3>
 198:	6b 01       	movw	r12, r22
 19a:	7c 01       	movw	r14, r24
 19c:	0e 94 86 00 	call	0x10c	; 0x10c <delay>
	PORTD.OUT &= ~(1 << pin);
 1a0:	f8 01       	movw	r30, r16
 1a2:	84 81       	ldd	r24, Z+4	; 0x04
 1a4:	c0 95       	com	r28
 1a6:	c8 23       	and	r28, r24
 1a8:	c4 83       	std	Z+4, r28	; 0x04
	delay(period_ms/2);
 1aa:	c7 01       	movw	r24, r14
 1ac:	b6 01       	movw	r22, r12
 1ae:	0e 94 86 00 	call	0x10c	; 0x10c <delay>
}
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	1f 91       	pop	r17
 1b8:	0f 91       	pop	r16
 1ba:	ff 90       	pop	r15
 1bc:	ef 90       	pop	r14
 1be:	df 90       	pop	r13
 1c0:	cf 90       	pop	r12
 1c2:	08 95       	ret

000001c4 <main>:

int main(void)
{
    /* Replace with your application code */
	PORTB.PIN2CTRL |= PORT_PULLUPEN_bm;
 1c4:	e0 e2       	ldi	r30, 0x20	; 32
 1c6:	f4 e0       	ldi	r31, 0x04	; 4
 1c8:	82 89       	ldd	r24, Z+18	; 0x12
 1ca:	88 60       	ori	r24, 0x08	; 8
 1cc:	82 8b       	std	Z+18, r24	; 0x12
    PORTB.DIR = 0x00;
 1ce:	10 82       	st	Z, r1
	
	PORTD.DIR = 0xff;
 1d0:	e0 e6       	ldi	r30, 0x60	; 96
 1d2:	f4 e0       	ldi	r31, 0x04	; 4
 1d4:	8f ef       	ldi	r24, 0xFF	; 255
 1d6:	80 83       	st	Z, r24
	PORTD.OUT = 0x00;
 1d8:	14 82       	std	Z+4, r1	; 0x04
	unsigned char btn_handled2 = 0;
	unsigned char btn_handled5 = 0;
	unsigned char btn_handled25 = 0;
	
	char dir = 1;
	char pin = 3;
 1da:	13 e0       	ldi	r17, 0x03	; 3
	double curr_per_ms = 1000 / curr_freq;
	unsigned char btn_handled2 = 0;
	unsigned char btn_handled5 = 0;
	unsigned char btn_handled25 = 0;
	
	char dir = 1;
 1dc:	99 24       	eor	r9, r9
 1de:	93 94       	inc	r9
	
	int curr_freq = 3;
	double curr_per_ms = 1000 / curr_freq;
	unsigned char btn_handled2 = 0;
	unsigned char btn_handled5 = 0;
	unsigned char btn_handled25 = 0;
 1e0:	a1 2c       	mov	r10, r1
	PORTD.OUT = 0x00;
	
	int curr_freq = 3;
	double curr_per_ms = 1000 / curr_freq;
	unsigned char btn_handled2 = 0;
	unsigned char btn_handled5 = 0;
 1e2:	b1 2c       	mov	r11, r1
	PORTD.DIR = 0xff;
	PORTD.OUT = 0x00;
	
	int curr_freq = 3;
	double curr_per_ms = 1000 / curr_freq;
	unsigned char btn_handled2 = 0;
 1e4:	00 e0       	ldi	r16, 0x00	; 0
	
	PORTD.DIR = 0xff;
	PORTD.OUT = 0x00;
	
	int curr_freq = 3;
	double curr_per_ms = 1000 / curr_freq;
 1e6:	0f 2e       	mov	r0, r31
 1e8:	c1 2c       	mov	r12, r1
 1ea:	f0 e8       	ldi	r31, 0x80	; 128
 1ec:	df 2e       	mov	r13, r31
 1ee:	f6 ea       	ldi	r31, 0xA6	; 166
 1f0:	ef 2e       	mov	r14, r31
 1f2:	f3 e4       	ldi	r31, 0x43	; 67
 1f4:	ff 2e       	mov	r15, r31
 1f6:	f0 2d       	mov	r31, r0
    PORTB.DIR = 0x00;
	
	PORTD.DIR = 0xff;
	PORTD.OUT = 0x00;
	
	int curr_freq = 3;
 1f8:	c3 e0       	ldi	r28, 0x03	; 3
 1fa:	d0 e0       	ldi	r29, 0x00	; 0
 1fc:	01 c0       	rjmp	.+2      	; 0x200 <__EEPROM_REGION_LENGTH__>
				if (pin >= 7 || pin <= 0) dir = -dir;
				pin += dir;
				btn_handled25 = 1;
			}
		} else {
			btn_handled25 = 0;	
 1fe:	a1 2c       	mov	r10, r1
		
		if (! (PORTB.IN & BM_(2)) ) PORTD.OUT |= BM_(2);
		else PORTD.OUT &= ~BM_(2);*/
		
		
		blink_cycle(pin, curr_per_ms);
 200:	b7 01       	movw	r22, r14
 202:	a6 01       	movw	r20, r12
 204:	81 2f       	mov	r24, r17
 206:	0e 94 ac 00 	call	0x158	; 0x158 <blink_cycle>
		
		// one shot pin2 button BTN1
		if ( !(PORTB.IN & PIN2_bm) ) {
 20a:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <__TEXT_REGION_LENGTH__+0x7e0428>
 20e:	82 fd       	sbrc	r24, 2
 210:	12 c0       	rjmp	.+36     	; 0x236 <__EEPROM_REGION_LENGTH__+0x36>
			if (!btn_handled2) {
 212:	01 11       	cpse	r16, r1
 214:	11 c0       	rjmp	.+34     	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
				// add functionality
				curr_freq++;
 216:	21 96       	adiw	r28, 0x01	; 1
				curr_per_ms = 1000 / curr_freq;
 218:	88 ee       	ldi	r24, 0xE8	; 232
 21a:	93 e0       	ldi	r25, 0x03	; 3
 21c:	be 01       	movw	r22, r28
 21e:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__divmodhi4>
 222:	07 2e       	mov	r0, r23
 224:	00 0c       	add	r0, r0
 226:	88 0b       	sbc	r24, r24
 228:	99 0b       	sbc	r25, r25
 22a:	0e 94 4f 01 	call	0x29e	; 0x29e <__floatsisf>
 22e:	6b 01       	movw	r12, r22
 230:	7c 01       	movw	r14, r24
				btn_handled2 = 1;
 232:	01 e0       	ldi	r16, 0x01	; 1
 234:	01 c0       	rjmp	.+2      	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
			}
		} else {
			btn_handled2 = 0;
 236:	00 e0       	ldi	r16, 0x00	; 0
		}
		
		// one shot pin5 button BTN2
		if ( !(PORTB.IN & PIN5_bm) ) {
 238:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <__TEXT_REGION_LENGTH__+0x7e0428>
 23c:	85 fd       	sbrc	r24, 5
 23e:	18 c0       	rjmp	.+48     	; 0x270 <__EEPROM_REGION_LENGTH__+0x70>
			if (!btn_handled5) {
 240:	b1 10       	cpse	r11, r1
 242:	17 c0       	rjmp	.+46     	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
				// add functionality
				curr_freq--;
 244:	21 97       	sbiw	r28, 0x01	; 1
				if (curr_freq < 1) curr_freq = 1;
 246:	1c 16       	cp	r1, r28
 248:	1d 06       	cpc	r1, r29
 24a:	14 f0       	brlt	.+4      	; 0x250 <__EEPROM_REGION_LENGTH__+0x50>
 24c:	c1 e0       	ldi	r28, 0x01	; 1
 24e:	d0 e0       	ldi	r29, 0x00	; 0
				curr_per_ms = 1000 / curr_freq;
 250:	88 ee       	ldi	r24, 0xE8	; 232
 252:	93 e0       	ldi	r25, 0x03	; 3
 254:	be 01       	movw	r22, r28
 256:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__divmodhi4>
 25a:	07 2e       	mov	r0, r23
 25c:	00 0c       	add	r0, r0
 25e:	88 0b       	sbc	r24, r24
 260:	99 0b       	sbc	r25, r25
 262:	0e 94 4f 01 	call	0x29e	; 0x29e <__floatsisf>
 266:	6b 01       	movw	r12, r22
 268:	7c 01       	movw	r14, r24
				btn_handled5 = 1;
 26a:	bb 24       	eor	r11, r11
 26c:	b3 94       	inc	r11
 26e:	01 c0       	rjmp	.+2      	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
			}
		} else {
			btn_handled5 = 0;
 270:	b1 2c       	mov	r11, r1
		}
		
		// one shot pin2 and pin5 BTN1+BTN2
		if ( !(PORTB.IN & (PIN5_bm | PIN2_bm)) ) {
 272:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <__TEXT_REGION_LENGTH__+0x7e0428>
 276:	84 72       	andi	r24, 0x24	; 36
 278:	11 f6       	brne	.-124    	; 0x1fe <main+0x3a>
			if (!btn_handled25) {
 27a:	a1 10       	cpse	r10, r1
 27c:	c1 cf       	rjmp	.-126    	; 0x200 <__EEPROM_REGION_LENGTH__>
				if (pin >= 7 || pin <= 0) dir = -dir;
 27e:	8f ef       	ldi	r24, 0xFF	; 255
 280:	81 0f       	add	r24, r17
 282:	86 30       	cpi	r24, 0x06	; 6
 284:	08 f0       	brcs	.+2      	; 0x288 <__EEPROM_REGION_LENGTH__+0x88>
 286:	91 94       	neg	r9
				pin += dir;
 288:	19 0d       	add	r17, r9
				btn_handled25 = 1;
 28a:	aa 24       	eor	r10, r10
 28c:	a3 94       	inc	r10
 28e:	b8 cf       	rjmp	.-144    	; 0x200 <__EEPROM_REGION_LENGTH__>

00000290 <__cmpsf2>:
 290:	0e 94 8a 01 	call	0x314	; 0x314 <__fp_cmp>
 294:	08 f4       	brcc	.+2      	; 0x298 <__cmpsf2+0x8>
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	08 95       	ret

0000029a <__floatunsisf>:
 29a:	e8 94       	clt
 29c:	09 c0       	rjmp	.+18     	; 0x2b0 <__floatsisf+0x12>

0000029e <__floatsisf>:
 29e:	97 fb       	bst	r25, 7
 2a0:	3e f4       	brtc	.+14     	; 0x2b0 <__floatsisf+0x12>
 2a2:	90 95       	com	r25
 2a4:	80 95       	com	r24
 2a6:	70 95       	com	r23
 2a8:	61 95       	neg	r22
 2aa:	7f 4f       	sbci	r23, 0xFF	; 255
 2ac:	8f 4f       	sbci	r24, 0xFF	; 255
 2ae:	9f 4f       	sbci	r25, 0xFF	; 255
 2b0:	99 23       	and	r25, r25
 2b2:	a9 f0       	breq	.+42     	; 0x2de <__floatsisf+0x40>
 2b4:	f9 2f       	mov	r31, r25
 2b6:	96 e9       	ldi	r25, 0x96	; 150
 2b8:	bb 27       	eor	r27, r27
 2ba:	93 95       	inc	r25
 2bc:	f6 95       	lsr	r31
 2be:	87 95       	ror	r24
 2c0:	77 95       	ror	r23
 2c2:	67 95       	ror	r22
 2c4:	b7 95       	ror	r27
 2c6:	f1 11       	cpse	r31, r1
 2c8:	f8 cf       	rjmp	.-16     	; 0x2ba <__floatsisf+0x1c>
 2ca:	fa f4       	brpl	.+62     	; 0x30a <__floatsisf+0x6c>
 2cc:	bb 0f       	add	r27, r27
 2ce:	11 f4       	brne	.+4      	; 0x2d4 <__floatsisf+0x36>
 2d0:	60 ff       	sbrs	r22, 0
 2d2:	1b c0       	rjmp	.+54     	; 0x30a <__floatsisf+0x6c>
 2d4:	6f 5f       	subi	r22, 0xFF	; 255
 2d6:	7f 4f       	sbci	r23, 0xFF	; 255
 2d8:	8f 4f       	sbci	r24, 0xFF	; 255
 2da:	9f 4f       	sbci	r25, 0xFF	; 255
 2dc:	16 c0       	rjmp	.+44     	; 0x30a <__floatsisf+0x6c>
 2de:	88 23       	and	r24, r24
 2e0:	11 f0       	breq	.+4      	; 0x2e6 <__floatsisf+0x48>
 2e2:	96 e9       	ldi	r25, 0x96	; 150
 2e4:	11 c0       	rjmp	.+34     	; 0x308 <__floatsisf+0x6a>
 2e6:	77 23       	and	r23, r23
 2e8:	21 f0       	breq	.+8      	; 0x2f2 <__floatsisf+0x54>
 2ea:	9e e8       	ldi	r25, 0x8E	; 142
 2ec:	87 2f       	mov	r24, r23
 2ee:	76 2f       	mov	r23, r22
 2f0:	05 c0       	rjmp	.+10     	; 0x2fc <__floatsisf+0x5e>
 2f2:	66 23       	and	r22, r22
 2f4:	71 f0       	breq	.+28     	; 0x312 <__floatsisf+0x74>
 2f6:	96 e8       	ldi	r25, 0x86	; 134
 2f8:	86 2f       	mov	r24, r22
 2fa:	70 e0       	ldi	r23, 0x00	; 0
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	2a f0       	brmi	.+10     	; 0x30a <__floatsisf+0x6c>
 300:	9a 95       	dec	r25
 302:	66 0f       	add	r22, r22
 304:	77 1f       	adc	r23, r23
 306:	88 1f       	adc	r24, r24
 308:	da f7       	brpl	.-10     	; 0x300 <__floatsisf+0x62>
 30a:	88 0f       	add	r24, r24
 30c:	96 95       	lsr	r25
 30e:	87 95       	ror	r24
 310:	97 f9       	bld	r25, 7
 312:	08 95       	ret

00000314 <__fp_cmp>:
 314:	99 0f       	add	r25, r25
 316:	00 08       	sbc	r0, r0
 318:	55 0f       	add	r21, r21
 31a:	aa 0b       	sbc	r26, r26
 31c:	e0 e8       	ldi	r30, 0x80	; 128
 31e:	fe ef       	ldi	r31, 0xFE	; 254
 320:	16 16       	cp	r1, r22
 322:	17 06       	cpc	r1, r23
 324:	e8 07       	cpc	r30, r24
 326:	f9 07       	cpc	r31, r25
 328:	c0 f0       	brcs	.+48     	; 0x35a <__fp_cmp+0x46>
 32a:	12 16       	cp	r1, r18
 32c:	13 06       	cpc	r1, r19
 32e:	e4 07       	cpc	r30, r20
 330:	f5 07       	cpc	r31, r21
 332:	98 f0       	brcs	.+38     	; 0x35a <__fp_cmp+0x46>
 334:	62 1b       	sub	r22, r18
 336:	73 0b       	sbc	r23, r19
 338:	84 0b       	sbc	r24, r20
 33a:	95 0b       	sbc	r25, r21
 33c:	39 f4       	brne	.+14     	; 0x34c <__fp_cmp+0x38>
 33e:	0a 26       	eor	r0, r26
 340:	61 f0       	breq	.+24     	; 0x35a <__fp_cmp+0x46>
 342:	23 2b       	or	r18, r19
 344:	24 2b       	or	r18, r20
 346:	25 2b       	or	r18, r21
 348:	21 f4       	brne	.+8      	; 0x352 <__fp_cmp+0x3e>
 34a:	08 95       	ret
 34c:	0a 26       	eor	r0, r26
 34e:	09 f4       	brne	.+2      	; 0x352 <__fp_cmp+0x3e>
 350:	a1 40       	sbci	r26, 0x01	; 1
 352:	a6 95       	lsr	r26
 354:	8f ef       	ldi	r24, 0xFF	; 255
 356:	81 1d       	adc	r24, r1
 358:	81 1d       	adc	r24, r1
 35a:	08 95       	ret

0000035c <__mulsf3>:
 35c:	0e 94 c1 01 	call	0x382	; 0x382 <__mulsf3x>
 360:	0c 94 32 02 	jmp	0x464	; 0x464 <__fp_round>
 364:	0e 94 24 02 	call	0x448	; 0x448 <__fp_pscA>
 368:	38 f0       	brcs	.+14     	; 0x378 <__mulsf3+0x1c>
 36a:	0e 94 2b 02 	call	0x456	; 0x456 <__fp_pscB>
 36e:	20 f0       	brcs	.+8      	; 0x378 <__mulsf3+0x1c>
 370:	95 23       	and	r25, r21
 372:	11 f0       	breq	.+4      	; 0x378 <__mulsf3+0x1c>
 374:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_inf>
 378:	0c 94 21 02 	jmp	0x442	; 0x442 <__fp_nan>
 37c:	11 24       	eor	r1, r1
 37e:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__fp_szero>

00000382 <__mulsf3x>:
 382:	0e 94 43 02 	call	0x486	; 0x486 <__fp_split3>
 386:	70 f3       	brcs	.-36     	; 0x364 <__mulsf3+0x8>

00000388 <__mulsf3_pse>:
 388:	95 9f       	mul	r25, r21
 38a:	c1 f3       	breq	.-16     	; 0x37c <__mulsf3+0x20>
 38c:	95 0f       	add	r25, r21
 38e:	50 e0       	ldi	r21, 0x00	; 0
 390:	55 1f       	adc	r21, r21
 392:	62 9f       	mul	r22, r18
 394:	f0 01       	movw	r30, r0
 396:	72 9f       	mul	r23, r18
 398:	bb 27       	eor	r27, r27
 39a:	f0 0d       	add	r31, r0
 39c:	b1 1d       	adc	r27, r1
 39e:	63 9f       	mul	r22, r19
 3a0:	aa 27       	eor	r26, r26
 3a2:	f0 0d       	add	r31, r0
 3a4:	b1 1d       	adc	r27, r1
 3a6:	aa 1f       	adc	r26, r26
 3a8:	64 9f       	mul	r22, r20
 3aa:	66 27       	eor	r22, r22
 3ac:	b0 0d       	add	r27, r0
 3ae:	a1 1d       	adc	r26, r1
 3b0:	66 1f       	adc	r22, r22
 3b2:	82 9f       	mul	r24, r18
 3b4:	22 27       	eor	r18, r18
 3b6:	b0 0d       	add	r27, r0
 3b8:	a1 1d       	adc	r26, r1
 3ba:	62 1f       	adc	r22, r18
 3bc:	73 9f       	mul	r23, r19
 3be:	b0 0d       	add	r27, r0
 3c0:	a1 1d       	adc	r26, r1
 3c2:	62 1f       	adc	r22, r18
 3c4:	83 9f       	mul	r24, r19
 3c6:	a0 0d       	add	r26, r0
 3c8:	61 1d       	adc	r22, r1
 3ca:	22 1f       	adc	r18, r18
 3cc:	74 9f       	mul	r23, r20
 3ce:	33 27       	eor	r19, r19
 3d0:	a0 0d       	add	r26, r0
 3d2:	61 1d       	adc	r22, r1
 3d4:	23 1f       	adc	r18, r19
 3d6:	84 9f       	mul	r24, r20
 3d8:	60 0d       	add	r22, r0
 3da:	21 1d       	adc	r18, r1
 3dc:	82 2f       	mov	r24, r18
 3de:	76 2f       	mov	r23, r22
 3e0:	6a 2f       	mov	r22, r26
 3e2:	11 24       	eor	r1, r1
 3e4:	9f 57       	subi	r25, 0x7F	; 127
 3e6:	50 40       	sbci	r21, 0x00	; 0
 3e8:	9a f0       	brmi	.+38     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3ea:	f1 f0       	breq	.+60     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3ec:	88 23       	and	r24, r24
 3ee:	4a f0       	brmi	.+18     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f0:	ee 0f       	add	r30, r30
 3f2:	ff 1f       	adc	r31, r31
 3f4:	bb 1f       	adc	r27, r27
 3f6:	66 1f       	adc	r22, r22
 3f8:	77 1f       	adc	r23, r23
 3fa:	88 1f       	adc	r24, r24
 3fc:	91 50       	subi	r25, 0x01	; 1
 3fe:	50 40       	sbci	r21, 0x00	; 0
 400:	a9 f7       	brne	.-22     	; 0x3ec <__mulsf3_pse+0x64>
 402:	9e 3f       	cpi	r25, 0xFE	; 254
 404:	51 05       	cpc	r21, r1
 406:	80 f0       	brcs	.+32     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 408:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_inf>
 40c:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__fp_szero>
 410:	5f 3f       	cpi	r21, 0xFF	; 255
 412:	e4 f3       	brlt	.-8      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 414:	98 3e       	cpi	r25, 0xE8	; 232
 416:	d4 f3       	brlt	.-12     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 418:	86 95       	lsr	r24
 41a:	77 95       	ror	r23
 41c:	67 95       	ror	r22
 41e:	b7 95       	ror	r27
 420:	f7 95       	ror	r31
 422:	e7 95       	ror	r30
 424:	9f 5f       	subi	r25, 0xFF	; 255
 426:	c1 f7       	brne	.-16     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 428:	fe 2b       	or	r31, r30
 42a:	88 0f       	add	r24, r24
 42c:	91 1d       	adc	r25, r1
 42e:	96 95       	lsr	r25
 430:	87 95       	ror	r24
 432:	97 f9       	bld	r25, 7
 434:	08 95       	ret

00000436 <__fp_inf>:
 436:	97 f9       	bld	r25, 7
 438:	9f 67       	ori	r25, 0x7F	; 127
 43a:	80 e8       	ldi	r24, 0x80	; 128
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	60 e0       	ldi	r22, 0x00	; 0
 440:	08 95       	ret

00000442 <__fp_nan>:
 442:	9f ef       	ldi	r25, 0xFF	; 255
 444:	80 ec       	ldi	r24, 0xC0	; 192
 446:	08 95       	ret

00000448 <__fp_pscA>:
 448:	00 24       	eor	r0, r0
 44a:	0a 94       	dec	r0
 44c:	16 16       	cp	r1, r22
 44e:	17 06       	cpc	r1, r23
 450:	18 06       	cpc	r1, r24
 452:	09 06       	cpc	r0, r25
 454:	08 95       	ret

00000456 <__fp_pscB>:
 456:	00 24       	eor	r0, r0
 458:	0a 94       	dec	r0
 45a:	12 16       	cp	r1, r18
 45c:	13 06       	cpc	r1, r19
 45e:	14 06       	cpc	r1, r20
 460:	05 06       	cpc	r0, r21
 462:	08 95       	ret

00000464 <__fp_round>:
 464:	09 2e       	mov	r0, r25
 466:	03 94       	inc	r0
 468:	00 0c       	add	r0, r0
 46a:	11 f4       	brne	.+4      	; 0x470 <__fp_round+0xc>
 46c:	88 23       	and	r24, r24
 46e:	52 f0       	brmi	.+20     	; 0x484 <__fp_round+0x20>
 470:	bb 0f       	add	r27, r27
 472:	40 f4       	brcc	.+16     	; 0x484 <__fp_round+0x20>
 474:	bf 2b       	or	r27, r31
 476:	11 f4       	brne	.+4      	; 0x47c <__fp_round+0x18>
 478:	60 ff       	sbrs	r22, 0
 47a:	04 c0       	rjmp	.+8      	; 0x484 <__fp_round+0x20>
 47c:	6f 5f       	subi	r22, 0xFF	; 255
 47e:	7f 4f       	sbci	r23, 0xFF	; 255
 480:	8f 4f       	sbci	r24, 0xFF	; 255
 482:	9f 4f       	sbci	r25, 0xFF	; 255
 484:	08 95       	ret

00000486 <__fp_split3>:
 486:	57 fd       	sbrc	r21, 7
 488:	90 58       	subi	r25, 0x80	; 128
 48a:	44 0f       	add	r20, r20
 48c:	55 1f       	adc	r21, r21
 48e:	59 f0       	breq	.+22     	; 0x4a6 <__fp_splitA+0x10>
 490:	5f 3f       	cpi	r21, 0xFF	; 255
 492:	71 f0       	breq	.+28     	; 0x4b0 <__fp_splitA+0x1a>
 494:	47 95       	ror	r20

00000496 <__fp_splitA>:
 496:	88 0f       	add	r24, r24
 498:	97 fb       	bst	r25, 7
 49a:	99 1f       	adc	r25, r25
 49c:	61 f0       	breq	.+24     	; 0x4b6 <__fp_splitA+0x20>
 49e:	9f 3f       	cpi	r25, 0xFF	; 255
 4a0:	79 f0       	breq	.+30     	; 0x4c0 <__fp_splitA+0x2a>
 4a2:	87 95       	ror	r24
 4a4:	08 95       	ret
 4a6:	12 16       	cp	r1, r18
 4a8:	13 06       	cpc	r1, r19
 4aa:	14 06       	cpc	r1, r20
 4ac:	55 1f       	adc	r21, r21
 4ae:	f2 cf       	rjmp	.-28     	; 0x494 <__fp_split3+0xe>
 4b0:	46 95       	lsr	r20
 4b2:	f1 df       	rcall	.-30     	; 0x496 <__fp_splitA>
 4b4:	08 c0       	rjmp	.+16     	; 0x4c6 <__fp_splitA+0x30>
 4b6:	16 16       	cp	r1, r22
 4b8:	17 06       	cpc	r1, r23
 4ba:	18 06       	cpc	r1, r24
 4bc:	99 1f       	adc	r25, r25
 4be:	f1 cf       	rjmp	.-30     	; 0x4a2 <__fp_splitA+0xc>
 4c0:	86 95       	lsr	r24
 4c2:	71 05       	cpc	r23, r1
 4c4:	61 05       	cpc	r22, r1
 4c6:	08 94       	sec
 4c8:	08 95       	ret

000004ca <__fp_zero>:
 4ca:	e8 94       	clt

000004cc <__fp_szero>:
 4cc:	bb 27       	eor	r27, r27
 4ce:	66 27       	eor	r22, r22
 4d0:	77 27       	eor	r23, r23
 4d2:	cb 01       	movw	r24, r22
 4d4:	97 f9       	bld	r25, 7
 4d6:	08 95       	ret

000004d8 <__divmodhi4>:
 4d8:	97 fb       	bst	r25, 7
 4da:	07 2e       	mov	r0, r23
 4dc:	16 f4       	brtc	.+4      	; 0x4e2 <__divmodhi4+0xa>
 4de:	00 94       	com	r0
 4e0:	07 d0       	rcall	.+14     	; 0x4f0 <__divmodhi4_neg1>
 4e2:	77 fd       	sbrc	r23, 7
 4e4:	09 d0       	rcall	.+18     	; 0x4f8 <__divmodhi4_neg2>
 4e6:	0e 94 80 02 	call	0x500	; 0x500 <__udivmodhi4>
 4ea:	07 fc       	sbrc	r0, 7
 4ec:	05 d0       	rcall	.+10     	; 0x4f8 <__divmodhi4_neg2>
 4ee:	3e f4       	brtc	.+14     	; 0x4fe <__divmodhi4_exit>

000004f0 <__divmodhi4_neg1>:
 4f0:	90 95       	com	r25
 4f2:	81 95       	neg	r24
 4f4:	9f 4f       	sbci	r25, 0xFF	; 255
 4f6:	08 95       	ret

000004f8 <__divmodhi4_neg2>:
 4f8:	70 95       	com	r23
 4fa:	61 95       	neg	r22
 4fc:	7f 4f       	sbci	r23, 0xFF	; 255

000004fe <__divmodhi4_exit>:
 4fe:	08 95       	ret

00000500 <__udivmodhi4>:
 500:	aa 1b       	sub	r26, r26
 502:	bb 1b       	sub	r27, r27
 504:	51 e1       	ldi	r21, 0x11	; 17
 506:	07 c0       	rjmp	.+14     	; 0x516 <__udivmodhi4_ep>

00000508 <__udivmodhi4_loop>:
 508:	aa 1f       	adc	r26, r26
 50a:	bb 1f       	adc	r27, r27
 50c:	a6 17       	cp	r26, r22
 50e:	b7 07       	cpc	r27, r23
 510:	10 f0       	brcs	.+4      	; 0x516 <__udivmodhi4_ep>
 512:	a6 1b       	sub	r26, r22
 514:	b7 0b       	sbc	r27, r23

00000516 <__udivmodhi4_ep>:
 516:	88 1f       	adc	r24, r24
 518:	99 1f       	adc	r25, r25
 51a:	5a 95       	dec	r21
 51c:	a9 f7       	brne	.-22     	; 0x508 <__udivmodhi4_loop>
 51e:	80 95       	com	r24
 520:	90 95       	com	r25
 522:	bc 01       	movw	r22, r24
 524:	cd 01       	movw	r24, r26
 526:	08 95       	ret

00000528 <_exit>:
 528:	f8 94       	cli

0000052a <__stop_program>:
 52a:	ff cf       	rjmp	.-2      	; 0x52a <__stop_program>
