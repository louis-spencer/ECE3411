
ADC_Lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00804000  0000136e  00001402  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000136e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005a  00804022  00804022  00001424  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001424  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001480  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000014c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000478e  00000000  00000000  00001560  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003216  00000000  00000000  00005cee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000859  00000000  00000000  00008f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00009760  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000229c  00000000  00000000  000098c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000582  00000000  00000000  0000bb64  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000c0e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f7 00 	jmp	0x1ee	; 0x1ee <__ctors_end>
       4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
       8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
       c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      24:	0c 94 96 01 	jmp	0x32c	; 0x32c <__vector_9>
      28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      68:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      6c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      70:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      74:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      78:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      7c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      80:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      84:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      88:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      90:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      94:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      98:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      9c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>

000000f4 <__trampolines_end>:
      f4:	00 40       	sbci	r16, 0x00	; 0
      f6:	7a 10       	cpse	r7, r10
      f8:	f3 5a       	subi	r31, 0xA3	; 163
      fa:	00 a0       	ldd	r0, Z+32	; 0x20
      fc:	72 4e       	sbci	r23, 0xE2	; 226
      fe:	18 09       	sbc	r17, r8
     100:	00 10       	cpse	r0, r0
     102:	a5 d4       	rcall	.+2378   	; 0xa4e <vfprintf+0xde>
     104:	e8 00       	.word	0x00e8	; ????
     106:	00 e8       	ldi	r16, 0x80	; 128
     108:	76 48       	sbci	r23, 0x86	; 134
     10a:	17 00       	.word	0x0017	; ????
     10c:	00 e4       	ldi	r16, 0x40	; 64
     10e:	0b 54       	subi	r16, 0x4B	; 75
     110:	02 00       	.word	0x0002	; ????
     112:	00 ca       	rjmp	.-3072   	; 0xfffff514 <__eeprom_end+0xff7ef514>
     114:	9a 3b       	cpi	r25, 0xBA	; 186
     116:	00 00       	nop
     118:	00 e1       	ldi	r16, 0x10	; 16
     11a:	f5 05       	cpc	r31, r5
     11c:	00 00       	nop
     11e:	80 96       	adiw	r24, 0x20	; 32
     120:	98 00       	.word	0x0098	; ????
     122:	00 00       	nop
     124:	40 42       	sbci	r20, 0x20	; 32
     126:	0f 00       	.word	0x000f	; ????
     128:	00 00       	nop
     12a:	a0 86       	std	Z+8, r10	; 0x08
     12c:	01 00       	.word	0x0001	; ????
     12e:	00 00       	nop
     130:	10 27       	eor	r17, r16
     132:	00 00       	nop
     134:	00 00       	nop
     136:	e8 03       	fmulsu	r22, r16
     138:	00 00       	nop
     13a:	00 00       	nop
     13c:	64 00       	.word	0x0064	; ????
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	0a 00       	.word	0x000a	; ????
     144:	00 00       	nop
     146:	00 00       	nop
     148:	01 00       	.word	0x0001	; ????
     14a:	00 00       	nop
     14c:	00 00       	nop
     14e:	2c 76       	andi	r18, 0x6C	; 108
     150:	d8 88       	ldd	r13, Y+16	; 0x10
     152:	dc 67       	ori	r29, 0x7C	; 124
     154:	4f 08       	sbc	r4, r15
     156:	23 df       	rcall	.-442    	; 0xffffff9e <__eeprom_end+0xff7eff9e>
     158:	c1 df       	rcall	.-126    	; 0xdc <__SREG__+0x9d>
     15a:	ae 59       	subi	r26, 0x9E	; 158
     15c:	e1 b1       	in	r30, 0x01	; 1
     15e:	b7 96       	adiw	r30, 0x27	; 39
     160:	e5 e3       	ldi	r30, 0x35	; 53
     162:	e4 53       	subi	r30, 0x34	; 52
     164:	c6 3a       	cpi	r28, 0xA6	; 166
     166:	e6 51       	subi	r30, 0x16	; 22
     168:	99 76       	andi	r25, 0x69	; 105
     16a:	96 e8       	ldi	r25, 0x86	; 134
     16c:	e6 c2       	rjmp	.+1484   	; 0x73a <__mulsf3_pse+0x4a>
     16e:	84 26       	eor	r8, r20
     170:	eb 89       	ldd	r30, Y+19	; 0x13
     172:	8c 9b       	sbis	0x11, 4	; 17
     174:	62 ed       	ldi	r22, 0xD2	; 210
     176:	40 7c       	andi	r20, 0xC0	; 192
     178:	6f fc       	.word	0xfc6f	; ????
     17a:	ef bc       	out	0x2f, r14	; 47
     17c:	9c 9f       	mul	r25, r28
     17e:	40 f2       	brcs	.-112    	; 0x110 <__trampolines_end+0x1c>
     180:	ba a5       	ldd	r27, Y+42	; 0x2a
     182:	6f a5       	ldd	r22, Y+47	; 0x2f
     184:	f4 90       	lpm	r15, Z
     186:	05 5a       	subi	r16, 0xA5	; 165
     188:	2a f7       	brpl	.-54     	; 0x154 <__trampolines_end+0x60>
     18a:	5c 93       	st	X, r21
     18c:	6b 6c       	ori	r22, 0xCB	; 203
     18e:	f9 67       	ori	r31, 0x79	; 121
     190:	6d c1       	rjmp	.+730    	; 0x46c <uart_putchar+0x3c>
     192:	1b fc       	.word	0xfc1b	; ????
     194:	e0 e4       	ldi	r30, 0x40	; 64
     196:	0d 47       	sbci	r16, 0x7D	; 125
     198:	fe f5       	brtc	.+126    	; 0x218 <__do_clear_bss+0x4>
     19a:	20 e6       	ldi	r18, 0x60	; 96
     19c:	b5 00       	.word	0x00b5	; ????
     19e:	d0 ed       	ldi	r29, 0xD0	; 208
     1a0:	90 2e       	mov	r9, r16
     1a2:	03 00       	.word	0x0003	; ????
     1a4:	94 35       	cpi	r25, 0x54	; 84
     1a6:	77 05       	cpc	r23, r7
     1a8:	00 80       	ld	r0, Z
     1aa:	84 1e       	adc	r8, r20
     1ac:	08 00       	.word	0x0008	; ????
     1ae:	00 20       	and	r0, r0
     1b0:	4e 0a       	sbc	r4, r30
     1b2:	00 00       	nop
     1b4:	00 c8       	rjmp	.-4096   	; 0xfffff1b6 <__eeprom_end+0xff7ef1b6>
     1b6:	0c 33       	cpi	r16, 0x3C	; 60
     1b8:	33 33       	cpi	r19, 0x33	; 51
     1ba:	33 0f       	add	r19, r19
     1bc:	98 6e       	ori	r25, 0xE8	; 232
     1be:	12 83       	std	Z+2, r17	; 0x02
     1c0:	11 41       	sbci	r17, 0x11	; 17
     1c2:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1c4:	21 14       	cp	r2, r1
     1c6:	89 3b       	cpi	r24, 0xB9	; 185
     1c8:	e6 55       	subi	r30, 0x56	; 86
     1ca:	16 cf       	rjmp	.-468    	; 0xfffffff8 <__eeprom_end+0xff7efff8>
     1cc:	fe e6       	ldi	r31, 0x6E	; 110
     1ce:	db 18       	sub	r13, r11
     1d0:	d1 84       	ldd	r13, Z+9	; 0x09
     1d2:	4b 38       	cpi	r20, 0x8B	; 139
     1d4:	1b f7       	brvc	.-58     	; 0x19c <__trampolines_end+0xa8>
     1d6:	7c 1d       	adc	r23, r12
     1d8:	90 1d       	adc	r25, r0
     1da:	a4 bb       	out	0x14, r26	; 20
     1dc:	e4 24       	eor	r14, r4
     1de:	20 32       	cpi	r18, 0x20	; 32
     1e0:	84 72       	andi	r24, 0x24	; 36
     1e2:	5e 22       	and	r5, r30
     1e4:	81 00       	.word	0x0081	; ????
     1e6:	c9 f1       	breq	.+114    	; 0x25a <init_TCA0+0xe>
     1e8:	24 ec       	ldi	r18, 0xC4	; 196
     1ea:	a1 e5       	ldi	r26, 0x51	; 81
     1ec:	3d 27       	eor	r19, r29

000001ee <__ctors_end>:
     1ee:	11 24       	eor	r1, r1
     1f0:	1f be       	out	0x3f, r1	; 63
     1f2:	cf ef       	ldi	r28, 0xFF	; 255
     1f4:	cd bf       	out	0x3d, r28	; 61
     1f6:	df e7       	ldi	r29, 0x7F	; 127
     1f8:	de bf       	out	0x3e, r29	; 62

000001fa <__do_copy_data>:
     1fa:	10 e4       	ldi	r17, 0x40	; 64
     1fc:	a0 e0       	ldi	r26, 0x00	; 0
     1fe:	b0 e4       	ldi	r27, 0x40	; 64
     200:	ee e6       	ldi	r30, 0x6E	; 110
     202:	f3 e1       	ldi	r31, 0x13	; 19
     204:	00 e0       	ldi	r16, 0x00	; 0
     206:	0b bf       	out	0x3b, r16	; 59
     208:	02 c0       	rjmp	.+4      	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
     20a:	07 90       	elpm	r0, Z+
     20c:	0d 92       	st	X+, r0
     20e:	a2 32       	cpi	r26, 0x22	; 34
     210:	b1 07       	cpc	r27, r17
     212:	d9 f7       	brne	.-10     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>

00000214 <__do_clear_bss>:
     214:	20 e4       	ldi	r18, 0x40	; 64
     216:	a2 e2       	ldi	r26, 0x22	; 34
     218:	b0 e4       	ldi	r27, 0x40	; 64
     21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
     21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
     21e:	ac 37       	cpi	r26, 0x7C	; 124
     220:	b2 07       	cpc	r27, r18
     222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
     224:	0e 94 33 01 	call	0x266	; 0x266 <main>
     228:	0c 94 b5 09 	jmp	0x136a	; 0x136a <_exit>

0000022c <__bad_interrupt>:
     22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <init_clock>:

#define F_CPU 16000000UL

void init_clock(void) {
	// initialize external 16MHz clock
	CPU_CCP = CCP_IOREG_gc;
     230:	88 ed       	ldi	r24, 0xD8	; 216
     232:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.XOSCHFCTRLA = CLKCTRL_FRQRANGE_16M_gc | CLKCTRL_ENABLE_bm;
     234:	e0 e6       	ldi	r30, 0x60	; 96
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	95 e0       	ldi	r25, 0x05	; 5
     23a:	90 a3       	std	Z+32, r25	; 0x20
	CPU_CCP = CCP_IOREG_gc;
     23c:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKCTRLA = CLKCTRL_CLKSEL_EXTCLK_gc;
     23e:	83 e0       	ldi	r24, 0x03	; 3
     240:	80 83       	st	Z, r24
	// wait for clock to startup
	while(!(CLKCTRL.MCLKSTATUS & CLKCTRL_EXTS_bm));
     242:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     246:	84 ff       	sbrs	r24, 4
     248:	fc cf       	rjmp	.-8      	; 0x242 <init_clock+0x12>
}
     24a:	08 95       	ret

0000024c <init_TCA0>:

void init_TCA0(void) {
	// initialize timer A0 with period of 1ms
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_NORMAL_gc;
     24c:	e0 e0       	ldi	r30, 0x00	; 0
     24e:	fa e0       	ldi	r31, 0x0A	; 10
     250:	11 82       	std	Z+1, r1	; 0x01
	TCA0.SINGLE.PER = 249;
     252:	89 ef       	ldi	r24, 0xF9	; 249
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	86 a3       	std	Z+38, r24	; 0x26
     258:	97 a3       	std	Z+39, r25	; 0x27
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	82 87       	std	Z+10, r24	; 0x0a
	
	TCA0.SINGLE.CTRLA |= (TCA_SINGLE_CLKSEL_DIV64_gc | TCA_SINGLE_ENABLE_bm);
     25e:	80 81       	ld	r24, Z
     260:	8b 60       	ori	r24, 0x0B	; 11
     262:	80 83       	st	Z, r24
     264:	08 95       	ret

00000266 <main>:
}

volatile int tc = 0;

int main(void)
{
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	cd b7       	in	r28, 0x3d	; 61
     26c:	de b7       	in	r29, 0x3e	; 62
     26e:	26 97       	sbiw	r28, 0x06	; 6
     270:	cd bf       	out	0x3d, r28	; 61
     272:	de bf       	out	0x3e, r29	; 62
	init_clock();
     274:	0e 94 18 01 	call	0x230	; 0x230 <init_clock>
	init_TCA0();
     278:	0e 94 26 01 	call	0x24c	; 0x24c <init_TCA0>
	uart_init(3, 9600, NULL);
     27c:	20 e0       	ldi	r18, 0x00	; 0
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	40 e8       	ldi	r20, 0x80	; 128
     282:	55 e2       	ldi	r21, 0x25	; 37
     284:	60 e0       	ldi	r22, 0x00	; 0
     286:	70 e0       	ldi	r23, 0x00	; 0
     288:	83 e0       	ldi	r24, 0x03	; 3
     28a:	0e 94 04 03 	call	0x608	; 0x608 <uart_init>
	
	// set input voltage at AIN8
	ADC0.MUXPOS = ADC_MUXPOS_AIN8_gc;
     28e:	e0 e0       	ldi	r30, 0x00	; 0
     290:	f6 e0       	ldi	r31, 0x06	; 6
     292:	88 e0       	ldi	r24, 0x08	; 8
     294:	80 87       	std	Z+8, r24	; 0x08
	// set ADC clock to 1MHz
	ADC0.CTRLC = ADC_PRESC_DIV16_gc;
     296:	84 e0       	ldi	r24, 0x04	; 4
     298:	82 83       	std	Z+2, r24	; 0x02
	// Delay 16 ADC clock cycles
	ADC0.CTRLD = ADC_INITDLY_DLY16_gc;
     29a:	80 e2       	ldi	r24, 0x20	; 32
     29c:	83 83       	std	Z+3, r24	; 0x03
	// use VDD as reference
	VREF.ADC0REF = VREF_REFSEL_VDD_gc;
     29e:	85 e0       	ldi	r24, 0x05	; 5
     2a0:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	// enable ADC circuitry
	ADC0.CTRLA = ADC_ENABLE_bm;
     2a4:	91 e0       	ldi	r25, 0x01	; 1
     2a6:	90 83       	st	Z, r25
	ADC0.CTRLA &= ~ADC_LEFTADJ_bm;
     2a8:	80 81       	ld	r24, Z
     2aa:	8f 7e       	andi	r24, 0xEF	; 239
     2ac:	80 83       	st	Z, r24
	// start first AD conversion
	ADC0.COMMAND = ADC_STCONV_bm;
     2ae:	92 87       	std	Z+10, r25	; 0x0a
	loop_until_bit_is_clear(ADC0.COMMAND, ADC_STCONV_bp);
     2b0:	80 91 0a 06 	lds	r24, 0x060A	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
     2b4:	80 fd       	sbrc	r24, 0
     2b6:	fc cf       	rjmp	.-8      	; 0x2b0 <main+0x4a>
	
    sei();
     2b8:	78 94       	sei
	while (1) {
		if (tc >= 1000) {
     2ba:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <__data_end>
     2be:	90 91 23 40 	lds	r25, 0x4023	; 0x804023 <__data_end+0x1>
     2c2:	88 3e       	cpi	r24, 0xE8	; 232
     2c4:	93 40       	sbci	r25, 0x03	; 3
     2c6:	cc f3       	brlt	.-14     	; 0x2ba <main+0x54>
			tc = 0;
     2c8:	10 92 22 40 	sts	0x4022, r1	; 0x804022 <__data_end>
     2cc:	10 92 23 40 	sts	0x4023, r1	; 0x804023 <__data_end+0x1>
			
			float voltage = (float)(ADC0.RES)/4096 * 3.3;
     2d0:	00 e0       	ldi	r16, 0x00	; 0
     2d2:	16 e0       	ldi	r17, 0x06	; 6
     2d4:	f8 01       	movw	r30, r16
     2d6:	60 89       	ldd	r22, Z+16	; 0x10
     2d8:	71 89       	ldd	r23, Z+17	; 0x11
     2da:	80 e0       	ldi	r24, 0x00	; 0
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 25 03 	call	0x64a	; 0x64a <__floatunsisf>
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	40 e8       	ldi	r20, 0x80	; 128
     2e8:	59 e3       	ldi	r21, 0x39	; 57
     2ea:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__mulsf3>
     2ee:	23 e3       	ldi	r18, 0x33	; 51
     2f0:	33 e3       	ldi	r19, 0x33	; 51
     2f2:	43 e5       	ldi	r20, 0x53	; 83
     2f4:	50 e4       	ldi	r21, 0x40	; 64
     2f6:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__mulsf3>
			ADC0.COMMAND = ADC_STCONV_bm;
     2fa:	21 e0       	ldi	r18, 0x01	; 1
     2fc:	f8 01       	movw	r30, r16
     2fe:	22 87       	std	Z+10, r18	; 0x0a
			
			char strbuf[6];
			dtostrf(voltage, 4, 2, strbuf);
     300:	9e 01       	movw	r18, r28
     302:	2f 5f       	subi	r18, 0xFF	; 255
     304:	3f 4f       	sbci	r19, 0xFF	; 255
     306:	79 01       	movw	r14, r18
     308:	89 01       	movw	r16, r18
     30a:	22 e0       	ldi	r18, 0x02	; 2
     30c:	44 e0       	ldi	r20, 0x04	; 4
     30e:	0e 94 42 04 	call	0x884	; 0x884 <dtostrf>
			printf("Input: %sV\n", strbuf);
     312:	ff 92       	push	r15
     314:	ef 92       	push	r14
     316:	8e e0       	ldi	r24, 0x0E	; 14
     318:	90 e4       	ldi	r25, 0x40	; 64
     31a:	9f 93       	push	r25
     31c:	8f 93       	push	r24
     31e:	0e 94 a4 04 	call	0x948	; 0x948 <printf>
     322:	0f 90       	pop	r0
     324:	0f 90       	pop	r0
     326:	0f 90       	pop	r0
     328:	0f 90       	pop	r0
     32a:	c7 cf       	rjmp	.-114    	; 0x2ba <main+0x54>

0000032c <__vector_9>:
		}
		// printf("%d\t", tc);
	}
}

ISR(TCA0_OVF_vect) {
     32c:	1f 92       	push	r1
     32e:	0f 92       	push	r0
     330:	0f b6       	in	r0, 0x3f	; 63
     332:	0f 92       	push	r0
     334:	11 24       	eor	r1, r1
     336:	0b b6       	in	r0, 0x3b	; 59
     338:	0f 92       	push	r0
     33a:	2f 93       	push	r18
     33c:	8f 93       	push	r24
     33e:	9f 93       	push	r25
     340:	ef 93       	push	r30
     342:	ff 93       	push	r31
	if (tc < INT_MAX) tc++;
     344:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <__data_end>
     348:	90 91 23 40 	lds	r25, 0x4023	; 0x804023 <__data_end+0x1>
     34c:	8f 3f       	cpi	r24, 0xFF	; 255
     34e:	9f 47       	sbci	r25, 0x7F	; 127
     350:	49 f0       	breq	.+18     	; 0x364 <__vector_9+0x38>
     352:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <__data_end>
     356:	90 91 23 40 	lds	r25, 0x4023	; 0x804023 <__data_end+0x1>
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <__data_end>
     360:	90 93 23 40 	sts	0x4023, r25	; 0x804023 <__data_end+0x1>
	TCA0.SINGLE.INTFLAGS |= TCA_SINGLE_OVF_bm;
     364:	e0 e0       	ldi	r30, 0x00	; 0
     366:	fa e0       	ldi	r31, 0x0A	; 10
     368:	83 85       	ldd	r24, Z+11	; 0x0b
     36a:	81 60       	ori	r24, 0x01	; 1
     36c:	83 87       	std	Z+11, r24	; 0x0b
}
     36e:	ff 91       	pop	r31
     370:	ef 91       	pop	r30
     372:	9f 91       	pop	r25
     374:	8f 91       	pop	r24
     376:	2f 91       	pop	r18
     378:	0f 90       	pop	r0
     37a:	0b be       	out	0x3b, r0	; 59
     37c:	0f 90       	pop	r0
     37e:	0f be       	out	0x3f, r0	; 63
     380:	0f 90       	pop	r0
     382:	1f 90       	pop	r1
     384:	18 95       	reti

00000386 <usart_init>:
#include "uart.h"

#define SMPL 16

void* usart_init(uint8_t usartnum, uint32_t baud_rate)
{
     386:	cf 93       	push	r28
     388:	df 93       	push	r29
    USART_t* usart;

    if (usartnum == 0) {
     38a:	81 11       	cpse	r24, r1
     38c:	06 c0       	rjmp	.+12     	; 0x39a <usart_init+0x14>
        usart = &USART0;
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__TEXT_REGION_LENGTH__+0x7e0401>
void* usart_init(uint8_t usartnum, uint32_t baud_rate)
{
    USART_t* usart;

    if (usartnum == 0) {
        usart = &USART0;
     394:	c0 e0       	ldi	r28, 0x00	; 0
     396:	d8 e0       	ldi	r29, 0x08	; 8
     398:	19 c0       	rjmp	.+50     	; 0x3cc <usart_init+0x46>
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
    }
    else if (usartnum == 1) {
     39a:	81 30       	cpi	r24, 0x01	; 1
     39c:	29 f4       	brne	.+10     	; 0x3a8 <usart_init+0x22>
        usart = &USART1;
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
     39e:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <__TEXT_REGION_LENGTH__+0x7e0441>
        usart = &USART0;
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
    }
    else if (usartnum == 1) {
        usart = &USART1;
     3a2:	c0 e2       	ldi	r28, 0x20	; 32
     3a4:	d8 e0       	ldi	r29, 0x08	; 8
     3a6:	12 c0       	rjmp	.+36     	; 0x3cc <usart_init+0x46>
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
    }
    else if (usartnum == 2) {
     3a8:	82 30       	cpi	r24, 0x02	; 2
     3aa:	31 f4       	brne	.+12     	; 0x3b8 <usart_init+0x32>
        usart = &USART2;
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
     3ac:	81 e0       	ldi	r24, 0x01	; 1
     3ae:	80 93 a1 04 	sts	0x04A1, r24	; 0x8004a1 <__TEXT_REGION_LENGTH__+0x7e04a1>
        usart = &USART1;
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
    }
    else if (usartnum == 2) {
        usart = &USART2;
     3b2:	c0 e4       	ldi	r28, 0x40	; 64
     3b4:	d8 e0       	ldi	r29, 0x08	; 8
     3b6:	0a c0       	rjmp	.+20     	; 0x3cc <usart_init+0x46>
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
    }
    else if (usartnum == 3) {
     3b8:	83 30       	cpi	r24, 0x03	; 3
     3ba:	31 f4       	brne	.+12     	; 0x3c8 <usart_init+0x42>
        usart = &USART3;
        // enable USART3 TX pin
        PORTB.DIRSET = PIN0_bm;
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <__TEXT_REGION_LENGTH__+0x7e0421>
        usart = &USART2;
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
    }
    else if (usartnum == 3) {
        usart = &USART3;
     3c2:	c0 e6       	ldi	r28, 0x60	; 96
     3c4:	d8 e0       	ldi	r29, 0x08	; 8
     3c6:	02 c0       	rjmp	.+4      	; 0x3cc <usart_init+0x46>
        // enable USART3 TX pin
        PORTB.DIRSET = PIN0_bm;
    } 
    else {
        usart = NULL;
     3c8:	c0 e0       	ldi	r28, 0x00	; 0
     3ca:	d0 e0       	ldi	r29, 0x00	; 0
    }

    // set BAUD and CTRLB registers
	// make sure to cast the BAUD to uint16_t before assigning
	usart->BAUD = (uint16_t)( (64 * F_CPU) / (SMPL * baud_rate) );
     3cc:	db 01       	movw	r26, r22
     3ce:	ca 01       	movw	r24, r20
     3d0:	88 0f       	add	r24, r24
     3d2:	99 1f       	adc	r25, r25
     3d4:	aa 1f       	adc	r26, r26
     3d6:	bb 1f       	adc	r27, r27
     3d8:	88 0f       	add	r24, r24
     3da:	99 1f       	adc	r25, r25
     3dc:	aa 1f       	adc	r26, r26
     3de:	bb 1f       	adc	r27, r27
     3e0:	9c 01       	movw	r18, r24
     3e2:	ad 01       	movw	r20, r26
     3e4:	22 0f       	add	r18, r18
     3e6:	33 1f       	adc	r19, r19
     3e8:	44 1f       	adc	r20, r20
     3ea:	55 1f       	adc	r21, r21
     3ec:	22 0f       	add	r18, r18
     3ee:	33 1f       	adc	r19, r19
     3f0:	44 1f       	adc	r20, r20
     3f2:	55 1f       	adc	r21, r21
     3f4:	60 e0       	ldi	r22, 0x00	; 0
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	89 e0       	ldi	r24, 0x09	; 9
     3fa:	9d e3       	ldi	r25, 0x3D	; 61
     3fc:	0e 94 20 04 	call	0x840	; 0x840 <__udivmodsi4>
     400:	28 87       	std	Y+8, r18	; 0x08
     402:	39 87       	std	Y+9, r19	; 0x09
	usart->CTRLB |= USART_RXEN_bm | USART_TXEN_bm;
     404:	8e 81       	ldd	r24, Y+6	; 0x06
     406:	80 6c       	ori	r24, 0xC0	; 192
     408:	8e 83       	std	Y+6, r24	; 0x06
    return usart;
}
     40a:	ce 01       	movw	r24, r28
     40c:	df 91       	pop	r29
     40e:	cf 91       	pop	r28
     410:	08 95       	ret

00000412 <usart_transmit_data>:

void usart_transmit_data(void* ptr, char c)
{
    USART_t* usart = (USART_t*)ptr;
    // TODO send data
	usart->TXDATAL = c;
     412:	fc 01       	movw	r30, r24
     414:	62 83       	std	Z+2, r22	; 0x02
     416:	08 95       	ret

00000418 <usart_wait_until_transmit_ready>:
}

void usart_wait_until_transmit_ready(void *ptr)
{
     418:	fc 01       	movw	r30, r24
    USART_t* usart = (USART_t*)ptr;
    // TODO wait until UART is ready to transmit
	while ( !(usart->STATUS & USART_DREIF_bm) );
     41a:	94 81       	ldd	r25, Z+4	; 0x04
     41c:	95 ff       	sbrs	r25, 5
     41e:	fd cf       	rjmp	.-6      	; 0x41a <usart_wait_until_transmit_ready+0x2>
}
     420:	08 95       	ret

00000422 <usart_receive_data>:

int usart_receive_data(void* ptr)
{
     422:	fc 01       	movw	r30, r24
    USART_t* usart = (USART_t*)ptr;
    // TODO wait until data has arrived and then return the data
	while ( !(usart->STATUS & USART_RXCIF_bm) );
     424:	94 81       	ldd	r25, Z+4	; 0x04
     426:	99 23       	and	r25, r25
     428:	ec f7       	brge	.-6      	; 0x424 <usart_receive_data+0x2>
	return (usart->RXDATAL);
     42a:	80 81       	ld	r24, Z
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	08 95       	ret

00000430 <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	c8 2f       	mov	r28, r24
     438:	8b 01       	movw	r16, r22
	if (c == '\a') {
     43a:	87 30       	cpi	r24, 0x07	; 7
     43c:	69 f4       	brne	.+26     	; 0x458 <uart_putchar+0x28>
		fputs("*ring*\n", stderr);
     43e:	20 91 7a 40 	lds	r18, 0x407A	; 0x80407a <__iob+0x4>
     442:	30 91 7b 40 	lds	r19, 0x407B	; 0x80407b <__iob+0x5>
     446:	47 e0       	ldi	r20, 0x07	; 7
     448:	50 e0       	ldi	r21, 0x00	; 0
     44a:	61 e0       	ldi	r22, 0x01	; 1
     44c:	70 e0       	ldi	r23, 0x00	; 0
     44e:	8a e1       	ldi	r24, 0x1A	; 26
     450:	90 e4       	ldi	r25, 0x40	; 64
     452:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fwrite>
		return 0;
     456:	0f c0       	rjmp	.+30     	; 0x476 <uart_putchar+0x46>
	}

	if (c == '\n') {
     458:	8a 30       	cpi	r24, 0x0A	; 10
     45a:	19 f4       	brne	.+6      	; 0x462 <uart_putchar+0x32>
		uart_putchar('\r', stream);
     45c:	8d e0       	ldi	r24, 0x0D	; 13
     45e:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
	}

	void* usart = fdev_get_udata(stream);
     462:	f8 01       	movw	r30, r16
     464:	04 85       	ldd	r16, Z+12	; 0x0c
     466:	15 85       	ldd	r17, Z+13	; 0x0d
	usart_wait_until_transmit_ready(usart);
     468:	c8 01       	movw	r24, r16
     46a:	0e 94 0c 02 	call	0x418	; 0x418 <usart_wait_until_transmit_ready>
	usart_transmit_data(usart, c);
     46e:	6c 2f       	mov	r22, r28
     470:	c8 01       	movw	r24, r16
     472:	0e 94 09 02 	call	0x412	; 0x412 <usart_transmit_data>

	return 0;
}
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	08 95       	ret

00000482 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     482:	ef 92       	push	r14
     484:	ff 92       	push	r15
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
	uint8_t c;
	char *cp, *cp2;
	static char b[RX_BUFSIZE];
	static char *rxp;

	if (rxp == 0) {
     48e:	20 91 74 40 	lds	r18, 0x4074	; 0x804074 <rxp.1995>
     492:	30 91 75 40 	lds	r19, 0x4075	; 0x804075 <rxp.1995+0x1>
     496:	23 2b       	or	r18, r19
     498:	09 f0       	breq	.+2      	; 0x49c <uart_getchar+0x1a>
     49a:	9a c0       	rjmp	.+308    	; 0x5d0 <uart_getchar+0x14e>
     49c:	8c 01       	movw	r16, r24
     49e:	c4 e2       	ldi	r28, 0x24	; 36
     4a0:	d0 e4       	ldi	r29, 0x40	; 64
		for (cp = b;;) {
			void* usart = fdev_get_udata(stream);
			c = usart_receive_data(usart);
     4a2:	f8 01       	movw	r30, r16
     4a4:	84 85       	ldd	r24, Z+12	; 0x0c
     4a6:	95 85       	ldd	r25, Z+13	; 0x0d
     4a8:	0e 94 11 02 	call	0x422	; 0x422 <usart_receive_data>

			/* behaviour similar to Unix stty ICRNL */
			if (c == '\r')
     4ac:	8d 30       	cpi	r24, 0x0D	; 13
     4ae:	09 f4       	brne	.+2      	; 0x4b2 <uart_getchar+0x30>
				c = '\n';
     4b0:	8a e0       	ldi	r24, 0x0A	; 10
			if (c == '\n') {
     4b2:	8a 30       	cpi	r24, 0x0A	; 10
     4b4:	59 f4       	brne	.+22     	; 0x4cc <uart_getchar+0x4a>
			    *cp = c;
     4b6:	88 83       	st	Y, r24
				uart_putchar(c, stream);
     4b8:	b8 01       	movw	r22, r16
     4ba:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
			    rxp = b;
     4be:	84 e2       	ldi	r24, 0x24	; 36
     4c0:	90 e4       	ldi	r25, 0x40	; 64
     4c2:	80 93 74 40 	sts	0x4074, r24	; 0x804074 <rxp.1995>
     4c6:	90 93 75 40 	sts	0x4075, r25	; 0x804075 <rxp.1995+0x1>
				break;
     4ca:	82 c0       	rjmp	.+260    	; 0x5d0 <uart_getchar+0x14e>
			}
			else if (c == '\t')
     4cc:	89 30       	cpi	r24, 0x09	; 9
     4ce:	09 f4       	brne	.+2      	; 0x4d2 <uart_getchar+0x50>
				c = ' ';
     4d0:	80 e2       	ldi	r24, 0x20	; 32

			if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     4d2:	90 ee       	ldi	r25, 0xE0	; 224
     4d4:	98 0f       	add	r25, r24
     4d6:	9f 35       	cpi	r25, 0x5F	; 95
     4d8:	10 f0       	brcs	.+4      	; 0x4de <uart_getchar+0x5c>
     4da:	80 3a       	cpi	r24, 0xA0	; 160
     4dc:	98 f0       	brcs	.+38     	; 0x504 <uart_getchar+0x82>
				c >= (uint8_t)'\xa0') {
			    if (cp == b + RX_BUFSIZE - 1)
     4de:	f0 e4       	ldi	r31, 0x40	; 64
     4e0:	c3 37       	cpi	r28, 0x73	; 115
     4e2:	df 07       	cpc	r29, r31
     4e4:	29 f4       	brne	.+10     	; 0x4f0 <uart_getchar+0x6e>
					uart_putchar('\a', stream);
     4e6:	b8 01       	movw	r22, r16
     4e8:	87 e0       	ldi	r24, 0x07	; 7
     4ea:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
     4ee:	d9 cf       	rjmp	.-78     	; 0x4a2 <uart_getchar+0x20>
				else {
					*cp++ = c;
     4f0:	7e 01       	movw	r14, r28
     4f2:	9f ef       	ldi	r25, 0xFF	; 255
     4f4:	e9 1a       	sub	r14, r25
     4f6:	f9 0a       	sbc	r15, r25
     4f8:	88 83       	st	Y, r24
					uart_putchar(c, stream);
     4fa:	b8 01       	movw	r22, r16
     4fc:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
			if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
				c >= (uint8_t)'\xa0') {
			    if (cp == b + RX_BUFSIZE - 1)
					uart_putchar('\a', stream);
				else {
					*cp++ = c;
     500:	e7 01       	movw	r28, r14
					uart_putchar(c, stream);
				}
			    continue;
     502:	cf cf       	rjmp	.-98     	; 0x4a2 <uart_getchar+0x20>
			}

			switch (c) {
     504:	82 31       	cpi	r24, 0x12	; 18
     506:	19 f1       	breq	.+70     	; 0x54e <uart_getchar+0xcc>
     508:	30 f4       	brcc	.+12     	; 0x516 <uart_getchar+0x94>
     50a:	83 30       	cpi	r24, 0x03	; 3
     50c:	09 f4       	brne	.+2      	; 0x510 <uart_getchar+0x8e>
     50e:	73 c0       	rjmp	.+230    	; 0x5f6 <uart_getchar+0x174>
     510:	88 30       	cpi	r24, 0x08	; 8
     512:	49 f0       	breq	.+18     	; 0x526 <uart_getchar+0xa4>
     514:	c6 cf       	rjmp	.-116    	; 0x4a2 <uart_getchar+0x20>
     516:	87 31       	cpi	r24, 0x17	; 23
     518:	09 f4       	brne	.+2      	; 0x51c <uart_getchar+0x9a>
     51a:	4e c0       	rjmp	.+156    	; 0x5b8 <uart_getchar+0x136>
     51c:	8f 37       	cpi	r24, 0x7F	; 127
     51e:	19 f0       	breq	.+6      	; 0x526 <uart_getchar+0xa4>
     520:	85 31       	cpi	r24, 0x15	; 21
     522:	b9 f1       	breq	.+110    	; 0x592 <uart_getchar+0x110>
     524:	be cf       	rjmp	.-132    	; 0x4a2 <uart_getchar+0x20>
				case 'c' & 0x1f:
				    return -1;

				case '\b':
				case '\x7f':
				    if (cp > b) {
     526:	e0 e4       	ldi	r30, 0x40	; 64
     528:	c4 32       	cpi	r28, 0x24	; 36
     52a:	de 07       	cpc	r29, r30
     52c:	09 f0       	breq	.+2      	; 0x530 <uart_getchar+0xae>
     52e:	08 f4       	brcc	.+2      	; 0x532 <uart_getchar+0xb0>
     530:	b8 cf       	rjmp	.-144    	; 0x4a2 <uart_getchar+0x20>
						uart_putchar('\b', stream);
     532:	b8 01       	movw	r22, r16
     534:	88 e0       	ldi	r24, 0x08	; 8
     536:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						uart_putchar(' ', stream);
     53a:	b8 01       	movw	r22, r16
     53c:	80 e2       	ldi	r24, 0x20	; 32
     53e:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						uart_putchar('\b', stream);
     542:	b8 01       	movw	r22, r16
     544:	88 e0       	ldi	r24, 0x08	; 8
     546:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						cp--;
     54a:	21 97       	sbiw	r28, 0x01	; 1
     54c:	aa cf       	rjmp	.-172    	; 0x4a2 <uart_getchar+0x20>
					}
					break;

				case 'r' & 0x1f:
					uart_putchar('\r', stream);
     54e:	b8 01       	movw	r22, r16
     550:	8d e0       	ldi	r24, 0x0D	; 13
     552:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
					for (cp2 = b; cp2 < cp; cp2++)
     556:	0f 2e       	mov	r0, r31
     558:	f4 e2       	ldi	r31, 0x24	; 36
     55a:	ef 2e       	mov	r14, r31
     55c:	f0 e4       	ldi	r31, 0x40	; 64
     55e:	ff 2e       	mov	r15, r31
     560:	f0 2d       	mov	r31, r0
     562:	06 c0       	rjmp	.+12     	; 0x570 <uart_getchar+0xee>
						uart_putchar(*cp2, stream);
     564:	b8 01       	movw	r22, r16
     566:	f7 01       	movw	r30, r14
     568:	81 91       	ld	r24, Z+
     56a:	7f 01       	movw	r14, r30
     56c:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
					}
					break;

				case 'r' & 0x1f:
					uart_putchar('\r', stream);
					for (cp2 = b; cp2 < cp; cp2++)
     570:	ec 16       	cp	r14, r28
     572:	fd 06       	cpc	r15, r29
     574:	b8 f3       	brcs	.-18     	; 0x564 <uart_getchar+0xe2>
     576:	95 cf       	rjmp	.-214    	; 0x4a2 <uart_getchar+0x20>
						uart_putchar(*cp2, stream);
					break;

				case 'u' & 0x1f:
					while (cp > b) {
						uart_putchar('\b', stream);
     578:	b8 01       	movw	r22, r16
     57a:	88 e0       	ldi	r24, 0x08	; 8
     57c:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						uart_putchar(' ', stream);
     580:	b8 01       	movw	r22, r16
     582:	80 e2       	ldi	r24, 0x20	; 32
     584:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						uart_putchar('\b', stream);
     588:	b8 01       	movw	r22, r16
     58a:	88 e0       	ldi	r24, 0x08	; 8
     58c:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						cp--;
     590:	21 97       	sbiw	r28, 0x01	; 1
					for (cp2 = b; cp2 < cp; cp2++)
						uart_putchar(*cp2, stream);
					break;

				case 'u' & 0x1f:
					while (cp > b) {
     592:	f0 e4       	ldi	r31, 0x40	; 64
     594:	c4 32       	cpi	r28, 0x24	; 36
     596:	df 07       	cpc	r29, r31
     598:	09 f0       	breq	.+2      	; 0x59c <uart_getchar+0x11a>
     59a:	70 f7       	brcc	.-36     	; 0x578 <uart_getchar+0xf6>
     59c:	82 cf       	rjmp	.-252    	; 0x4a2 <uart_getchar+0x20>
					}
					break;

				case 'w' & 0x1f:
					while (cp > b && cp[-1] != ' ') {
						uart_putchar('\b', stream);
     59e:	b8 01       	movw	r22, r16
     5a0:	88 e0       	ldi	r24, 0x08	; 8
     5a2:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						uart_putchar(' ', stream);
     5a6:	b8 01       	movw	r22, r16
     5a8:	80 e2       	ldi	r24, 0x20	; 32
     5aa:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						uart_putchar('\b', stream);
     5ae:	b8 01       	movw	r22, r16
     5b0:	88 e0       	ldi	r24, 0x08	; 8
     5b2:	0e 94 18 02 	call	0x430	; 0x430 <uart_putchar>
						cp--;
     5b6:	21 97       	sbiw	r28, 0x01	; 1
						cp--;
					}
					break;

				case 'w' & 0x1f:
					while (cp > b && cp[-1] != ' ') {
     5b8:	80 e4       	ldi	r24, 0x40	; 64
     5ba:	c4 32       	cpi	r28, 0x24	; 36
     5bc:	d8 07       	cpc	r29, r24
     5be:	09 f0       	breq	.+2      	; 0x5c2 <uart_getchar+0x140>
     5c0:	08 f4       	brcc	.+2      	; 0x5c4 <uart_getchar+0x142>
     5c2:	6f cf       	rjmp	.-290    	; 0x4a2 <uart_getchar+0x20>
     5c4:	fe 01       	movw	r30, r28
     5c6:	31 97       	sbiw	r30, 0x01	; 1
     5c8:	80 81       	ld	r24, Z
     5ca:	80 32       	cpi	r24, 0x20	; 32
     5cc:	41 f7       	brne	.-48     	; 0x59e <uart_getchar+0x11c>
     5ce:	69 cf       	rjmp	.-302    	; 0x4a2 <uart_getchar+0x20>
					break;
			}
		}
	}

	c = *rxp++;
     5d0:	e0 91 74 40 	lds	r30, 0x4074	; 0x804074 <rxp.1995>
     5d4:	f0 91 75 40 	lds	r31, 0x4075	; 0x804075 <rxp.1995+0x1>
     5d8:	cf 01       	movw	r24, r30
     5da:	01 96       	adiw	r24, 0x01	; 1
     5dc:	80 93 74 40 	sts	0x4074, r24	; 0x804074 <rxp.1995>
     5e0:	90 93 75 40 	sts	0x4075, r25	; 0x804075 <rxp.1995+0x1>
     5e4:	80 81       	ld	r24, Z
	if (c == '\n')
     5e6:	8a 30       	cpi	r24, 0x0A	; 10
     5e8:	21 f4       	brne	.+8      	; 0x5f2 <uart_getchar+0x170>
		rxp = 0;
     5ea:	10 92 74 40 	sts	0x4074, r1	; 0x804074 <rxp.1995>
     5ee:	10 92 75 40 	sts	0x4075, r1	; 0x804075 <rxp.1995+0x1>

	return c;
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	02 c0       	rjmp	.+4      	; 0x5fa <uart_getchar+0x178>
			    continue;
			}

			switch (c) {
				case 'c' & 0x1f:
				    return -1;
     5f6:	8f ef       	ldi	r24, 0xFF	; 255
     5f8:	9f ef       	ldi	r25, 0xFF	; 255
	c = *rxp++;
	if (c == '\n')
		rxp = 0;

	return c;
}
     5fa:	df 91       	pop	r29
     5fc:	cf 91       	pop	r28
     5fe:	1f 91       	pop	r17
     600:	0f 91       	pop	r16
     602:	ff 90       	pop	r15
     604:	ef 90       	pop	r14
     606:	08 95       	ret

00000608 <uart_init>:
/*
 * Initialize the UART to 9600 Bd, tx/rx, 8N1.
 */
FILE*
uart_init(uint8_t usartnum, uint32_t baud_rate, FILE* stream)
{
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	e9 01       	movw	r28, r18
	if (stream) {
     60e:	20 97       	sbiw	r28, 0x00	; 0
     610:	49 f0       	breq	.+18     	; 0x624 <uart_init+0x1c>
		*stream = uartFile;
     612:	9e e0       	ldi	r25, 0x0E	; 14
     614:	e0 e0       	ldi	r30, 0x00	; 0
     616:	f0 e4       	ldi	r31, 0x40	; 64
     618:	d9 01       	movw	r26, r18
     61a:	01 90       	ld	r0, Z+
     61c:	0d 92       	st	X+, r0
     61e:	9a 95       	dec	r25
     620:	e1 f7       	brne	.-8      	; 0x61a <uart_init+0x12>
     622:	0b c0       	rjmp	.+22     	; 0x63a <uart_init+0x32>
	} else {
		stdout = &uartFile;
     624:	e6 e7       	ldi	r30, 0x76	; 118
     626:	f0 e4       	ldi	r31, 0x40	; 64
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e4       	ldi	r19, 0x40	; 64
     62c:	22 83       	std	Z+2, r18	; 0x02
     62e:	33 83       	std	Z+3, r19	; 0x03
		stdin = &uartFile;
     630:	20 83       	st	Z, r18
     632:	31 83       	std	Z+1, r19	; 0x01
		stderr = &uartFile;
     634:	24 83       	std	Z+4, r18	; 0x04
     636:	35 83       	std	Z+5, r19	; 0x05
		stream = &uartFile;
     638:	e9 01       	movw	r28, r18
	}

	void* usart = usart_init(usartnum, baud_rate);
     63a:	0e 94 c3 01 	call	0x386	; 0x386 <usart_init>
	fdev_set_udata(stream, usart);
     63e:	8c 87       	std	Y+12, r24	; 0x0c
     640:	9d 87       	std	Y+13, r25	; 0x0d
	  
	return stream;
}
     642:	ce 01       	movw	r24, r28
     644:	df 91       	pop	r29
     646:	cf 91       	pop	r28
     648:	08 95       	ret

0000064a <__floatunsisf>:
     64a:	e8 94       	clt
     64c:	09 c0       	rjmp	.+18     	; 0x660 <__floatsisf+0x12>

0000064e <__floatsisf>:
     64e:	97 fb       	bst	r25, 7
     650:	3e f4       	brtc	.+14     	; 0x660 <__floatsisf+0x12>
     652:	90 95       	com	r25
     654:	80 95       	com	r24
     656:	70 95       	com	r23
     658:	61 95       	neg	r22
     65a:	7f 4f       	sbci	r23, 0xFF	; 255
     65c:	8f 4f       	sbci	r24, 0xFF	; 255
     65e:	9f 4f       	sbci	r25, 0xFF	; 255
     660:	99 23       	and	r25, r25
     662:	a9 f0       	breq	.+42     	; 0x68e <__floatsisf+0x40>
     664:	f9 2f       	mov	r31, r25
     666:	96 e9       	ldi	r25, 0x96	; 150
     668:	bb 27       	eor	r27, r27
     66a:	93 95       	inc	r25
     66c:	f6 95       	lsr	r31
     66e:	87 95       	ror	r24
     670:	77 95       	ror	r23
     672:	67 95       	ror	r22
     674:	b7 95       	ror	r27
     676:	f1 11       	cpse	r31, r1
     678:	f8 cf       	rjmp	.-16     	; 0x66a <__floatsisf+0x1c>
     67a:	fa f4       	brpl	.+62     	; 0x6ba <__floatsisf+0x6c>
     67c:	bb 0f       	add	r27, r27
     67e:	11 f4       	brne	.+4      	; 0x684 <__floatsisf+0x36>
     680:	60 ff       	sbrs	r22, 0
     682:	1b c0       	rjmp	.+54     	; 0x6ba <__floatsisf+0x6c>
     684:	6f 5f       	subi	r22, 0xFF	; 255
     686:	7f 4f       	sbci	r23, 0xFF	; 255
     688:	8f 4f       	sbci	r24, 0xFF	; 255
     68a:	9f 4f       	sbci	r25, 0xFF	; 255
     68c:	16 c0       	rjmp	.+44     	; 0x6ba <__floatsisf+0x6c>
     68e:	88 23       	and	r24, r24
     690:	11 f0       	breq	.+4      	; 0x696 <__floatsisf+0x48>
     692:	96 e9       	ldi	r25, 0x96	; 150
     694:	11 c0       	rjmp	.+34     	; 0x6b8 <__floatsisf+0x6a>
     696:	77 23       	and	r23, r23
     698:	21 f0       	breq	.+8      	; 0x6a2 <__floatsisf+0x54>
     69a:	9e e8       	ldi	r25, 0x8E	; 142
     69c:	87 2f       	mov	r24, r23
     69e:	76 2f       	mov	r23, r22
     6a0:	05 c0       	rjmp	.+10     	; 0x6ac <__floatsisf+0x5e>
     6a2:	66 23       	and	r22, r22
     6a4:	71 f0       	breq	.+28     	; 0x6c2 <__floatsisf+0x74>
     6a6:	96 e8       	ldi	r25, 0x86	; 134
     6a8:	86 2f       	mov	r24, r22
     6aa:	70 e0       	ldi	r23, 0x00	; 0
     6ac:	60 e0       	ldi	r22, 0x00	; 0
     6ae:	2a f0       	brmi	.+10     	; 0x6ba <__floatsisf+0x6c>
     6b0:	9a 95       	dec	r25
     6b2:	66 0f       	add	r22, r22
     6b4:	77 1f       	adc	r23, r23
     6b6:	88 1f       	adc	r24, r24
     6b8:	da f7       	brpl	.-10     	; 0x6b0 <__floatsisf+0x62>
     6ba:	88 0f       	add	r24, r24
     6bc:	96 95       	lsr	r25
     6be:	87 95       	ror	r24
     6c0:	97 f9       	bld	r25, 7
     6c2:	08 95       	ret

000006c4 <__mulsf3>:
     6c4:	0e 94 75 03 	call	0x6ea	; 0x6ea <__mulsf3x>
     6c8:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_round>
     6cc:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__fp_pscA>
     6d0:	38 f0       	brcs	.+14     	; 0x6e0 <__mulsf3+0x1c>
     6d2:	0e 94 df 03 	call	0x7be	; 0x7be <__fp_pscB>
     6d6:	20 f0       	brcs	.+8      	; 0x6e0 <__mulsf3+0x1c>
     6d8:	95 23       	and	r25, r21
     6da:	11 f0       	breq	.+4      	; 0x6e0 <__mulsf3+0x1c>
     6dc:	0c 94 cf 03 	jmp	0x79e	; 0x79e <__fp_inf>
     6e0:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__fp_nan>
     6e4:	11 24       	eor	r1, r1
     6e6:	0c 94 1a 04 	jmp	0x834	; 0x834 <__fp_szero>

000006ea <__mulsf3x>:
     6ea:	0e 94 f7 03 	call	0x7ee	; 0x7ee <__fp_split3>
     6ee:	70 f3       	brcs	.-36     	; 0x6cc <__mulsf3+0x8>

000006f0 <__mulsf3_pse>:
     6f0:	95 9f       	mul	r25, r21
     6f2:	c1 f3       	breq	.-16     	; 0x6e4 <__mulsf3+0x20>
     6f4:	95 0f       	add	r25, r21
     6f6:	50 e0       	ldi	r21, 0x00	; 0
     6f8:	55 1f       	adc	r21, r21
     6fa:	62 9f       	mul	r22, r18
     6fc:	f0 01       	movw	r30, r0
     6fe:	72 9f       	mul	r23, r18
     700:	bb 27       	eor	r27, r27
     702:	f0 0d       	add	r31, r0
     704:	b1 1d       	adc	r27, r1
     706:	63 9f       	mul	r22, r19
     708:	aa 27       	eor	r26, r26
     70a:	f0 0d       	add	r31, r0
     70c:	b1 1d       	adc	r27, r1
     70e:	aa 1f       	adc	r26, r26
     710:	64 9f       	mul	r22, r20
     712:	66 27       	eor	r22, r22
     714:	b0 0d       	add	r27, r0
     716:	a1 1d       	adc	r26, r1
     718:	66 1f       	adc	r22, r22
     71a:	82 9f       	mul	r24, r18
     71c:	22 27       	eor	r18, r18
     71e:	b0 0d       	add	r27, r0
     720:	a1 1d       	adc	r26, r1
     722:	62 1f       	adc	r22, r18
     724:	73 9f       	mul	r23, r19
     726:	b0 0d       	add	r27, r0
     728:	a1 1d       	adc	r26, r1
     72a:	62 1f       	adc	r22, r18
     72c:	83 9f       	mul	r24, r19
     72e:	a0 0d       	add	r26, r0
     730:	61 1d       	adc	r22, r1
     732:	22 1f       	adc	r18, r18
     734:	74 9f       	mul	r23, r20
     736:	33 27       	eor	r19, r19
     738:	a0 0d       	add	r26, r0
     73a:	61 1d       	adc	r22, r1
     73c:	23 1f       	adc	r18, r19
     73e:	84 9f       	mul	r24, r20
     740:	60 0d       	add	r22, r0
     742:	21 1d       	adc	r18, r1
     744:	82 2f       	mov	r24, r18
     746:	76 2f       	mov	r23, r22
     748:	6a 2f       	mov	r22, r26
     74a:	11 24       	eor	r1, r1
     74c:	9f 57       	subi	r25, 0x7F	; 127
     74e:	50 40       	sbci	r21, 0x00	; 0
     750:	9a f0       	brmi	.+38     	; 0x778 <__mulsf3_pse+0x88>
     752:	f1 f0       	breq	.+60     	; 0x790 <__mulsf3_pse+0xa0>
     754:	88 23       	and	r24, r24
     756:	4a f0       	brmi	.+18     	; 0x76a <__mulsf3_pse+0x7a>
     758:	ee 0f       	add	r30, r30
     75a:	ff 1f       	adc	r31, r31
     75c:	bb 1f       	adc	r27, r27
     75e:	66 1f       	adc	r22, r22
     760:	77 1f       	adc	r23, r23
     762:	88 1f       	adc	r24, r24
     764:	91 50       	subi	r25, 0x01	; 1
     766:	50 40       	sbci	r21, 0x00	; 0
     768:	a9 f7       	brne	.-22     	; 0x754 <__mulsf3_pse+0x64>
     76a:	9e 3f       	cpi	r25, 0xFE	; 254
     76c:	51 05       	cpc	r21, r1
     76e:	80 f0       	brcs	.+32     	; 0x790 <__mulsf3_pse+0xa0>
     770:	0c 94 cf 03 	jmp	0x79e	; 0x79e <__fp_inf>
     774:	0c 94 1a 04 	jmp	0x834	; 0x834 <__fp_szero>
     778:	5f 3f       	cpi	r21, 0xFF	; 255
     77a:	e4 f3       	brlt	.-8      	; 0x774 <__mulsf3_pse+0x84>
     77c:	98 3e       	cpi	r25, 0xE8	; 232
     77e:	d4 f3       	brlt	.-12     	; 0x774 <__mulsf3_pse+0x84>
     780:	86 95       	lsr	r24
     782:	77 95       	ror	r23
     784:	67 95       	ror	r22
     786:	b7 95       	ror	r27
     788:	f7 95       	ror	r31
     78a:	e7 95       	ror	r30
     78c:	9f 5f       	subi	r25, 0xFF	; 255
     78e:	c1 f7       	brne	.-16     	; 0x780 <__mulsf3_pse+0x90>
     790:	fe 2b       	or	r31, r30
     792:	88 0f       	add	r24, r24
     794:	91 1d       	adc	r25, r1
     796:	96 95       	lsr	r25
     798:	87 95       	ror	r24
     79a:	97 f9       	bld	r25, 7
     79c:	08 95       	ret

0000079e <__fp_inf>:
     79e:	97 f9       	bld	r25, 7
     7a0:	9f 67       	ori	r25, 0x7F	; 127
     7a2:	80 e8       	ldi	r24, 0x80	; 128
     7a4:	70 e0       	ldi	r23, 0x00	; 0
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	08 95       	ret

000007aa <__fp_nan>:
     7aa:	9f ef       	ldi	r25, 0xFF	; 255
     7ac:	80 ec       	ldi	r24, 0xC0	; 192
     7ae:	08 95       	ret

000007b0 <__fp_pscA>:
     7b0:	00 24       	eor	r0, r0
     7b2:	0a 94       	dec	r0
     7b4:	16 16       	cp	r1, r22
     7b6:	17 06       	cpc	r1, r23
     7b8:	18 06       	cpc	r1, r24
     7ba:	09 06       	cpc	r0, r25
     7bc:	08 95       	ret

000007be <__fp_pscB>:
     7be:	00 24       	eor	r0, r0
     7c0:	0a 94       	dec	r0
     7c2:	12 16       	cp	r1, r18
     7c4:	13 06       	cpc	r1, r19
     7c6:	14 06       	cpc	r1, r20
     7c8:	05 06       	cpc	r0, r21
     7ca:	08 95       	ret

000007cc <__fp_round>:
     7cc:	09 2e       	mov	r0, r25
     7ce:	03 94       	inc	r0
     7d0:	00 0c       	add	r0, r0
     7d2:	11 f4       	brne	.+4      	; 0x7d8 <__fp_round+0xc>
     7d4:	88 23       	and	r24, r24
     7d6:	52 f0       	brmi	.+20     	; 0x7ec <__fp_round+0x20>
     7d8:	bb 0f       	add	r27, r27
     7da:	40 f4       	brcc	.+16     	; 0x7ec <__fp_round+0x20>
     7dc:	bf 2b       	or	r27, r31
     7de:	11 f4       	brne	.+4      	; 0x7e4 <__fp_round+0x18>
     7e0:	60 ff       	sbrs	r22, 0
     7e2:	04 c0       	rjmp	.+8      	; 0x7ec <__fp_round+0x20>
     7e4:	6f 5f       	subi	r22, 0xFF	; 255
     7e6:	7f 4f       	sbci	r23, 0xFF	; 255
     7e8:	8f 4f       	sbci	r24, 0xFF	; 255
     7ea:	9f 4f       	sbci	r25, 0xFF	; 255
     7ec:	08 95       	ret

000007ee <__fp_split3>:
     7ee:	57 fd       	sbrc	r21, 7
     7f0:	90 58       	subi	r25, 0x80	; 128
     7f2:	44 0f       	add	r20, r20
     7f4:	55 1f       	adc	r21, r21
     7f6:	59 f0       	breq	.+22     	; 0x80e <__fp_splitA+0x10>
     7f8:	5f 3f       	cpi	r21, 0xFF	; 255
     7fa:	71 f0       	breq	.+28     	; 0x818 <__fp_splitA+0x1a>
     7fc:	47 95       	ror	r20

000007fe <__fp_splitA>:
     7fe:	88 0f       	add	r24, r24
     800:	97 fb       	bst	r25, 7
     802:	99 1f       	adc	r25, r25
     804:	61 f0       	breq	.+24     	; 0x81e <__fp_splitA+0x20>
     806:	9f 3f       	cpi	r25, 0xFF	; 255
     808:	79 f0       	breq	.+30     	; 0x828 <__fp_splitA+0x2a>
     80a:	87 95       	ror	r24
     80c:	08 95       	ret
     80e:	12 16       	cp	r1, r18
     810:	13 06       	cpc	r1, r19
     812:	14 06       	cpc	r1, r20
     814:	55 1f       	adc	r21, r21
     816:	f2 cf       	rjmp	.-28     	; 0x7fc <__fp_split3+0xe>
     818:	46 95       	lsr	r20
     81a:	f1 df       	rcall	.-30     	; 0x7fe <__fp_splitA>
     81c:	08 c0       	rjmp	.+16     	; 0x82e <__fp_splitA+0x30>
     81e:	16 16       	cp	r1, r22
     820:	17 06       	cpc	r1, r23
     822:	18 06       	cpc	r1, r24
     824:	99 1f       	adc	r25, r25
     826:	f1 cf       	rjmp	.-30     	; 0x80a <__fp_splitA+0xc>
     828:	86 95       	lsr	r24
     82a:	71 05       	cpc	r23, r1
     82c:	61 05       	cpc	r22, r1
     82e:	08 94       	sec
     830:	08 95       	ret

00000832 <__fp_zero>:
     832:	e8 94       	clt

00000834 <__fp_szero>:
     834:	bb 27       	eor	r27, r27
     836:	66 27       	eor	r22, r22
     838:	77 27       	eor	r23, r23
     83a:	cb 01       	movw	r24, r22
     83c:	97 f9       	bld	r25, 7
     83e:	08 95       	ret

00000840 <__udivmodsi4>:
     840:	a1 e2       	ldi	r26, 0x21	; 33
     842:	1a 2e       	mov	r1, r26
     844:	aa 1b       	sub	r26, r26
     846:	bb 1b       	sub	r27, r27
     848:	fd 01       	movw	r30, r26
     84a:	0d c0       	rjmp	.+26     	; 0x866 <__udivmodsi4_ep>

0000084c <__udivmodsi4_loop>:
     84c:	aa 1f       	adc	r26, r26
     84e:	bb 1f       	adc	r27, r27
     850:	ee 1f       	adc	r30, r30
     852:	ff 1f       	adc	r31, r31
     854:	a2 17       	cp	r26, r18
     856:	b3 07       	cpc	r27, r19
     858:	e4 07       	cpc	r30, r20
     85a:	f5 07       	cpc	r31, r21
     85c:	20 f0       	brcs	.+8      	; 0x866 <__udivmodsi4_ep>
     85e:	a2 1b       	sub	r26, r18
     860:	b3 0b       	sbc	r27, r19
     862:	e4 0b       	sbc	r30, r20
     864:	f5 0b       	sbc	r31, r21

00000866 <__udivmodsi4_ep>:
     866:	66 1f       	adc	r22, r22
     868:	77 1f       	adc	r23, r23
     86a:	88 1f       	adc	r24, r24
     86c:	99 1f       	adc	r25, r25
     86e:	1a 94       	dec	r1
     870:	69 f7       	brne	.-38     	; 0x84c <__udivmodsi4_loop>
     872:	60 95       	com	r22
     874:	70 95       	com	r23
     876:	80 95       	com	r24
     878:	90 95       	com	r25
     87a:	9b 01       	movw	r18, r22
     87c:	ac 01       	movw	r20, r24
     87e:	bd 01       	movw	r22, r26
     880:	cf 01       	movw	r24, r30
     882:	08 95       	ret

00000884 <dtostrf>:
     884:	ef 92       	push	r14
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
     88e:	e8 01       	movw	r28, r16
     890:	47 fd       	sbrc	r20, 7
     892:	02 c0       	rjmp	.+4      	; 0x898 <dtostrf+0x14>
     894:	34 e0       	ldi	r19, 0x04	; 4
     896:	01 c0       	rjmp	.+2      	; 0x89a <dtostrf+0x16>
     898:	34 e1       	ldi	r19, 0x14	; 20
     89a:	04 2e       	mov	r0, r20
     89c:	00 0c       	add	r0, r0
     89e:	55 0b       	sbc	r21, r21
     8a0:	57 ff       	sbrs	r21, 7
     8a2:	03 c0       	rjmp	.+6      	; 0x8aa <dtostrf+0x26>
     8a4:	51 95       	neg	r21
     8a6:	41 95       	neg	r20
     8a8:	51 09       	sbc	r21, r1
     8aa:	e3 2e       	mov	r14, r19
     8ac:	02 2f       	mov	r16, r18
     8ae:	24 2f       	mov	r18, r20
     8b0:	ae 01       	movw	r20, r28
     8b2:	0e 94 bc 06 	call	0xd78	; 0xd78 <dtoa_prf>
     8b6:	ce 01       	movw	r24, r28
     8b8:	df 91       	pop	r29
     8ba:	cf 91       	pop	r28
     8bc:	1f 91       	pop	r17
     8be:	0f 91       	pop	r16
     8c0:	ef 90       	pop	r14
     8c2:	08 95       	ret

000008c4 <fwrite>:
     8c4:	8f 92       	push	r8
     8c6:	9f 92       	push	r9
     8c8:	af 92       	push	r10
     8ca:	bf 92       	push	r11
     8cc:	cf 92       	push	r12
     8ce:	df 92       	push	r13
     8d0:	ef 92       	push	r14
     8d2:	ff 92       	push	r15
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	5b 01       	movw	r10, r22
     8de:	4a 01       	movw	r8, r20
     8e0:	79 01       	movw	r14, r18
     8e2:	d9 01       	movw	r26, r18
     8e4:	13 96       	adiw	r26, 0x03	; 3
     8e6:	2c 91       	ld	r18, X
     8e8:	21 ff       	sbrs	r18, 1
     8ea:	1d c0       	rjmp	.+58     	; 0x926 <fwrite+0x62>
     8ec:	c0 e0       	ldi	r28, 0x00	; 0
     8ee:	d0 e0       	ldi	r29, 0x00	; 0
     8f0:	c8 15       	cp	r28, r8
     8f2:	d9 05       	cpc	r29, r9
     8f4:	d9 f0       	breq	.+54     	; 0x92c <fwrite+0x68>
     8f6:	8c 01       	movw	r16, r24
     8f8:	6c 01       	movw	r12, r24
     8fa:	ca 0c       	add	r12, r10
     8fc:	db 1c       	adc	r13, r11
     8fe:	c8 01       	movw	r24, r16
     900:	0c 15       	cp	r16, r12
     902:	1d 05       	cpc	r17, r13
     904:	71 f0       	breq	.+28     	; 0x922 <fwrite+0x5e>
     906:	0f 5f       	subi	r16, 0xFF	; 255
     908:	1f 4f       	sbci	r17, 0xFF	; 255
     90a:	d7 01       	movw	r26, r14
     90c:	18 96       	adiw	r26, 0x08	; 8
     90e:	ed 91       	ld	r30, X+
     910:	fc 91       	ld	r31, X
     912:	19 97       	sbiw	r26, 0x09	; 9
     914:	b7 01       	movw	r22, r14
     916:	dc 01       	movw	r26, r24
     918:	8c 91       	ld	r24, X
     91a:	09 95       	icall
     91c:	89 2b       	or	r24, r25
     91e:	79 f3       	breq	.-34     	; 0x8fe <fwrite+0x3a>
     920:	05 c0       	rjmp	.+10     	; 0x92c <fwrite+0x68>
     922:	21 96       	adiw	r28, 0x01	; 1
     924:	e5 cf       	rjmp	.-54     	; 0x8f0 <fwrite+0x2c>
     926:	80 e0       	ldi	r24, 0x00	; 0
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	01 c0       	rjmp	.+2      	; 0x92e <fwrite+0x6a>
     92c:	ce 01       	movw	r24, r28
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	ff 90       	pop	r15
     938:	ef 90       	pop	r14
     93a:	df 90       	pop	r13
     93c:	cf 90       	pop	r12
     93e:	bf 90       	pop	r11
     940:	af 90       	pop	r10
     942:	9f 90       	pop	r9
     944:	8f 90       	pop	r8
     946:	08 95       	ret

00000948 <printf>:
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
     94c:	cd b7       	in	r28, 0x3d	; 61
     94e:	de b7       	in	r29, 0x3e	; 62
     950:	ae 01       	movw	r20, r28
     952:	4b 5f       	subi	r20, 0xFB	; 251
     954:	5f 4f       	sbci	r21, 0xFF	; 255
     956:	fa 01       	movw	r30, r20
     958:	61 91       	ld	r22, Z+
     95a:	71 91       	ld	r23, Z+
     95c:	af 01       	movw	r20, r30
     95e:	80 91 78 40 	lds	r24, 0x4078	; 0x804078 <__iob+0x2>
     962:	90 91 79 40 	lds	r25, 0x4079	; 0x804079 <__iob+0x3>
     966:	0e 94 b8 04 	call	0x970	; 0x970 <vfprintf>
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	08 95       	ret

00000970 <vfprintf>:
     970:	2f 92       	push	r2
     972:	3f 92       	push	r3
     974:	4f 92       	push	r4
     976:	5f 92       	push	r5
     978:	6f 92       	push	r6
     97a:	7f 92       	push	r7
     97c:	8f 92       	push	r8
     97e:	9f 92       	push	r9
     980:	af 92       	push	r10
     982:	bf 92       	push	r11
     984:	cf 92       	push	r12
     986:	df 92       	push	r13
     988:	ef 92       	push	r14
     98a:	ff 92       	push	r15
     98c:	0f 93       	push	r16
     98e:	1f 93       	push	r17
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	cd b7       	in	r28, 0x3d	; 61
     996:	de b7       	in	r29, 0x3e	; 62
     998:	2b 97       	sbiw	r28, 0x0b	; 11
     99a:	cd bf       	out	0x3d, r28	; 61
     99c:	de bf       	out	0x3e, r29	; 62
     99e:	6c 01       	movw	r12, r24
     9a0:	7b 01       	movw	r14, r22
     9a2:	8a 01       	movw	r16, r20
     9a4:	fc 01       	movw	r30, r24
     9a6:	16 82       	std	Z+6, r1	; 0x06
     9a8:	17 82       	std	Z+7, r1	; 0x07
     9aa:	83 81       	ldd	r24, Z+3	; 0x03
     9ac:	81 ff       	sbrs	r24, 1
     9ae:	cc c1       	rjmp	.+920    	; 0xd48 <vfprintf+0x3d8>
     9b0:	ce 01       	movw	r24, r28
     9b2:	01 96       	adiw	r24, 0x01	; 1
     9b4:	3c 01       	movw	r6, r24
     9b6:	f6 01       	movw	r30, r12
     9b8:	93 81       	ldd	r25, Z+3	; 0x03
     9ba:	f7 01       	movw	r30, r14
     9bc:	93 fd       	sbrc	r25, 3
     9be:	85 91       	lpm	r24, Z+
     9c0:	93 ff       	sbrs	r25, 3
     9c2:	81 91       	ld	r24, Z+
     9c4:	7f 01       	movw	r14, r30
     9c6:	88 23       	and	r24, r24
     9c8:	09 f4       	brne	.+2      	; 0x9cc <vfprintf+0x5c>
     9ca:	ba c1       	rjmp	.+884    	; 0xd40 <vfprintf+0x3d0>
     9cc:	85 32       	cpi	r24, 0x25	; 37
     9ce:	39 f4       	brne	.+14     	; 0x9de <vfprintf+0x6e>
     9d0:	93 fd       	sbrc	r25, 3
     9d2:	85 91       	lpm	r24, Z+
     9d4:	93 ff       	sbrs	r25, 3
     9d6:	81 91       	ld	r24, Z+
     9d8:	7f 01       	movw	r14, r30
     9da:	85 32       	cpi	r24, 0x25	; 37
     9dc:	29 f4       	brne	.+10     	; 0x9e8 <vfprintf+0x78>
     9de:	b6 01       	movw	r22, r12
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     9e6:	e7 cf       	rjmp	.-50     	; 0x9b6 <vfprintf+0x46>
     9e8:	91 2c       	mov	r9, r1
     9ea:	21 2c       	mov	r2, r1
     9ec:	31 2c       	mov	r3, r1
     9ee:	ff e1       	ldi	r31, 0x1F	; 31
     9f0:	f3 15       	cp	r31, r3
     9f2:	d8 f0       	brcs	.+54     	; 0xa2a <vfprintf+0xba>
     9f4:	8b 32       	cpi	r24, 0x2B	; 43
     9f6:	79 f0       	breq	.+30     	; 0xa16 <vfprintf+0xa6>
     9f8:	38 f4       	brcc	.+14     	; 0xa08 <vfprintf+0x98>
     9fa:	80 32       	cpi	r24, 0x20	; 32
     9fc:	79 f0       	breq	.+30     	; 0xa1c <vfprintf+0xac>
     9fe:	83 32       	cpi	r24, 0x23	; 35
     a00:	a1 f4       	brne	.+40     	; 0xa2a <vfprintf+0xba>
     a02:	23 2d       	mov	r18, r3
     a04:	20 61       	ori	r18, 0x10	; 16
     a06:	1d c0       	rjmp	.+58     	; 0xa42 <vfprintf+0xd2>
     a08:	8d 32       	cpi	r24, 0x2D	; 45
     a0a:	61 f0       	breq	.+24     	; 0xa24 <vfprintf+0xb4>
     a0c:	80 33       	cpi	r24, 0x30	; 48
     a0e:	69 f4       	brne	.+26     	; 0xa2a <vfprintf+0xba>
     a10:	23 2d       	mov	r18, r3
     a12:	21 60       	ori	r18, 0x01	; 1
     a14:	16 c0       	rjmp	.+44     	; 0xa42 <vfprintf+0xd2>
     a16:	83 2d       	mov	r24, r3
     a18:	82 60       	ori	r24, 0x02	; 2
     a1a:	38 2e       	mov	r3, r24
     a1c:	e3 2d       	mov	r30, r3
     a1e:	e4 60       	ori	r30, 0x04	; 4
     a20:	3e 2e       	mov	r3, r30
     a22:	2a c0       	rjmp	.+84     	; 0xa78 <vfprintf+0x108>
     a24:	f3 2d       	mov	r31, r3
     a26:	f8 60       	ori	r31, 0x08	; 8
     a28:	1d c0       	rjmp	.+58     	; 0xa64 <vfprintf+0xf4>
     a2a:	37 fc       	sbrc	r3, 7
     a2c:	2d c0       	rjmp	.+90     	; 0xa88 <vfprintf+0x118>
     a2e:	20 ed       	ldi	r18, 0xD0	; 208
     a30:	28 0f       	add	r18, r24
     a32:	2a 30       	cpi	r18, 0x0A	; 10
     a34:	40 f0       	brcs	.+16     	; 0xa46 <vfprintf+0xd6>
     a36:	8e 32       	cpi	r24, 0x2E	; 46
     a38:	b9 f4       	brne	.+46     	; 0xa68 <vfprintf+0xf8>
     a3a:	36 fc       	sbrc	r3, 6
     a3c:	81 c1       	rjmp	.+770    	; 0xd40 <vfprintf+0x3d0>
     a3e:	23 2d       	mov	r18, r3
     a40:	20 64       	ori	r18, 0x40	; 64
     a42:	32 2e       	mov	r3, r18
     a44:	19 c0       	rjmp	.+50     	; 0xa78 <vfprintf+0x108>
     a46:	36 fe       	sbrs	r3, 6
     a48:	06 c0       	rjmp	.+12     	; 0xa56 <vfprintf+0xe6>
     a4a:	8a e0       	ldi	r24, 0x0A	; 10
     a4c:	98 9e       	mul	r9, r24
     a4e:	20 0d       	add	r18, r0
     a50:	11 24       	eor	r1, r1
     a52:	92 2e       	mov	r9, r18
     a54:	11 c0       	rjmp	.+34     	; 0xa78 <vfprintf+0x108>
     a56:	ea e0       	ldi	r30, 0x0A	; 10
     a58:	2e 9e       	mul	r2, r30
     a5a:	20 0d       	add	r18, r0
     a5c:	11 24       	eor	r1, r1
     a5e:	22 2e       	mov	r2, r18
     a60:	f3 2d       	mov	r31, r3
     a62:	f0 62       	ori	r31, 0x20	; 32
     a64:	3f 2e       	mov	r3, r31
     a66:	08 c0       	rjmp	.+16     	; 0xa78 <vfprintf+0x108>
     a68:	8c 36       	cpi	r24, 0x6C	; 108
     a6a:	21 f4       	brne	.+8      	; 0xa74 <vfprintf+0x104>
     a6c:	83 2d       	mov	r24, r3
     a6e:	80 68       	ori	r24, 0x80	; 128
     a70:	38 2e       	mov	r3, r24
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <vfprintf+0x108>
     a74:	88 36       	cpi	r24, 0x68	; 104
     a76:	41 f4       	brne	.+16     	; 0xa88 <vfprintf+0x118>
     a78:	f7 01       	movw	r30, r14
     a7a:	93 fd       	sbrc	r25, 3
     a7c:	85 91       	lpm	r24, Z+
     a7e:	93 ff       	sbrs	r25, 3
     a80:	81 91       	ld	r24, Z+
     a82:	7f 01       	movw	r14, r30
     a84:	81 11       	cpse	r24, r1
     a86:	b3 cf       	rjmp	.-154    	; 0x9ee <vfprintf+0x7e>
     a88:	98 2f       	mov	r25, r24
     a8a:	9f 7d       	andi	r25, 0xDF	; 223
     a8c:	95 54       	subi	r25, 0x45	; 69
     a8e:	93 30       	cpi	r25, 0x03	; 3
     a90:	28 f4       	brcc	.+10     	; 0xa9c <vfprintf+0x12c>
     a92:	0c 5f       	subi	r16, 0xFC	; 252
     a94:	1f 4f       	sbci	r17, 0xFF	; 255
     a96:	9f e3       	ldi	r25, 0x3F	; 63
     a98:	99 83       	std	Y+1, r25	; 0x01
     a9a:	0d c0       	rjmp	.+26     	; 0xab6 <vfprintf+0x146>
     a9c:	83 36       	cpi	r24, 0x63	; 99
     a9e:	31 f0       	breq	.+12     	; 0xaac <vfprintf+0x13c>
     aa0:	83 37       	cpi	r24, 0x73	; 115
     aa2:	71 f0       	breq	.+28     	; 0xac0 <vfprintf+0x150>
     aa4:	83 35       	cpi	r24, 0x53	; 83
     aa6:	09 f0       	breq	.+2      	; 0xaaa <vfprintf+0x13a>
     aa8:	59 c0       	rjmp	.+178    	; 0xb5c <vfprintf+0x1ec>
     aaa:	21 c0       	rjmp	.+66     	; 0xaee <vfprintf+0x17e>
     aac:	f8 01       	movw	r30, r16
     aae:	80 81       	ld	r24, Z
     ab0:	89 83       	std	Y+1, r24	; 0x01
     ab2:	0e 5f       	subi	r16, 0xFE	; 254
     ab4:	1f 4f       	sbci	r17, 0xFF	; 255
     ab6:	88 24       	eor	r8, r8
     ab8:	83 94       	inc	r8
     aba:	91 2c       	mov	r9, r1
     abc:	53 01       	movw	r10, r6
     abe:	13 c0       	rjmp	.+38     	; 0xae6 <vfprintf+0x176>
     ac0:	28 01       	movw	r4, r16
     ac2:	f2 e0       	ldi	r31, 0x02	; 2
     ac4:	4f 0e       	add	r4, r31
     ac6:	51 1c       	adc	r5, r1
     ac8:	f8 01       	movw	r30, r16
     aca:	a0 80       	ld	r10, Z
     acc:	b1 80       	ldd	r11, Z+1	; 0x01
     ace:	36 fe       	sbrs	r3, 6
     ad0:	03 c0       	rjmp	.+6      	; 0xad8 <vfprintf+0x168>
     ad2:	69 2d       	mov	r22, r9
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	02 c0       	rjmp	.+4      	; 0xadc <vfprintf+0x16c>
     ad8:	6f ef       	ldi	r22, 0xFF	; 255
     ada:	7f ef       	ldi	r23, 0xFF	; 255
     adc:	c5 01       	movw	r24, r10
     ade:	0e 94 10 09 	call	0x1220	; 0x1220 <strnlen>
     ae2:	4c 01       	movw	r8, r24
     ae4:	82 01       	movw	r16, r4
     ae6:	f3 2d       	mov	r31, r3
     ae8:	ff 77       	andi	r31, 0x7F	; 127
     aea:	3f 2e       	mov	r3, r31
     aec:	16 c0       	rjmp	.+44     	; 0xb1a <vfprintf+0x1aa>
     aee:	28 01       	movw	r4, r16
     af0:	22 e0       	ldi	r18, 0x02	; 2
     af2:	42 0e       	add	r4, r18
     af4:	51 1c       	adc	r5, r1
     af6:	f8 01       	movw	r30, r16
     af8:	a0 80       	ld	r10, Z
     afa:	b1 80       	ldd	r11, Z+1	; 0x01
     afc:	36 fe       	sbrs	r3, 6
     afe:	03 c0       	rjmp	.+6      	; 0xb06 <vfprintf+0x196>
     b00:	69 2d       	mov	r22, r9
     b02:	70 e0       	ldi	r23, 0x00	; 0
     b04:	02 c0       	rjmp	.+4      	; 0xb0a <vfprintf+0x19a>
     b06:	6f ef       	ldi	r22, 0xFF	; 255
     b08:	7f ef       	ldi	r23, 0xFF	; 255
     b0a:	c5 01       	movw	r24, r10
     b0c:	0e 94 05 09 	call	0x120a	; 0x120a <strnlen_P>
     b10:	4c 01       	movw	r8, r24
     b12:	f3 2d       	mov	r31, r3
     b14:	f0 68       	ori	r31, 0x80	; 128
     b16:	3f 2e       	mov	r3, r31
     b18:	82 01       	movw	r16, r4
     b1a:	33 fc       	sbrc	r3, 3
     b1c:	1b c0       	rjmp	.+54     	; 0xb54 <vfprintf+0x1e4>
     b1e:	82 2d       	mov	r24, r2
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	88 16       	cp	r8, r24
     b24:	99 06       	cpc	r9, r25
     b26:	b0 f4       	brcc	.+44     	; 0xb54 <vfprintf+0x1e4>
     b28:	b6 01       	movw	r22, r12
     b2a:	80 e2       	ldi	r24, 0x20	; 32
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     b32:	2a 94       	dec	r2
     b34:	f4 cf       	rjmp	.-24     	; 0xb1e <vfprintf+0x1ae>
     b36:	f5 01       	movw	r30, r10
     b38:	37 fc       	sbrc	r3, 7
     b3a:	85 91       	lpm	r24, Z+
     b3c:	37 fe       	sbrs	r3, 7
     b3e:	81 91       	ld	r24, Z+
     b40:	5f 01       	movw	r10, r30
     b42:	b6 01       	movw	r22, r12
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     b4a:	21 10       	cpse	r2, r1
     b4c:	2a 94       	dec	r2
     b4e:	21 e0       	ldi	r18, 0x01	; 1
     b50:	82 1a       	sub	r8, r18
     b52:	91 08       	sbc	r9, r1
     b54:	81 14       	cp	r8, r1
     b56:	91 04       	cpc	r9, r1
     b58:	71 f7       	brne	.-36     	; 0xb36 <vfprintf+0x1c6>
     b5a:	e8 c0       	rjmp	.+464    	; 0xd2c <vfprintf+0x3bc>
     b5c:	84 36       	cpi	r24, 0x64	; 100
     b5e:	11 f0       	breq	.+4      	; 0xb64 <vfprintf+0x1f4>
     b60:	89 36       	cpi	r24, 0x69	; 105
     b62:	41 f5       	brne	.+80     	; 0xbb4 <vfprintf+0x244>
     b64:	f8 01       	movw	r30, r16
     b66:	37 fe       	sbrs	r3, 7
     b68:	07 c0       	rjmp	.+14     	; 0xb78 <vfprintf+0x208>
     b6a:	60 81       	ld	r22, Z
     b6c:	71 81       	ldd	r23, Z+1	; 0x01
     b6e:	82 81       	ldd	r24, Z+2	; 0x02
     b70:	93 81       	ldd	r25, Z+3	; 0x03
     b72:	0c 5f       	subi	r16, 0xFC	; 252
     b74:	1f 4f       	sbci	r17, 0xFF	; 255
     b76:	08 c0       	rjmp	.+16     	; 0xb88 <vfprintf+0x218>
     b78:	60 81       	ld	r22, Z
     b7a:	71 81       	ldd	r23, Z+1	; 0x01
     b7c:	07 2e       	mov	r0, r23
     b7e:	00 0c       	add	r0, r0
     b80:	88 0b       	sbc	r24, r24
     b82:	99 0b       	sbc	r25, r25
     b84:	0e 5f       	subi	r16, 0xFE	; 254
     b86:	1f 4f       	sbci	r17, 0xFF	; 255
     b88:	f3 2d       	mov	r31, r3
     b8a:	ff 76       	andi	r31, 0x6F	; 111
     b8c:	3f 2e       	mov	r3, r31
     b8e:	97 ff       	sbrs	r25, 7
     b90:	09 c0       	rjmp	.+18     	; 0xba4 <vfprintf+0x234>
     b92:	90 95       	com	r25
     b94:	80 95       	com	r24
     b96:	70 95       	com	r23
     b98:	61 95       	neg	r22
     b9a:	7f 4f       	sbci	r23, 0xFF	; 255
     b9c:	8f 4f       	sbci	r24, 0xFF	; 255
     b9e:	9f 4f       	sbci	r25, 0xFF	; 255
     ba0:	f0 68       	ori	r31, 0x80	; 128
     ba2:	3f 2e       	mov	r3, r31
     ba4:	2a e0       	ldi	r18, 0x0A	; 10
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	a3 01       	movw	r20, r6
     baa:	0e 94 57 09 	call	0x12ae	; 0x12ae <__ultoa_invert>
     bae:	88 2e       	mov	r8, r24
     bb0:	86 18       	sub	r8, r6
     bb2:	45 c0       	rjmp	.+138    	; 0xc3e <vfprintf+0x2ce>
     bb4:	85 37       	cpi	r24, 0x75	; 117
     bb6:	31 f4       	brne	.+12     	; 0xbc4 <vfprintf+0x254>
     bb8:	23 2d       	mov	r18, r3
     bba:	2f 7e       	andi	r18, 0xEF	; 239
     bbc:	b2 2e       	mov	r11, r18
     bbe:	2a e0       	ldi	r18, 0x0A	; 10
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	25 c0       	rjmp	.+74     	; 0xc0e <vfprintf+0x29e>
     bc4:	93 2d       	mov	r25, r3
     bc6:	99 7f       	andi	r25, 0xF9	; 249
     bc8:	b9 2e       	mov	r11, r25
     bca:	8f 36       	cpi	r24, 0x6F	; 111
     bcc:	c1 f0       	breq	.+48     	; 0xbfe <vfprintf+0x28e>
     bce:	18 f4       	brcc	.+6      	; 0xbd6 <vfprintf+0x266>
     bd0:	88 35       	cpi	r24, 0x58	; 88
     bd2:	79 f0       	breq	.+30     	; 0xbf2 <vfprintf+0x282>
     bd4:	b5 c0       	rjmp	.+362    	; 0xd40 <vfprintf+0x3d0>
     bd6:	80 37       	cpi	r24, 0x70	; 112
     bd8:	19 f0       	breq	.+6      	; 0xbe0 <vfprintf+0x270>
     bda:	88 37       	cpi	r24, 0x78	; 120
     bdc:	21 f0       	breq	.+8      	; 0xbe6 <vfprintf+0x276>
     bde:	b0 c0       	rjmp	.+352    	; 0xd40 <vfprintf+0x3d0>
     be0:	e9 2f       	mov	r30, r25
     be2:	e0 61       	ori	r30, 0x10	; 16
     be4:	be 2e       	mov	r11, r30
     be6:	b4 fe       	sbrs	r11, 4
     be8:	0d c0       	rjmp	.+26     	; 0xc04 <vfprintf+0x294>
     bea:	fb 2d       	mov	r31, r11
     bec:	f4 60       	ori	r31, 0x04	; 4
     bee:	bf 2e       	mov	r11, r31
     bf0:	09 c0       	rjmp	.+18     	; 0xc04 <vfprintf+0x294>
     bf2:	34 fe       	sbrs	r3, 4
     bf4:	0a c0       	rjmp	.+20     	; 0xc0a <vfprintf+0x29a>
     bf6:	29 2f       	mov	r18, r25
     bf8:	26 60       	ori	r18, 0x06	; 6
     bfa:	b2 2e       	mov	r11, r18
     bfc:	06 c0       	rjmp	.+12     	; 0xc0a <vfprintf+0x29a>
     bfe:	28 e0       	ldi	r18, 0x08	; 8
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	05 c0       	rjmp	.+10     	; 0xc0e <vfprintf+0x29e>
     c04:	20 e1       	ldi	r18, 0x10	; 16
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <vfprintf+0x29e>
     c0a:	20 e1       	ldi	r18, 0x10	; 16
     c0c:	32 e0       	ldi	r19, 0x02	; 2
     c0e:	f8 01       	movw	r30, r16
     c10:	b7 fe       	sbrs	r11, 7
     c12:	07 c0       	rjmp	.+14     	; 0xc22 <vfprintf+0x2b2>
     c14:	60 81       	ld	r22, Z
     c16:	71 81       	ldd	r23, Z+1	; 0x01
     c18:	82 81       	ldd	r24, Z+2	; 0x02
     c1a:	93 81       	ldd	r25, Z+3	; 0x03
     c1c:	0c 5f       	subi	r16, 0xFC	; 252
     c1e:	1f 4f       	sbci	r17, 0xFF	; 255
     c20:	06 c0       	rjmp	.+12     	; 0xc2e <vfprintf+0x2be>
     c22:	60 81       	ld	r22, Z
     c24:	71 81       	ldd	r23, Z+1	; 0x01
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	0e 5f       	subi	r16, 0xFE	; 254
     c2c:	1f 4f       	sbci	r17, 0xFF	; 255
     c2e:	a3 01       	movw	r20, r6
     c30:	0e 94 57 09 	call	0x12ae	; 0x12ae <__ultoa_invert>
     c34:	88 2e       	mov	r8, r24
     c36:	86 18       	sub	r8, r6
     c38:	fb 2d       	mov	r31, r11
     c3a:	ff 77       	andi	r31, 0x7F	; 127
     c3c:	3f 2e       	mov	r3, r31
     c3e:	36 fe       	sbrs	r3, 6
     c40:	0d c0       	rjmp	.+26     	; 0xc5c <vfprintf+0x2ec>
     c42:	23 2d       	mov	r18, r3
     c44:	2e 7f       	andi	r18, 0xFE	; 254
     c46:	a2 2e       	mov	r10, r18
     c48:	89 14       	cp	r8, r9
     c4a:	58 f4       	brcc	.+22     	; 0xc62 <vfprintf+0x2f2>
     c4c:	34 fe       	sbrs	r3, 4
     c4e:	0b c0       	rjmp	.+22     	; 0xc66 <vfprintf+0x2f6>
     c50:	32 fc       	sbrc	r3, 2
     c52:	09 c0       	rjmp	.+18     	; 0xc66 <vfprintf+0x2f6>
     c54:	83 2d       	mov	r24, r3
     c56:	8e 7e       	andi	r24, 0xEE	; 238
     c58:	a8 2e       	mov	r10, r24
     c5a:	05 c0       	rjmp	.+10     	; 0xc66 <vfprintf+0x2f6>
     c5c:	b8 2c       	mov	r11, r8
     c5e:	a3 2c       	mov	r10, r3
     c60:	03 c0       	rjmp	.+6      	; 0xc68 <vfprintf+0x2f8>
     c62:	b8 2c       	mov	r11, r8
     c64:	01 c0       	rjmp	.+2      	; 0xc68 <vfprintf+0x2f8>
     c66:	b9 2c       	mov	r11, r9
     c68:	a4 fe       	sbrs	r10, 4
     c6a:	0f c0       	rjmp	.+30     	; 0xc8a <vfprintf+0x31a>
     c6c:	fe 01       	movw	r30, r28
     c6e:	e8 0d       	add	r30, r8
     c70:	f1 1d       	adc	r31, r1
     c72:	80 81       	ld	r24, Z
     c74:	80 33       	cpi	r24, 0x30	; 48
     c76:	21 f4       	brne	.+8      	; 0xc80 <vfprintf+0x310>
     c78:	9a 2d       	mov	r25, r10
     c7a:	99 7e       	andi	r25, 0xE9	; 233
     c7c:	a9 2e       	mov	r10, r25
     c7e:	09 c0       	rjmp	.+18     	; 0xc92 <vfprintf+0x322>
     c80:	a2 fe       	sbrs	r10, 2
     c82:	06 c0       	rjmp	.+12     	; 0xc90 <vfprintf+0x320>
     c84:	b3 94       	inc	r11
     c86:	b3 94       	inc	r11
     c88:	04 c0       	rjmp	.+8      	; 0xc92 <vfprintf+0x322>
     c8a:	8a 2d       	mov	r24, r10
     c8c:	86 78       	andi	r24, 0x86	; 134
     c8e:	09 f0       	breq	.+2      	; 0xc92 <vfprintf+0x322>
     c90:	b3 94       	inc	r11
     c92:	a3 fc       	sbrc	r10, 3
     c94:	11 c0       	rjmp	.+34     	; 0xcb8 <vfprintf+0x348>
     c96:	a0 fe       	sbrs	r10, 0
     c98:	06 c0       	rjmp	.+12     	; 0xca6 <vfprintf+0x336>
     c9a:	b2 14       	cp	r11, r2
     c9c:	88 f4       	brcc	.+34     	; 0xcc0 <vfprintf+0x350>
     c9e:	28 0c       	add	r2, r8
     ca0:	92 2c       	mov	r9, r2
     ca2:	9b 18       	sub	r9, r11
     ca4:	0e c0       	rjmp	.+28     	; 0xcc2 <vfprintf+0x352>
     ca6:	b2 14       	cp	r11, r2
     ca8:	60 f4       	brcc	.+24     	; 0xcc2 <vfprintf+0x352>
     caa:	b6 01       	movw	r22, r12
     cac:	80 e2       	ldi	r24, 0x20	; 32
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     cb4:	b3 94       	inc	r11
     cb6:	f7 cf       	rjmp	.-18     	; 0xca6 <vfprintf+0x336>
     cb8:	b2 14       	cp	r11, r2
     cba:	18 f4       	brcc	.+6      	; 0xcc2 <vfprintf+0x352>
     cbc:	2b 18       	sub	r2, r11
     cbe:	02 c0       	rjmp	.+4      	; 0xcc4 <vfprintf+0x354>
     cc0:	98 2c       	mov	r9, r8
     cc2:	21 2c       	mov	r2, r1
     cc4:	a4 fe       	sbrs	r10, 4
     cc6:	10 c0       	rjmp	.+32     	; 0xce8 <vfprintf+0x378>
     cc8:	b6 01       	movw	r22, r12
     cca:	80 e3       	ldi	r24, 0x30	; 48
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     cd2:	a2 fe       	sbrs	r10, 2
     cd4:	17 c0       	rjmp	.+46     	; 0xd04 <vfprintf+0x394>
     cd6:	a1 fc       	sbrc	r10, 1
     cd8:	03 c0       	rjmp	.+6      	; 0xce0 <vfprintf+0x370>
     cda:	88 e7       	ldi	r24, 0x78	; 120
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	02 c0       	rjmp	.+4      	; 0xce4 <vfprintf+0x374>
     ce0:	88 e5       	ldi	r24, 0x58	; 88
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	b6 01       	movw	r22, r12
     ce6:	0c c0       	rjmp	.+24     	; 0xd00 <vfprintf+0x390>
     ce8:	8a 2d       	mov	r24, r10
     cea:	86 78       	andi	r24, 0x86	; 134
     cec:	59 f0       	breq	.+22     	; 0xd04 <vfprintf+0x394>
     cee:	a1 fe       	sbrs	r10, 1
     cf0:	02 c0       	rjmp	.+4      	; 0xcf6 <vfprintf+0x386>
     cf2:	8b e2       	ldi	r24, 0x2B	; 43
     cf4:	01 c0       	rjmp	.+2      	; 0xcf8 <vfprintf+0x388>
     cf6:	80 e2       	ldi	r24, 0x20	; 32
     cf8:	a7 fc       	sbrc	r10, 7
     cfa:	8d e2       	ldi	r24, 0x2D	; 45
     cfc:	b6 01       	movw	r22, r12
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     d04:	89 14       	cp	r8, r9
     d06:	38 f4       	brcc	.+14     	; 0xd16 <vfprintf+0x3a6>
     d08:	b6 01       	movw	r22, r12
     d0a:	80 e3       	ldi	r24, 0x30	; 48
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     d12:	9a 94       	dec	r9
     d14:	f7 cf       	rjmp	.-18     	; 0xd04 <vfprintf+0x394>
     d16:	8a 94       	dec	r8
     d18:	f3 01       	movw	r30, r6
     d1a:	e8 0d       	add	r30, r8
     d1c:	f1 1d       	adc	r31, r1
     d1e:	80 81       	ld	r24, Z
     d20:	b6 01       	movw	r22, r12
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     d28:	81 10       	cpse	r8, r1
     d2a:	f5 cf       	rjmp	.-22     	; 0xd16 <vfprintf+0x3a6>
     d2c:	22 20       	and	r2, r2
     d2e:	09 f4       	brne	.+2      	; 0xd32 <vfprintf+0x3c2>
     d30:	42 ce       	rjmp	.-892    	; 0x9b6 <vfprintf+0x46>
     d32:	b6 01       	movw	r22, r12
     d34:	80 e2       	ldi	r24, 0x20	; 32
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     d3c:	2a 94       	dec	r2
     d3e:	f6 cf       	rjmp	.-20     	; 0xd2c <vfprintf+0x3bc>
     d40:	f6 01       	movw	r30, r12
     d42:	86 81       	ldd	r24, Z+6	; 0x06
     d44:	97 81       	ldd	r25, Z+7	; 0x07
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <vfprintf+0x3dc>
     d48:	8f ef       	ldi	r24, 0xFF	; 255
     d4a:	9f ef       	ldi	r25, 0xFF	; 255
     d4c:	2b 96       	adiw	r28, 0x0b	; 11
     d4e:	cd bf       	out	0x3d, r28	; 61
     d50:	de bf       	out	0x3e, r29	; 62
     d52:	df 91       	pop	r29
     d54:	cf 91       	pop	r28
     d56:	1f 91       	pop	r17
     d58:	0f 91       	pop	r16
     d5a:	ff 90       	pop	r15
     d5c:	ef 90       	pop	r14
     d5e:	df 90       	pop	r13
     d60:	cf 90       	pop	r12
     d62:	bf 90       	pop	r11
     d64:	af 90       	pop	r10
     d66:	9f 90       	pop	r9
     d68:	8f 90       	pop	r8
     d6a:	7f 90       	pop	r7
     d6c:	6f 90       	pop	r6
     d6e:	5f 90       	pop	r5
     d70:	4f 90       	pop	r4
     d72:	3f 90       	pop	r3
     d74:	2f 90       	pop	r2
     d76:	08 95       	ret

00000d78 <dtoa_prf>:
     d78:	8f 92       	push	r8
     d7a:	9f 92       	push	r9
     d7c:	af 92       	push	r10
     d7e:	bf 92       	push	r11
     d80:	cf 92       	push	r12
     d82:	df 92       	push	r13
     d84:	ef 92       	push	r14
     d86:	ff 92       	push	r15
     d88:	0f 93       	push	r16
     d8a:	1f 93       	push	r17
     d8c:	cf 93       	push	r28
     d8e:	df 93       	push	r29
     d90:	cd b7       	in	r28, 0x3d	; 61
     d92:	de b7       	in	r29, 0x3e	; 62
     d94:	29 97       	sbiw	r28, 0x09	; 9
     d96:	cd bf       	out	0x3d, r28	; 61
     d98:	de bf       	out	0x3e, r29	; 62
     d9a:	6a 01       	movw	r12, r20
     d9c:	12 2f       	mov	r17, r18
     d9e:	b0 2e       	mov	r11, r16
     da0:	2b e3       	ldi	r18, 0x3B	; 59
     da2:	20 17       	cp	r18, r16
     da4:	20 f0       	brcs	.+8      	; 0xdae <dtoa_prf+0x36>
     da6:	ff 24       	eor	r15, r15
     da8:	f3 94       	inc	r15
     daa:	f0 0e       	add	r15, r16
     dac:	02 c0       	rjmp	.+4      	; 0xdb2 <dtoa_prf+0x3a>
     dae:	2c e3       	ldi	r18, 0x3C	; 60
     db0:	f2 2e       	mov	r15, r18
     db2:	0f 2d       	mov	r16, r15
     db4:	27 e0       	ldi	r18, 0x07	; 7
     db6:	ae 01       	movw	r20, r28
     db8:	4f 5f       	subi	r20, 0xFF	; 255
     dba:	5f 4f       	sbci	r21, 0xFF	; 255
     dbc:	0e 94 2d 08 	call	0x105a	; 0x105a <__ftoa_engine>
     dc0:	bc 01       	movw	r22, r24
     dc2:	49 81       	ldd	r20, Y+1	; 0x01
     dc4:	84 2f       	mov	r24, r20
     dc6:	89 70       	andi	r24, 0x09	; 9
     dc8:	81 30       	cpi	r24, 0x01	; 1
     dca:	31 f0       	breq	.+12     	; 0xdd8 <dtoa_prf+0x60>
     dcc:	e1 fc       	sbrc	r14, 1
     dce:	06 c0       	rjmp	.+12     	; 0xddc <dtoa_prf+0x64>
     dd0:	e0 fe       	sbrs	r14, 0
     dd2:	06 c0       	rjmp	.+12     	; 0xde0 <dtoa_prf+0x68>
     dd4:	90 e2       	ldi	r25, 0x20	; 32
     dd6:	05 c0       	rjmp	.+10     	; 0xde2 <dtoa_prf+0x6a>
     dd8:	9d e2       	ldi	r25, 0x2D	; 45
     dda:	03 c0       	rjmp	.+6      	; 0xde2 <dtoa_prf+0x6a>
     ddc:	9b e2       	ldi	r25, 0x2B	; 43
     dde:	01 c0       	rjmp	.+2      	; 0xde2 <dtoa_prf+0x6a>
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	5e 2d       	mov	r21, r14
     de4:	50 71       	andi	r21, 0x10	; 16
     de6:	43 ff       	sbrs	r20, 3
     de8:	3c c0       	rjmp	.+120    	; 0xe62 <dtoa_prf+0xea>
     dea:	91 11       	cpse	r25, r1
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <dtoa_prf+0x7a>
     dee:	83 e0       	ldi	r24, 0x03	; 3
     df0:	01 c0       	rjmp	.+2      	; 0xdf4 <dtoa_prf+0x7c>
     df2:	84 e0       	ldi	r24, 0x04	; 4
     df4:	81 17       	cp	r24, r17
     df6:	18 f4       	brcc	.+6      	; 0xdfe <dtoa_prf+0x86>
     df8:	21 2f       	mov	r18, r17
     dfa:	28 1b       	sub	r18, r24
     dfc:	01 c0       	rjmp	.+2      	; 0xe00 <dtoa_prf+0x88>
     dfe:	20 e0       	ldi	r18, 0x00	; 0
     e00:	51 11       	cpse	r21, r1
     e02:	0b c0       	rjmp	.+22     	; 0xe1a <dtoa_prf+0xa2>
     e04:	f6 01       	movw	r30, r12
     e06:	82 2f       	mov	r24, r18
     e08:	30 e2       	ldi	r19, 0x20	; 32
     e0a:	88 23       	and	r24, r24
     e0c:	19 f0       	breq	.+6      	; 0xe14 <dtoa_prf+0x9c>
     e0e:	31 93       	st	Z+, r19
     e10:	81 50       	subi	r24, 0x01	; 1
     e12:	fb cf       	rjmp	.-10     	; 0xe0a <dtoa_prf+0x92>
     e14:	c2 0e       	add	r12, r18
     e16:	d1 1c       	adc	r13, r1
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	99 23       	and	r25, r25
     e1c:	29 f0       	breq	.+10     	; 0xe28 <dtoa_prf+0xb0>
     e1e:	d6 01       	movw	r26, r12
     e20:	9c 93       	st	X, r25
     e22:	f6 01       	movw	r30, r12
     e24:	31 96       	adiw	r30, 0x01	; 1
     e26:	6f 01       	movw	r12, r30
     e28:	c6 01       	movw	r24, r12
     e2a:	03 96       	adiw	r24, 0x03	; 3
     e2c:	e2 fe       	sbrs	r14, 2
     e2e:	0a c0       	rjmp	.+20     	; 0xe44 <dtoa_prf+0xcc>
     e30:	3e e4       	ldi	r19, 0x4E	; 78
     e32:	d6 01       	movw	r26, r12
     e34:	3c 93       	st	X, r19
     e36:	41 e4       	ldi	r20, 0x41	; 65
     e38:	11 96       	adiw	r26, 0x01	; 1
     e3a:	4c 93       	st	X, r20
     e3c:	11 97       	sbiw	r26, 0x01	; 1
     e3e:	12 96       	adiw	r26, 0x02	; 2
     e40:	3c 93       	st	X, r19
     e42:	06 c0       	rjmp	.+12     	; 0xe50 <dtoa_prf+0xd8>
     e44:	3e e6       	ldi	r19, 0x6E	; 110
     e46:	f6 01       	movw	r30, r12
     e48:	30 83       	st	Z, r19
     e4a:	41 e6       	ldi	r20, 0x61	; 97
     e4c:	41 83       	std	Z+1, r20	; 0x01
     e4e:	32 83       	std	Z+2, r19	; 0x02
     e50:	fc 01       	movw	r30, r24
     e52:	32 2f       	mov	r19, r18
     e54:	40 e2       	ldi	r20, 0x20	; 32
     e56:	33 23       	and	r19, r19
     e58:	09 f4       	brne	.+2      	; 0xe5c <dtoa_prf+0xe4>
     e5a:	42 c0       	rjmp	.+132    	; 0xee0 <dtoa_prf+0x168>
     e5c:	41 93       	st	Z+, r20
     e5e:	31 50       	subi	r19, 0x01	; 1
     e60:	fa cf       	rjmp	.-12     	; 0xe56 <dtoa_prf+0xde>
     e62:	42 ff       	sbrs	r20, 2
     e64:	44 c0       	rjmp	.+136    	; 0xeee <dtoa_prf+0x176>
     e66:	91 11       	cpse	r25, r1
     e68:	02 c0       	rjmp	.+4      	; 0xe6e <dtoa_prf+0xf6>
     e6a:	83 e0       	ldi	r24, 0x03	; 3
     e6c:	01 c0       	rjmp	.+2      	; 0xe70 <dtoa_prf+0xf8>
     e6e:	84 e0       	ldi	r24, 0x04	; 4
     e70:	81 17       	cp	r24, r17
     e72:	18 f4       	brcc	.+6      	; 0xe7a <dtoa_prf+0x102>
     e74:	21 2f       	mov	r18, r17
     e76:	28 1b       	sub	r18, r24
     e78:	01 c0       	rjmp	.+2      	; 0xe7c <dtoa_prf+0x104>
     e7a:	20 e0       	ldi	r18, 0x00	; 0
     e7c:	51 11       	cpse	r21, r1
     e7e:	0b c0       	rjmp	.+22     	; 0xe96 <dtoa_prf+0x11e>
     e80:	f6 01       	movw	r30, r12
     e82:	82 2f       	mov	r24, r18
     e84:	30 e2       	ldi	r19, 0x20	; 32
     e86:	88 23       	and	r24, r24
     e88:	19 f0       	breq	.+6      	; 0xe90 <dtoa_prf+0x118>
     e8a:	31 93       	st	Z+, r19
     e8c:	81 50       	subi	r24, 0x01	; 1
     e8e:	fb cf       	rjmp	.-10     	; 0xe86 <dtoa_prf+0x10e>
     e90:	c2 0e       	add	r12, r18
     e92:	d1 1c       	adc	r13, r1
     e94:	20 e0       	ldi	r18, 0x00	; 0
     e96:	99 23       	and	r25, r25
     e98:	29 f0       	breq	.+10     	; 0xea4 <dtoa_prf+0x12c>
     e9a:	d6 01       	movw	r26, r12
     e9c:	9c 93       	st	X, r25
     e9e:	f6 01       	movw	r30, r12
     ea0:	31 96       	adiw	r30, 0x01	; 1
     ea2:	6f 01       	movw	r12, r30
     ea4:	c6 01       	movw	r24, r12
     ea6:	03 96       	adiw	r24, 0x03	; 3
     ea8:	e2 fe       	sbrs	r14, 2
     eaa:	0b c0       	rjmp	.+22     	; 0xec2 <dtoa_prf+0x14a>
     eac:	39 e4       	ldi	r19, 0x49	; 73
     eae:	d6 01       	movw	r26, r12
     eb0:	3c 93       	st	X, r19
     eb2:	3e e4       	ldi	r19, 0x4E	; 78
     eb4:	11 96       	adiw	r26, 0x01	; 1
     eb6:	3c 93       	st	X, r19
     eb8:	11 97       	sbiw	r26, 0x01	; 1
     eba:	36 e4       	ldi	r19, 0x46	; 70
     ebc:	12 96       	adiw	r26, 0x02	; 2
     ebe:	3c 93       	st	X, r19
     ec0:	07 c0       	rjmp	.+14     	; 0xed0 <dtoa_prf+0x158>
     ec2:	39 e6       	ldi	r19, 0x69	; 105
     ec4:	f6 01       	movw	r30, r12
     ec6:	30 83       	st	Z, r19
     ec8:	3e e6       	ldi	r19, 0x6E	; 110
     eca:	31 83       	std	Z+1, r19	; 0x01
     ecc:	36 e6       	ldi	r19, 0x66	; 102
     ece:	32 83       	std	Z+2, r19	; 0x02
     ed0:	fc 01       	movw	r30, r24
     ed2:	32 2f       	mov	r19, r18
     ed4:	40 e2       	ldi	r20, 0x20	; 32
     ed6:	33 23       	and	r19, r19
     ed8:	19 f0       	breq	.+6      	; 0xee0 <dtoa_prf+0x168>
     eda:	41 93       	st	Z+, r20
     edc:	31 50       	subi	r19, 0x01	; 1
     ede:	fb cf       	rjmp	.-10     	; 0xed6 <dtoa_prf+0x15e>
     ee0:	fc 01       	movw	r30, r24
     ee2:	e2 0f       	add	r30, r18
     ee4:	f1 1d       	adc	r31, r1
     ee6:	10 82       	st	Z, r1
     ee8:	8e ef       	ldi	r24, 0xFE	; 254
     eea:	9f ef       	ldi	r25, 0xFF	; 255
     eec:	a6 c0       	rjmp	.+332    	; 0x103a <dtoa_prf+0x2c2>
     eee:	21 e0       	ldi	r18, 0x01	; 1
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	91 11       	cpse	r25, r1
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <dtoa_prf+0x182>
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	16 16       	cp	r1, r22
     efc:	17 06       	cpc	r1, r23
     efe:	1c f4       	brge	.+6      	; 0xf06 <dtoa_prf+0x18e>
     f00:	fb 01       	movw	r30, r22
     f02:	31 96       	adiw	r30, 0x01	; 1
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <dtoa_prf+0x192>
     f06:	e1 e0       	ldi	r30, 0x01	; 1
     f08:	f0 e0       	ldi	r31, 0x00	; 0
     f0a:	2e 0f       	add	r18, r30
     f0c:	3f 1f       	adc	r19, r31
     f0e:	bb 20       	and	r11, r11
     f10:	21 f0       	breq	.+8      	; 0xf1a <dtoa_prf+0x1a2>
     f12:	eb 2d       	mov	r30, r11
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	31 96       	adiw	r30, 0x01	; 1
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <dtoa_prf+0x1a6>
     f1a:	e0 e0       	ldi	r30, 0x00	; 0
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	2e 0f       	add	r18, r30
     f20:	3f 1f       	adc	r19, r31
     f22:	e1 2f       	mov	r30, r17
     f24:	f0 e0       	ldi	r31, 0x00	; 0
     f26:	2e 17       	cp	r18, r30
     f28:	3f 07       	cpc	r19, r31
     f2a:	1c f4       	brge	.+6      	; 0xf32 <dtoa_prf+0x1ba>
     f2c:	12 1b       	sub	r17, r18
     f2e:	21 2f       	mov	r18, r17
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <dtoa_prf+0x1bc>
     f32:	20 e0       	ldi	r18, 0x00	; 0
     f34:	8e 2d       	mov	r24, r14
     f36:	88 71       	andi	r24, 0x18	; 24
     f38:	59 f4       	brne	.+22     	; 0xf50 <dtoa_prf+0x1d8>
     f3a:	f6 01       	movw	r30, r12
     f3c:	82 2f       	mov	r24, r18
     f3e:	30 e2       	ldi	r19, 0x20	; 32
     f40:	88 23       	and	r24, r24
     f42:	19 f0       	breq	.+6      	; 0xf4a <dtoa_prf+0x1d2>
     f44:	31 93       	st	Z+, r19
     f46:	81 50       	subi	r24, 0x01	; 1
     f48:	fb cf       	rjmp	.-10     	; 0xf40 <dtoa_prf+0x1c8>
     f4a:	c2 0e       	add	r12, r18
     f4c:	d1 1c       	adc	r13, r1
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	99 23       	and	r25, r25
     f52:	29 f0       	breq	.+10     	; 0xf5e <dtoa_prf+0x1e6>
     f54:	d6 01       	movw	r26, r12
     f56:	9c 93       	st	X, r25
     f58:	f6 01       	movw	r30, r12
     f5a:	31 96       	adiw	r30, 0x01	; 1
     f5c:	6f 01       	movw	r12, r30
     f5e:	51 11       	cpse	r21, r1
     f60:	0b c0       	rjmp	.+22     	; 0xf78 <dtoa_prf+0x200>
     f62:	f6 01       	movw	r30, r12
     f64:	82 2f       	mov	r24, r18
     f66:	90 e3       	ldi	r25, 0x30	; 48
     f68:	88 23       	and	r24, r24
     f6a:	19 f0       	breq	.+6      	; 0xf72 <dtoa_prf+0x1fa>
     f6c:	91 93       	st	Z+, r25
     f6e:	81 50       	subi	r24, 0x01	; 1
     f70:	fb cf       	rjmp	.-10     	; 0xf68 <dtoa_prf+0x1f0>
     f72:	c2 0e       	add	r12, r18
     f74:	d1 1c       	adc	r13, r1
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	0f 2d       	mov	r16, r15
     f7a:	06 0f       	add	r16, r22
     f7c:	9a 81       	ldd	r25, Y+2	; 0x02
     f7e:	34 2f       	mov	r19, r20
     f80:	30 71       	andi	r19, 0x10	; 16
     f82:	44 ff       	sbrs	r20, 4
     f84:	03 c0       	rjmp	.+6      	; 0xf8c <dtoa_prf+0x214>
     f86:	91 33       	cpi	r25, 0x31	; 49
     f88:	09 f4       	brne	.+2      	; 0xf8c <dtoa_prf+0x214>
     f8a:	01 50       	subi	r16, 0x01	; 1
     f8c:	10 16       	cp	r1, r16
     f8e:	24 f4       	brge	.+8      	; 0xf98 <dtoa_prf+0x220>
     f90:	09 30       	cpi	r16, 0x09	; 9
     f92:	18 f0       	brcs	.+6      	; 0xf9a <dtoa_prf+0x222>
     f94:	08 e0       	ldi	r16, 0x08	; 8
     f96:	01 c0       	rjmp	.+2      	; 0xf9a <dtoa_prf+0x222>
     f98:	01 e0       	ldi	r16, 0x01	; 1
     f9a:	ab 01       	movw	r20, r22
     f9c:	77 ff       	sbrs	r23, 7
     f9e:	02 c0       	rjmp	.+4      	; 0xfa4 <dtoa_prf+0x22c>
     fa0:	40 e0       	ldi	r20, 0x00	; 0
     fa2:	50 e0       	ldi	r21, 0x00	; 0
     fa4:	fb 01       	movw	r30, r22
     fa6:	e4 1b       	sub	r30, r20
     fa8:	f5 0b       	sbc	r31, r21
     faa:	a1 e0       	ldi	r26, 0x01	; 1
     fac:	b0 e0       	ldi	r27, 0x00	; 0
     fae:	ac 0f       	add	r26, r28
     fb0:	bd 1f       	adc	r27, r29
     fb2:	ea 0f       	add	r30, r26
     fb4:	fb 1f       	adc	r31, r27
     fb6:	8e e2       	ldi	r24, 0x2E	; 46
     fb8:	a8 2e       	mov	r10, r24
     fba:	4b 01       	movw	r8, r22
     fbc:	80 1a       	sub	r8, r16
     fbe:	91 08       	sbc	r9, r1
     fc0:	0b 2d       	mov	r16, r11
     fc2:	10 e0       	ldi	r17, 0x00	; 0
     fc4:	11 95       	neg	r17
     fc6:	01 95       	neg	r16
     fc8:	11 09       	sbc	r17, r1
     fca:	4f 3f       	cpi	r20, 0xFF	; 255
     fcc:	bf ef       	ldi	r27, 0xFF	; 255
     fce:	5b 07       	cpc	r21, r27
     fd0:	21 f4       	brne	.+8      	; 0xfda <dtoa_prf+0x262>
     fd2:	d6 01       	movw	r26, r12
     fd4:	ac 92       	st	X, r10
     fd6:	11 96       	adiw	r26, 0x01	; 1
     fd8:	6d 01       	movw	r12, r26
     fda:	64 17       	cp	r22, r20
     fdc:	75 07       	cpc	r23, r21
     fde:	2c f0       	brlt	.+10     	; 0xfea <dtoa_prf+0x272>
     fe0:	84 16       	cp	r8, r20
     fe2:	95 06       	cpc	r9, r21
     fe4:	14 f4       	brge	.+4      	; 0xfea <dtoa_prf+0x272>
     fe6:	81 81       	ldd	r24, Z+1	; 0x01
     fe8:	01 c0       	rjmp	.+2      	; 0xfec <dtoa_prf+0x274>
     fea:	80 e3       	ldi	r24, 0x30	; 48
     fec:	41 50       	subi	r20, 0x01	; 1
     fee:	51 09       	sbc	r21, r1
     ff0:	31 96       	adiw	r30, 0x01	; 1
     ff2:	d6 01       	movw	r26, r12
     ff4:	11 96       	adiw	r26, 0x01	; 1
     ff6:	7d 01       	movw	r14, r26
     ff8:	40 17       	cp	r20, r16
     ffa:	51 07       	cpc	r21, r17
     ffc:	24 f0       	brlt	.+8      	; 0x1006 <dtoa_prf+0x28e>
     ffe:	d6 01       	movw	r26, r12
    1000:	8c 93       	st	X, r24
    1002:	67 01       	movw	r12, r14
    1004:	e2 cf       	rjmp	.-60     	; 0xfca <dtoa_prf+0x252>
    1006:	64 17       	cp	r22, r20
    1008:	75 07       	cpc	r23, r21
    100a:	39 f4       	brne	.+14     	; 0x101a <dtoa_prf+0x2a2>
    100c:	96 33       	cpi	r25, 0x36	; 54
    100e:	20 f4       	brcc	.+8      	; 0x1018 <dtoa_prf+0x2a0>
    1010:	95 33       	cpi	r25, 0x35	; 53
    1012:	19 f4       	brne	.+6      	; 0x101a <dtoa_prf+0x2a2>
    1014:	31 11       	cpse	r19, r1
    1016:	01 c0       	rjmp	.+2      	; 0x101a <dtoa_prf+0x2a2>
    1018:	81 e3       	ldi	r24, 0x31	; 49
    101a:	f6 01       	movw	r30, r12
    101c:	80 83       	st	Z, r24
    101e:	f7 01       	movw	r30, r14
    1020:	82 2f       	mov	r24, r18
    1022:	90 e2       	ldi	r25, 0x20	; 32
    1024:	88 23       	and	r24, r24
    1026:	19 f0       	breq	.+6      	; 0x102e <dtoa_prf+0x2b6>
    1028:	91 93       	st	Z+, r25
    102a:	81 50       	subi	r24, 0x01	; 1
    102c:	fb cf       	rjmp	.-10     	; 0x1024 <dtoa_prf+0x2ac>
    102e:	f7 01       	movw	r30, r14
    1030:	e2 0f       	add	r30, r18
    1032:	f1 1d       	adc	r31, r1
    1034:	10 82       	st	Z, r1
    1036:	80 e0       	ldi	r24, 0x00	; 0
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	29 96       	adiw	r28, 0x09	; 9
    103c:	cd bf       	out	0x3d, r28	; 61
    103e:	de bf       	out	0x3e, r29	; 62
    1040:	df 91       	pop	r29
    1042:	cf 91       	pop	r28
    1044:	1f 91       	pop	r17
    1046:	0f 91       	pop	r16
    1048:	ff 90       	pop	r15
    104a:	ef 90       	pop	r14
    104c:	df 90       	pop	r13
    104e:	cf 90       	pop	r12
    1050:	bf 90       	pop	r11
    1052:	af 90       	pop	r10
    1054:	9f 90       	pop	r9
    1056:	8f 90       	pop	r8
    1058:	08 95       	ret

0000105a <__ftoa_engine>:
    105a:	28 30       	cpi	r18, 0x08	; 8
    105c:	08 f0       	brcs	.+2      	; 0x1060 <__ftoa_engine+0x6>
    105e:	27 e0       	ldi	r18, 0x07	; 7
    1060:	33 27       	eor	r19, r19
    1062:	da 01       	movw	r26, r20
    1064:	99 0f       	add	r25, r25
    1066:	31 1d       	adc	r19, r1
    1068:	87 fd       	sbrc	r24, 7
    106a:	91 60       	ori	r25, 0x01	; 1
    106c:	00 96       	adiw	r24, 0x00	; 0
    106e:	61 05       	cpc	r22, r1
    1070:	71 05       	cpc	r23, r1
    1072:	39 f4       	brne	.+14     	; 0x1082 <__ftoa_engine+0x28>
    1074:	32 60       	ori	r19, 0x02	; 2
    1076:	2e 5f       	subi	r18, 0xFE	; 254
    1078:	3d 93       	st	X+, r19
    107a:	30 e3       	ldi	r19, 0x30	; 48
    107c:	2a 95       	dec	r18
    107e:	e1 f7       	brne	.-8      	; 0x1078 <__ftoa_engine+0x1e>
    1080:	08 95       	ret
    1082:	9f 3f       	cpi	r25, 0xFF	; 255
    1084:	30 f0       	brcs	.+12     	; 0x1092 <__ftoa_engine+0x38>
    1086:	80 38       	cpi	r24, 0x80	; 128
    1088:	71 05       	cpc	r23, r1
    108a:	61 05       	cpc	r22, r1
    108c:	09 f0       	breq	.+2      	; 0x1090 <__ftoa_engine+0x36>
    108e:	3c 5f       	subi	r19, 0xFC	; 252
    1090:	3c 5f       	subi	r19, 0xFC	; 252
    1092:	3d 93       	st	X+, r19
    1094:	91 30       	cpi	r25, 0x01	; 1
    1096:	08 f0       	brcs	.+2      	; 0x109a <__ftoa_engine+0x40>
    1098:	80 68       	ori	r24, 0x80	; 128
    109a:	91 1d       	adc	r25, r1
    109c:	df 93       	push	r29
    109e:	cf 93       	push	r28
    10a0:	1f 93       	push	r17
    10a2:	0f 93       	push	r16
    10a4:	ff 92       	push	r15
    10a6:	ef 92       	push	r14
    10a8:	19 2f       	mov	r17, r25
    10aa:	98 7f       	andi	r25, 0xF8	; 248
    10ac:	96 95       	lsr	r25
    10ae:	e9 2f       	mov	r30, r25
    10b0:	96 95       	lsr	r25
    10b2:	96 95       	lsr	r25
    10b4:	e9 0f       	add	r30, r25
    10b6:	ff 27       	eor	r31, r31
    10b8:	e2 5b       	subi	r30, 0xB2	; 178
    10ba:	fe 4f       	sbci	r31, 0xFE	; 254
    10bc:	99 27       	eor	r25, r25
    10be:	33 27       	eor	r19, r19
    10c0:	ee 24       	eor	r14, r14
    10c2:	ff 24       	eor	r15, r15
    10c4:	a7 01       	movw	r20, r14
    10c6:	e7 01       	movw	r28, r14
    10c8:	05 90       	lpm	r0, Z+
    10ca:	08 94       	sec
    10cc:	07 94       	ror	r0
    10ce:	28 f4       	brcc	.+10     	; 0x10da <__ftoa_engine+0x80>
    10d0:	36 0f       	add	r19, r22
    10d2:	e7 1e       	adc	r14, r23
    10d4:	f8 1e       	adc	r15, r24
    10d6:	49 1f       	adc	r20, r25
    10d8:	51 1d       	adc	r21, r1
    10da:	66 0f       	add	r22, r22
    10dc:	77 1f       	adc	r23, r23
    10de:	88 1f       	adc	r24, r24
    10e0:	99 1f       	adc	r25, r25
    10e2:	06 94       	lsr	r0
    10e4:	a1 f7       	brne	.-24     	; 0x10ce <__ftoa_engine+0x74>
    10e6:	05 90       	lpm	r0, Z+
    10e8:	07 94       	ror	r0
    10ea:	28 f4       	brcc	.+10     	; 0x10f6 <__ftoa_engine+0x9c>
    10ec:	e7 0e       	add	r14, r23
    10ee:	f8 1e       	adc	r15, r24
    10f0:	49 1f       	adc	r20, r25
    10f2:	56 1f       	adc	r21, r22
    10f4:	c1 1d       	adc	r28, r1
    10f6:	77 0f       	add	r23, r23
    10f8:	88 1f       	adc	r24, r24
    10fa:	99 1f       	adc	r25, r25
    10fc:	66 1f       	adc	r22, r22
    10fe:	06 94       	lsr	r0
    1100:	a1 f7       	brne	.-24     	; 0x10ea <__ftoa_engine+0x90>
    1102:	05 90       	lpm	r0, Z+
    1104:	07 94       	ror	r0
    1106:	28 f4       	brcc	.+10     	; 0x1112 <__ftoa_engine+0xb8>
    1108:	f8 0e       	add	r15, r24
    110a:	49 1f       	adc	r20, r25
    110c:	56 1f       	adc	r21, r22
    110e:	c7 1f       	adc	r28, r23
    1110:	d1 1d       	adc	r29, r1
    1112:	88 0f       	add	r24, r24
    1114:	99 1f       	adc	r25, r25
    1116:	66 1f       	adc	r22, r22
    1118:	77 1f       	adc	r23, r23
    111a:	06 94       	lsr	r0
    111c:	a1 f7       	brne	.-24     	; 0x1106 <__ftoa_engine+0xac>
    111e:	05 90       	lpm	r0, Z+
    1120:	07 94       	ror	r0
    1122:	20 f4       	brcc	.+8      	; 0x112c <__ftoa_engine+0xd2>
    1124:	49 0f       	add	r20, r25
    1126:	56 1f       	adc	r21, r22
    1128:	c7 1f       	adc	r28, r23
    112a:	d8 1f       	adc	r29, r24
    112c:	99 0f       	add	r25, r25
    112e:	66 1f       	adc	r22, r22
    1130:	77 1f       	adc	r23, r23
    1132:	88 1f       	adc	r24, r24
    1134:	06 94       	lsr	r0
    1136:	a9 f7       	brne	.-22     	; 0x1122 <__ftoa_engine+0xc8>
    1138:	84 91       	lpm	r24, Z
    113a:	10 95       	com	r17
    113c:	17 70       	andi	r17, 0x07	; 7
    113e:	41 f0       	breq	.+16     	; 0x1150 <__ftoa_engine+0xf6>
    1140:	d6 95       	lsr	r29
    1142:	c7 95       	ror	r28
    1144:	57 95       	ror	r21
    1146:	47 95       	ror	r20
    1148:	f7 94       	ror	r15
    114a:	e7 94       	ror	r14
    114c:	1a 95       	dec	r17
    114e:	c1 f7       	brne	.-16     	; 0x1140 <__ftoa_engine+0xe6>
    1150:	e4 ef       	ldi	r30, 0xF4	; 244
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	68 94       	set
    1156:	15 90       	lpm	r1, Z+
    1158:	15 91       	lpm	r17, Z+
    115a:	35 91       	lpm	r19, Z+
    115c:	65 91       	lpm	r22, Z+
    115e:	95 91       	lpm	r25, Z+
    1160:	05 90       	lpm	r0, Z+
    1162:	7f e2       	ldi	r23, 0x2F	; 47
    1164:	73 95       	inc	r23
    1166:	e1 18       	sub	r14, r1
    1168:	f1 0a       	sbc	r15, r17
    116a:	43 0b       	sbc	r20, r19
    116c:	56 0b       	sbc	r21, r22
    116e:	c9 0b       	sbc	r28, r25
    1170:	d0 09       	sbc	r29, r0
    1172:	c0 f7       	brcc	.-16     	; 0x1164 <__ftoa_engine+0x10a>
    1174:	e1 0c       	add	r14, r1
    1176:	f1 1e       	adc	r15, r17
    1178:	43 1f       	adc	r20, r19
    117a:	56 1f       	adc	r21, r22
    117c:	c9 1f       	adc	r28, r25
    117e:	d0 1d       	adc	r29, r0
    1180:	7e f4       	brtc	.+30     	; 0x11a0 <__ftoa_engine+0x146>
    1182:	70 33       	cpi	r23, 0x30	; 48
    1184:	11 f4       	brne	.+4      	; 0x118a <__ftoa_engine+0x130>
    1186:	8a 95       	dec	r24
    1188:	e6 cf       	rjmp	.-52     	; 0x1156 <__ftoa_engine+0xfc>
    118a:	e8 94       	clt
    118c:	01 50       	subi	r16, 0x01	; 1
    118e:	30 f0       	brcs	.+12     	; 0x119c <__ftoa_engine+0x142>
    1190:	08 0f       	add	r16, r24
    1192:	0a f4       	brpl	.+2      	; 0x1196 <__ftoa_engine+0x13c>
    1194:	00 27       	eor	r16, r16
    1196:	02 17       	cp	r16, r18
    1198:	08 f4       	brcc	.+2      	; 0x119c <__ftoa_engine+0x142>
    119a:	20 2f       	mov	r18, r16
    119c:	23 95       	inc	r18
    119e:	02 2f       	mov	r16, r18
    11a0:	7a 33       	cpi	r23, 0x3A	; 58
    11a2:	28 f0       	brcs	.+10     	; 0x11ae <__ftoa_engine+0x154>
    11a4:	79 e3       	ldi	r23, 0x39	; 57
    11a6:	7d 93       	st	X+, r23
    11a8:	2a 95       	dec	r18
    11aa:	e9 f7       	brne	.-6      	; 0x11a6 <__ftoa_engine+0x14c>
    11ac:	10 c0       	rjmp	.+32     	; 0x11ce <__ftoa_engine+0x174>
    11ae:	7d 93       	st	X+, r23
    11b0:	2a 95       	dec	r18
    11b2:	89 f6       	brne	.-94     	; 0x1156 <__ftoa_engine+0xfc>
    11b4:	06 94       	lsr	r0
    11b6:	97 95       	ror	r25
    11b8:	67 95       	ror	r22
    11ba:	37 95       	ror	r19
    11bc:	17 95       	ror	r17
    11be:	17 94       	ror	r1
    11c0:	e1 18       	sub	r14, r1
    11c2:	f1 0a       	sbc	r15, r17
    11c4:	43 0b       	sbc	r20, r19
    11c6:	56 0b       	sbc	r21, r22
    11c8:	c9 0b       	sbc	r28, r25
    11ca:	d0 09       	sbc	r29, r0
    11cc:	98 f0       	brcs	.+38     	; 0x11f4 <__ftoa_engine+0x19a>
    11ce:	23 95       	inc	r18
    11d0:	7e 91       	ld	r23, -X
    11d2:	73 95       	inc	r23
    11d4:	7a 33       	cpi	r23, 0x3A	; 58
    11d6:	08 f0       	brcs	.+2      	; 0x11da <__ftoa_engine+0x180>
    11d8:	70 e3       	ldi	r23, 0x30	; 48
    11da:	7c 93       	st	X, r23
    11dc:	20 13       	cpse	r18, r16
    11de:	b8 f7       	brcc	.-18     	; 0x11ce <__ftoa_engine+0x174>
    11e0:	7e 91       	ld	r23, -X
    11e2:	70 61       	ori	r23, 0x10	; 16
    11e4:	7d 93       	st	X+, r23
    11e6:	30 f0       	brcs	.+12     	; 0x11f4 <__ftoa_engine+0x19a>
    11e8:	83 95       	inc	r24
    11ea:	71 e3       	ldi	r23, 0x31	; 49
    11ec:	7d 93       	st	X+, r23
    11ee:	70 e3       	ldi	r23, 0x30	; 48
    11f0:	2a 95       	dec	r18
    11f2:	e1 f7       	brne	.-8      	; 0x11ec <__ftoa_engine+0x192>
    11f4:	11 24       	eor	r1, r1
    11f6:	ef 90       	pop	r14
    11f8:	ff 90       	pop	r15
    11fa:	0f 91       	pop	r16
    11fc:	1f 91       	pop	r17
    11fe:	cf 91       	pop	r28
    1200:	df 91       	pop	r29
    1202:	99 27       	eor	r25, r25
    1204:	87 fd       	sbrc	r24, 7
    1206:	90 95       	com	r25
    1208:	08 95       	ret

0000120a <strnlen_P>:
    120a:	fc 01       	movw	r30, r24
    120c:	05 90       	lpm	r0, Z+
    120e:	61 50       	subi	r22, 0x01	; 1
    1210:	70 40       	sbci	r23, 0x00	; 0
    1212:	01 10       	cpse	r0, r1
    1214:	d8 f7       	brcc	.-10     	; 0x120c <strnlen_P+0x2>
    1216:	80 95       	com	r24
    1218:	90 95       	com	r25
    121a:	8e 0f       	add	r24, r30
    121c:	9f 1f       	adc	r25, r31
    121e:	08 95       	ret

00001220 <strnlen>:
    1220:	fc 01       	movw	r30, r24
    1222:	61 50       	subi	r22, 0x01	; 1
    1224:	70 40       	sbci	r23, 0x00	; 0
    1226:	01 90       	ld	r0, Z+
    1228:	01 10       	cpse	r0, r1
    122a:	d8 f7       	brcc	.-10     	; 0x1222 <strnlen+0x2>
    122c:	80 95       	com	r24
    122e:	90 95       	com	r25
    1230:	8e 0f       	add	r24, r30
    1232:	9f 1f       	adc	r25, r31
    1234:	08 95       	ret

00001236 <fputc>:
    1236:	0f 93       	push	r16
    1238:	1f 93       	push	r17
    123a:	cf 93       	push	r28
    123c:	df 93       	push	r29
    123e:	fb 01       	movw	r30, r22
    1240:	23 81       	ldd	r18, Z+3	; 0x03
    1242:	21 fd       	sbrc	r18, 1
    1244:	03 c0       	rjmp	.+6      	; 0x124c <fputc+0x16>
    1246:	8f ef       	ldi	r24, 0xFF	; 255
    1248:	9f ef       	ldi	r25, 0xFF	; 255
    124a:	2c c0       	rjmp	.+88     	; 0x12a4 <fputc+0x6e>
    124c:	22 ff       	sbrs	r18, 2
    124e:	16 c0       	rjmp	.+44     	; 0x127c <fputc+0x46>
    1250:	46 81       	ldd	r20, Z+6	; 0x06
    1252:	57 81       	ldd	r21, Z+7	; 0x07
    1254:	24 81       	ldd	r18, Z+4	; 0x04
    1256:	35 81       	ldd	r19, Z+5	; 0x05
    1258:	42 17       	cp	r20, r18
    125a:	53 07       	cpc	r21, r19
    125c:	44 f4       	brge	.+16     	; 0x126e <fputc+0x38>
    125e:	a0 81       	ld	r26, Z
    1260:	b1 81       	ldd	r27, Z+1	; 0x01
    1262:	9d 01       	movw	r18, r26
    1264:	2f 5f       	subi	r18, 0xFF	; 255
    1266:	3f 4f       	sbci	r19, 0xFF	; 255
    1268:	20 83       	st	Z, r18
    126a:	31 83       	std	Z+1, r19	; 0x01
    126c:	8c 93       	st	X, r24
    126e:	26 81       	ldd	r18, Z+6	; 0x06
    1270:	37 81       	ldd	r19, Z+7	; 0x07
    1272:	2f 5f       	subi	r18, 0xFF	; 255
    1274:	3f 4f       	sbci	r19, 0xFF	; 255
    1276:	26 83       	std	Z+6, r18	; 0x06
    1278:	37 83       	std	Z+7, r19	; 0x07
    127a:	14 c0       	rjmp	.+40     	; 0x12a4 <fputc+0x6e>
    127c:	8b 01       	movw	r16, r22
    127e:	ec 01       	movw	r28, r24
    1280:	fb 01       	movw	r30, r22
    1282:	00 84       	ldd	r0, Z+8	; 0x08
    1284:	f1 85       	ldd	r31, Z+9	; 0x09
    1286:	e0 2d       	mov	r30, r0
    1288:	09 95       	icall
    128a:	89 2b       	or	r24, r25
    128c:	e1 f6       	brne	.-72     	; 0x1246 <fputc+0x10>
    128e:	d8 01       	movw	r26, r16
    1290:	16 96       	adiw	r26, 0x06	; 6
    1292:	8d 91       	ld	r24, X+
    1294:	9c 91       	ld	r25, X
    1296:	17 97       	sbiw	r26, 0x07	; 7
    1298:	01 96       	adiw	r24, 0x01	; 1
    129a:	16 96       	adiw	r26, 0x06	; 6
    129c:	8d 93       	st	X+, r24
    129e:	9c 93       	st	X, r25
    12a0:	17 97       	sbiw	r26, 0x07	; 7
    12a2:	ce 01       	movw	r24, r28
    12a4:	df 91       	pop	r29
    12a6:	cf 91       	pop	r28
    12a8:	1f 91       	pop	r17
    12aa:	0f 91       	pop	r16
    12ac:	08 95       	ret

000012ae <__ultoa_invert>:
    12ae:	fa 01       	movw	r30, r20
    12b0:	aa 27       	eor	r26, r26
    12b2:	28 30       	cpi	r18, 0x08	; 8
    12b4:	51 f1       	breq	.+84     	; 0x130a <__ultoa_invert+0x5c>
    12b6:	20 31       	cpi	r18, 0x10	; 16
    12b8:	81 f1       	breq	.+96     	; 0x131a <__ultoa_invert+0x6c>
    12ba:	e8 94       	clt
    12bc:	6f 93       	push	r22
    12be:	6e 7f       	andi	r22, 0xFE	; 254
    12c0:	6e 5f       	subi	r22, 0xFE	; 254
    12c2:	7f 4f       	sbci	r23, 0xFF	; 255
    12c4:	8f 4f       	sbci	r24, 0xFF	; 255
    12c6:	9f 4f       	sbci	r25, 0xFF	; 255
    12c8:	af 4f       	sbci	r26, 0xFF	; 255
    12ca:	b1 e0       	ldi	r27, 0x01	; 1
    12cc:	3e d0       	rcall	.+124    	; 0x134a <__ultoa_invert+0x9c>
    12ce:	b4 e0       	ldi	r27, 0x04	; 4
    12d0:	3c d0       	rcall	.+120    	; 0x134a <__ultoa_invert+0x9c>
    12d2:	67 0f       	add	r22, r23
    12d4:	78 1f       	adc	r23, r24
    12d6:	89 1f       	adc	r24, r25
    12d8:	9a 1f       	adc	r25, r26
    12da:	a1 1d       	adc	r26, r1
    12dc:	68 0f       	add	r22, r24
    12de:	79 1f       	adc	r23, r25
    12e0:	8a 1f       	adc	r24, r26
    12e2:	91 1d       	adc	r25, r1
    12e4:	a1 1d       	adc	r26, r1
    12e6:	6a 0f       	add	r22, r26
    12e8:	71 1d       	adc	r23, r1
    12ea:	81 1d       	adc	r24, r1
    12ec:	91 1d       	adc	r25, r1
    12ee:	a1 1d       	adc	r26, r1
    12f0:	20 d0       	rcall	.+64     	; 0x1332 <__ultoa_invert+0x84>
    12f2:	09 f4       	brne	.+2      	; 0x12f6 <__ultoa_invert+0x48>
    12f4:	68 94       	set
    12f6:	3f 91       	pop	r19
    12f8:	2a e0       	ldi	r18, 0x0A	; 10
    12fa:	26 9f       	mul	r18, r22
    12fc:	11 24       	eor	r1, r1
    12fe:	30 19       	sub	r19, r0
    1300:	30 5d       	subi	r19, 0xD0	; 208
    1302:	31 93       	st	Z+, r19
    1304:	de f6       	brtc	.-74     	; 0x12bc <__ultoa_invert+0xe>
    1306:	cf 01       	movw	r24, r30
    1308:	08 95       	ret
    130a:	46 2f       	mov	r20, r22
    130c:	47 70       	andi	r20, 0x07	; 7
    130e:	40 5d       	subi	r20, 0xD0	; 208
    1310:	41 93       	st	Z+, r20
    1312:	b3 e0       	ldi	r27, 0x03	; 3
    1314:	0f d0       	rcall	.+30     	; 0x1334 <__ultoa_invert+0x86>
    1316:	c9 f7       	brne	.-14     	; 0x130a <__ultoa_invert+0x5c>
    1318:	f6 cf       	rjmp	.-20     	; 0x1306 <__ultoa_invert+0x58>
    131a:	46 2f       	mov	r20, r22
    131c:	4f 70       	andi	r20, 0x0F	; 15
    131e:	40 5d       	subi	r20, 0xD0	; 208
    1320:	4a 33       	cpi	r20, 0x3A	; 58
    1322:	18 f0       	brcs	.+6      	; 0x132a <__ultoa_invert+0x7c>
    1324:	49 5d       	subi	r20, 0xD9	; 217
    1326:	31 fd       	sbrc	r19, 1
    1328:	40 52       	subi	r20, 0x20	; 32
    132a:	41 93       	st	Z+, r20
    132c:	02 d0       	rcall	.+4      	; 0x1332 <__ultoa_invert+0x84>
    132e:	a9 f7       	brne	.-22     	; 0x131a <__ultoa_invert+0x6c>
    1330:	ea cf       	rjmp	.-44     	; 0x1306 <__ultoa_invert+0x58>
    1332:	b4 e0       	ldi	r27, 0x04	; 4
    1334:	a6 95       	lsr	r26
    1336:	97 95       	ror	r25
    1338:	87 95       	ror	r24
    133a:	77 95       	ror	r23
    133c:	67 95       	ror	r22
    133e:	ba 95       	dec	r27
    1340:	c9 f7       	brne	.-14     	; 0x1334 <__ultoa_invert+0x86>
    1342:	00 97       	sbiw	r24, 0x00	; 0
    1344:	61 05       	cpc	r22, r1
    1346:	71 05       	cpc	r23, r1
    1348:	08 95       	ret
    134a:	9b 01       	movw	r18, r22
    134c:	ac 01       	movw	r20, r24
    134e:	0a 2e       	mov	r0, r26
    1350:	06 94       	lsr	r0
    1352:	57 95       	ror	r21
    1354:	47 95       	ror	r20
    1356:	37 95       	ror	r19
    1358:	27 95       	ror	r18
    135a:	ba 95       	dec	r27
    135c:	c9 f7       	brne	.-14     	; 0x1350 <__ultoa_invert+0xa2>
    135e:	62 0f       	add	r22, r18
    1360:	73 1f       	adc	r23, r19
    1362:	84 1f       	adc	r24, r20
    1364:	95 1f       	adc	r25, r21
    1366:	a0 1d       	adc	r26, r0
    1368:	08 95       	ret

0000136a <_exit>:
    136a:	f8 94       	cli

0000136c <__stop_program>:
    136c:	ff cf       	rjmp	.-2      	; 0x136c <__stop_program>
