
UART_Lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000066  00804000  00001720  000017b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001720  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000058  00804066  00804066  0000181a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000181a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001878  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000018b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004060  00000000  00000000  00001958  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000320c  00000000  00000000  000059b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000905  00000000  00000000  00008bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  000094cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001af3  00000000  00000000  0000967c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007f2  00000000  00000000  0000b16f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000b961  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 80 00 	jmp	0x100	; 0x100 <__ctors_end>
       4:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
       8:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
       c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      10:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      14:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      18:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      1c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      20:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      24:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      28:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      2c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      30:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      34:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      38:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      3c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      40:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      44:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      48:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      4c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      50:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      54:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      58:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      5c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      60:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      64:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      68:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      6c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      70:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      74:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      78:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      7c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      80:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      84:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      88:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      8c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      90:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      94:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      98:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      9c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      a0:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      a4:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      a8:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      ac:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      b0:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      b4:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      b8:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      bc:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      c0:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      c4:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      c8:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      cc:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      d0:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      d4:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      d8:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      dc:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      e0:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      e4:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      e8:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      ec:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      f0:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>

000000f4 <__trampolines_end>:
      f4:	63 64       	ori	r22, 0x43	; 67
      f6:	69 6e       	ori	r22, 0xE9	; 233
      f8:	6f 70       	andi	r22, 0x0F	; 15
      fa:	73 75       	andi	r23, 0x53	; 83
      fc:	78 58       	subi	r23, 0x88	; 136
      fe:	5b 00       	.word	0x005b	; ????

00000100 <__ctors_end>:
     100:	11 24       	eor	r1, r1
     102:	1f be       	out	0x3f, r1	; 63
     104:	cf ef       	ldi	r28, 0xFF	; 255
     106:	cd bf       	out	0x3d, r28	; 61
     108:	df e7       	ldi	r29, 0x7F	; 127
     10a:	de bf       	out	0x3e, r29	; 62

0000010c <__do_copy_data>:
     10c:	10 e4       	ldi	r17, 0x40	; 64
     10e:	a0 e0       	ldi	r26, 0x00	; 0
     110:	b0 e4       	ldi	r27, 0x40	; 64
     112:	e0 e2       	ldi	r30, 0x20	; 32
     114:	f7 e1       	ldi	r31, 0x17	; 23
     116:	00 e0       	ldi	r16, 0x00	; 0
     118:	0b bf       	out	0x3b, r16	; 59
     11a:	02 c0       	rjmp	.+4      	; 0x120 <__do_copy_data+0x14>
     11c:	07 90       	elpm	r0, Z+
     11e:	0d 92       	st	X+, r0
     120:	a6 36       	cpi	r26, 0x66	; 102
     122:	b1 07       	cpc	r27, r17
     124:	d9 f7       	brne	.-10     	; 0x11c <__do_copy_data+0x10>

00000126 <__do_clear_bss>:
     126:	20 e4       	ldi	r18, 0x40	; 64
     128:	a6 e6       	ldi	r26, 0x66	; 102
     12a:	b0 e4       	ldi	r27, 0x40	; 64
     12c:	01 c0       	rjmp	.+2      	; 0x130 <.do_clear_bss_start>

0000012e <.do_clear_bss_loop>:
     12e:	1d 92       	st	X+, r1

00000130 <.do_clear_bss_start>:
     130:	ae 3b       	cpi	r26, 0xBE	; 190
     132:	b2 07       	cpc	r27, r18
     134:	e1 f7       	brne	.-8      	; 0x12e <.do_clear_bss_loop>
     136:	0e 94 a0 02 	call	0x540	; 0x540 <main>
     13a:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <_exit>

0000013e <__bad_interrupt>:
     13e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000142 <usart_init>:
#include "uart.h"

#define SMPL 16

void* usart_init(uint8_t usartnum, uint32_t baud_rate)
{
     142:	cf 93       	push	r28
     144:	df 93       	push	r29
    USART_t* usart;

    if (usartnum == 0) {
     146:	81 11       	cpse	r24, r1
     148:	06 c0       	rjmp	.+12     	; 0x156 <usart_init+0x14>
        usart = &USART0;
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__TEXT_REGION_LENGTH__+0x7e0401>
void* usart_init(uint8_t usartnum, uint32_t baud_rate)
{
    USART_t* usart;

    if (usartnum == 0) {
        usart = &USART0;
     150:	c0 e0       	ldi	r28, 0x00	; 0
     152:	d8 e0       	ldi	r29, 0x08	; 8
     154:	19 c0       	rjmp	.+50     	; 0x188 <usart_init+0x46>
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
    }
    else if (usartnum == 1) {
     156:	81 30       	cpi	r24, 0x01	; 1
     158:	29 f4       	brne	.+10     	; 0x164 <usart_init+0x22>
        usart = &USART1;
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
     15a:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <__TEXT_REGION_LENGTH__+0x7e0441>
        usart = &USART0;
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
    }
    else if (usartnum == 1) {
        usart = &USART1;
     15e:	c0 e2       	ldi	r28, 0x20	; 32
     160:	d8 e0       	ldi	r29, 0x08	; 8
     162:	12 c0       	rjmp	.+36     	; 0x188 <usart_init+0x46>
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
    }
    else if (usartnum == 2) {
     164:	82 30       	cpi	r24, 0x02	; 2
     166:	31 f4       	brne	.+12     	; 0x174 <usart_init+0x32>
        usart = &USART2;
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
     168:	81 e0       	ldi	r24, 0x01	; 1
     16a:	80 93 a1 04 	sts	0x04A1, r24	; 0x8004a1 <__TEXT_REGION_LENGTH__+0x7e04a1>
        usart = &USART1;
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
    }
    else if (usartnum == 2) {
        usart = &USART2;
     16e:	c0 e4       	ldi	r28, 0x40	; 64
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	0a c0       	rjmp	.+20     	; 0x188 <usart_init+0x46>
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
    }
    else if (usartnum == 3) {
     174:	83 30       	cpi	r24, 0x03	; 3
     176:	31 f4       	brne	.+12     	; 0x184 <usart_init+0x42>
        usart = &USART3;
        // enable USART3 TX pin
        PORTB.DIRSET = PIN0_bm;
     178:	81 e0       	ldi	r24, 0x01	; 1
     17a:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <__TEXT_REGION_LENGTH__+0x7e0421>
        usart = &USART2;
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
    }
    else if (usartnum == 3) {
        usart = &USART3;
     17e:	c0 e6       	ldi	r28, 0x60	; 96
     180:	d8 e0       	ldi	r29, 0x08	; 8
     182:	02 c0       	rjmp	.+4      	; 0x188 <usart_init+0x46>
        // enable USART3 TX pin
        PORTB.DIRSET = PIN0_bm;
    } 
    else {
        usart = NULL;
     184:	c0 e0       	ldi	r28, 0x00	; 0
     186:	d0 e0       	ldi	r29, 0x00	; 0
    }

    // set BAUD and CTRLB registers
	// make sure to cast the BAUD to uint16_t before assigning
	usart->BAUD = (uint16_t)( (64 * F_CPU) / (SMPL * baud_rate) );
     188:	db 01       	movw	r26, r22
     18a:	ca 01       	movw	r24, r20
     18c:	88 0f       	add	r24, r24
     18e:	99 1f       	adc	r25, r25
     190:	aa 1f       	adc	r26, r26
     192:	bb 1f       	adc	r27, r27
     194:	88 0f       	add	r24, r24
     196:	99 1f       	adc	r25, r25
     198:	aa 1f       	adc	r26, r26
     19a:	bb 1f       	adc	r27, r27
     19c:	9c 01       	movw	r18, r24
     19e:	ad 01       	movw	r20, r26
     1a0:	22 0f       	add	r18, r18
     1a2:	33 1f       	adc	r19, r19
     1a4:	44 1f       	adc	r20, r20
     1a6:	55 1f       	adc	r21, r21
     1a8:	22 0f       	add	r18, r18
     1aa:	33 1f       	adc	r19, r19
     1ac:	44 1f       	adc	r20, r20
     1ae:	55 1f       	adc	r21, r21
     1b0:	60 e0       	ldi	r22, 0x00	; 0
     1b2:	70 e0       	ldi	r23, 0x00	; 0
     1b4:	89 e0       	ldi	r24, 0x09	; 9
     1b6:	9d e3       	ldi	r25, 0x3D	; 61
     1b8:	0e 94 be 04 	call	0x97c	; 0x97c <__udivmodsi4>
     1bc:	28 87       	std	Y+8, r18	; 0x08
     1be:	39 87       	std	Y+9, r19	; 0x09
	usart->CTRLB |= USART_RXEN_bm | USART_TXEN_bm;
     1c0:	8e 81       	ldd	r24, Y+6	; 0x06
     1c2:	80 6c       	ori	r24, 0xC0	; 192
     1c4:	8e 83       	std	Y+6, r24	; 0x06
    return usart;
}
     1c6:	ce 01       	movw	r24, r28
     1c8:	df 91       	pop	r29
     1ca:	cf 91       	pop	r28
     1cc:	08 95       	ret

000001ce <usart_transmit_data>:

void usart_transmit_data(void* ptr, char c)
{
    USART_t* usart = (USART_t*)ptr;
    // TODO send data
	usart->TXDATAL = c;
     1ce:	fc 01       	movw	r30, r24
     1d0:	62 83       	std	Z+2, r22	; 0x02
     1d2:	08 95       	ret

000001d4 <usart_wait_until_transmit_ready>:
}

void usart_wait_until_transmit_ready(void *ptr)
{
     1d4:	fc 01       	movw	r30, r24
    USART_t* usart = (USART_t*)ptr;
    // TODO wait until UART is ready to transmit
	while ( !(usart->STATUS & USART_DREIF_bm) );
     1d6:	94 81       	ldd	r25, Z+4	; 0x04
     1d8:	95 ff       	sbrs	r25, 5
     1da:	fd cf       	rjmp	.-6      	; 0x1d6 <usart_wait_until_transmit_ready+0x2>
}
     1dc:	08 95       	ret

000001de <usart_receive_data>:

int usart_receive_data(void* ptr)
{
     1de:	fc 01       	movw	r30, r24
    USART_t* usart = (USART_t*)ptr;
    // TODO wait until data has arrived and then return the data
	while ( !(usart->STATUS & USART_RXCIF_bm) );
     1e0:	94 81       	ldd	r25, Z+4	; 0x04
     1e2:	99 23       	and	r25, r25
     1e4:	ec f7       	brge	.-6      	; 0x1e0 <usart_receive_data+0x2>
	return (usart->RXDATAL);
     1e6:	80 81       	ld	r24, Z
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	08 95       	ret

000001ec <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     1ec:	0f 93       	push	r16
     1ee:	1f 93       	push	r17
     1f0:	cf 93       	push	r28
     1f2:	c8 2f       	mov	r28, r24
     1f4:	8b 01       	movw	r16, r22
	if (c == '\a') {
     1f6:	87 30       	cpi	r24, 0x07	; 7
     1f8:	69 f4       	brne	.+26     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
		fputs("*ring*\n", stderr);
     1fa:	20 91 bc 40 	lds	r18, 0x40BC	; 0x8040bc <__iob+0x4>
     1fe:	30 91 bd 40 	lds	r19, 0x40BD	; 0x8040bd <__iob+0x5>
     202:	47 e0       	ldi	r20, 0x07	; 7
     204:	50 e0       	ldi	r21, 0x00	; 0
     206:	61 e0       	ldi	r22, 0x01	; 1
     208:	70 e0       	ldi	r23, 0x00	; 0
     20a:	8e e0       	ldi	r24, 0x0E	; 14
     20c:	90 e4       	ldi	r25, 0x40	; 64
     20e:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <fwrite>
		return 0;
     212:	0f c0       	rjmp	.+30     	; 0x232 <__EEPROM_REGION_LENGTH__+0x32>
	}

	if (c == '\n') {
     214:	8a 30       	cpi	r24, 0x0A	; 10
     216:	19 f4       	brne	.+6      	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
		uart_putchar('\r', stream);
     218:	8d e0       	ldi	r24, 0x0D	; 13
     21a:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
	}

	void* usart = fdev_get_udata(stream);
     21e:	f8 01       	movw	r30, r16
     220:	04 85       	ldd	r16, Z+12	; 0x0c
     222:	15 85       	ldd	r17, Z+13	; 0x0d
	usart_wait_until_transmit_ready(usart);
     224:	c8 01       	movw	r24, r16
     226:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <usart_wait_until_transmit_ready>
	usart_transmit_data(usart, c);
     22a:	6c 2f       	mov	r22, r28
     22c:	c8 01       	movw	r24, r16
     22e:	0e 94 e7 00 	call	0x1ce	; 0x1ce <usart_transmit_data>

	return 0;
}
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	cf 91       	pop	r28
     238:	1f 91       	pop	r17
     23a:	0f 91       	pop	r16
     23c:	08 95       	ret

0000023e <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     23e:	ef 92       	push	r14
     240:	ff 92       	push	r15
     242:	0f 93       	push	r16
     244:	1f 93       	push	r17
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
	uint8_t c;
	char *cp, *cp2;
	static char b[RX_BUFSIZE];
	static char *rxp;

	if (rxp == 0) {
     24a:	20 91 b6 40 	lds	r18, 0x40B6	; 0x8040b6 <rxp.1995>
     24e:	30 91 b7 40 	lds	r19, 0x40B7	; 0x8040b7 <rxp.1995+0x1>
     252:	23 2b       	or	r18, r19
     254:	09 f0       	breq	.+2      	; 0x258 <uart_getchar+0x1a>
     256:	9a c0       	rjmp	.+308    	; 0x38c <uart_getchar+0x14e>
     258:	8c 01       	movw	r16, r24
     25a:	c6 e6       	ldi	r28, 0x66	; 102
     25c:	d0 e4       	ldi	r29, 0x40	; 64
		for (cp = b;;) {
			void* usart = fdev_get_udata(stream);
			c = usart_receive_data(usart);
     25e:	f8 01       	movw	r30, r16
     260:	84 85       	ldd	r24, Z+12	; 0x0c
     262:	95 85       	ldd	r25, Z+13	; 0x0d
     264:	0e 94 ef 00 	call	0x1de	; 0x1de <usart_receive_data>

			/* behaviour similar to Unix stty ICRNL */
			if (c == '\r')
     268:	8d 30       	cpi	r24, 0x0D	; 13
     26a:	09 f4       	brne	.+2      	; 0x26e <uart_getchar+0x30>
				c = '\n';
     26c:	8a e0       	ldi	r24, 0x0A	; 10
			if (c == '\n') {
     26e:	8a 30       	cpi	r24, 0x0A	; 10
     270:	59 f4       	brne	.+22     	; 0x288 <uart_getchar+0x4a>
			    *cp = c;
     272:	88 83       	st	Y, r24
				uart_putchar(c, stream);
     274:	b8 01       	movw	r22, r16
     276:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
			    rxp = b;
     27a:	86 e6       	ldi	r24, 0x66	; 102
     27c:	90 e4       	ldi	r25, 0x40	; 64
     27e:	80 93 b6 40 	sts	0x40B6, r24	; 0x8040b6 <rxp.1995>
     282:	90 93 b7 40 	sts	0x40B7, r25	; 0x8040b7 <rxp.1995+0x1>
				break;
     286:	82 c0       	rjmp	.+260    	; 0x38c <uart_getchar+0x14e>
			}
			else if (c == '\t')
     288:	89 30       	cpi	r24, 0x09	; 9
     28a:	09 f4       	brne	.+2      	; 0x28e <uart_getchar+0x50>
				c = ' ';
     28c:	80 e2       	ldi	r24, 0x20	; 32

			if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     28e:	90 ee       	ldi	r25, 0xE0	; 224
     290:	98 0f       	add	r25, r24
     292:	9f 35       	cpi	r25, 0x5F	; 95
     294:	10 f0       	brcs	.+4      	; 0x29a <uart_getchar+0x5c>
     296:	80 3a       	cpi	r24, 0xA0	; 160
     298:	98 f0       	brcs	.+38     	; 0x2c0 <uart_getchar+0x82>
				c >= (uint8_t)'\xa0') {
			    if (cp == b + RX_BUFSIZE - 1)
     29a:	f0 e4       	ldi	r31, 0x40	; 64
     29c:	c5 3b       	cpi	r28, 0xB5	; 181
     29e:	df 07       	cpc	r29, r31
     2a0:	29 f4       	brne	.+10     	; 0x2ac <uart_getchar+0x6e>
					uart_putchar('\a', stream);
     2a2:	b8 01       	movw	r22, r16
     2a4:	87 e0       	ldi	r24, 0x07	; 7
     2a6:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
     2aa:	d9 cf       	rjmp	.-78     	; 0x25e <uart_getchar+0x20>
				else {
					*cp++ = c;
     2ac:	7e 01       	movw	r14, r28
     2ae:	9f ef       	ldi	r25, 0xFF	; 255
     2b0:	e9 1a       	sub	r14, r25
     2b2:	f9 0a       	sbc	r15, r25
     2b4:	88 83       	st	Y, r24
					uart_putchar(c, stream);
     2b6:	b8 01       	movw	r22, r16
     2b8:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
			if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
				c >= (uint8_t)'\xa0') {
			    if (cp == b + RX_BUFSIZE - 1)
					uart_putchar('\a', stream);
				else {
					*cp++ = c;
     2bc:	e7 01       	movw	r28, r14
					uart_putchar(c, stream);
				}
			    continue;
     2be:	cf cf       	rjmp	.-98     	; 0x25e <uart_getchar+0x20>
			}

			switch (c) {
     2c0:	82 31       	cpi	r24, 0x12	; 18
     2c2:	19 f1       	breq	.+70     	; 0x30a <uart_getchar+0xcc>
     2c4:	30 f4       	brcc	.+12     	; 0x2d2 <uart_getchar+0x94>
     2c6:	83 30       	cpi	r24, 0x03	; 3
     2c8:	09 f4       	brne	.+2      	; 0x2cc <uart_getchar+0x8e>
     2ca:	73 c0       	rjmp	.+230    	; 0x3b2 <uart_getchar+0x174>
     2cc:	88 30       	cpi	r24, 0x08	; 8
     2ce:	49 f0       	breq	.+18     	; 0x2e2 <uart_getchar+0xa4>
     2d0:	c6 cf       	rjmp	.-116    	; 0x25e <uart_getchar+0x20>
     2d2:	87 31       	cpi	r24, 0x17	; 23
     2d4:	09 f4       	brne	.+2      	; 0x2d8 <uart_getchar+0x9a>
     2d6:	4e c0       	rjmp	.+156    	; 0x374 <uart_getchar+0x136>
     2d8:	8f 37       	cpi	r24, 0x7F	; 127
     2da:	19 f0       	breq	.+6      	; 0x2e2 <uart_getchar+0xa4>
     2dc:	85 31       	cpi	r24, 0x15	; 21
     2de:	b9 f1       	breq	.+110    	; 0x34e <uart_getchar+0x110>
     2e0:	be cf       	rjmp	.-132    	; 0x25e <uart_getchar+0x20>
				case 'c' & 0x1f:
				    return -1;

				case '\b':
				case '\x7f':
				    if (cp > b) {
     2e2:	e0 e4       	ldi	r30, 0x40	; 64
     2e4:	c6 36       	cpi	r28, 0x66	; 102
     2e6:	de 07       	cpc	r29, r30
     2e8:	09 f0       	breq	.+2      	; 0x2ec <uart_getchar+0xae>
     2ea:	08 f4       	brcc	.+2      	; 0x2ee <uart_getchar+0xb0>
     2ec:	b8 cf       	rjmp	.-144    	; 0x25e <uart_getchar+0x20>
						uart_putchar('\b', stream);
     2ee:	b8 01       	movw	r22, r16
     2f0:	88 e0       	ldi	r24, 0x08	; 8
     2f2:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						uart_putchar(' ', stream);
     2f6:	b8 01       	movw	r22, r16
     2f8:	80 e2       	ldi	r24, 0x20	; 32
     2fa:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						uart_putchar('\b', stream);
     2fe:	b8 01       	movw	r22, r16
     300:	88 e0       	ldi	r24, 0x08	; 8
     302:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						cp--;
     306:	21 97       	sbiw	r28, 0x01	; 1
     308:	aa cf       	rjmp	.-172    	; 0x25e <uart_getchar+0x20>
					}
					break;

				case 'r' & 0x1f:
					uart_putchar('\r', stream);
     30a:	b8 01       	movw	r22, r16
     30c:	8d e0       	ldi	r24, 0x0D	; 13
     30e:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
					for (cp2 = b; cp2 < cp; cp2++)
     312:	0f 2e       	mov	r0, r31
     314:	f6 e6       	ldi	r31, 0x66	; 102
     316:	ef 2e       	mov	r14, r31
     318:	f0 e4       	ldi	r31, 0x40	; 64
     31a:	ff 2e       	mov	r15, r31
     31c:	f0 2d       	mov	r31, r0
     31e:	06 c0       	rjmp	.+12     	; 0x32c <uart_getchar+0xee>
						uart_putchar(*cp2, stream);
     320:	b8 01       	movw	r22, r16
     322:	f7 01       	movw	r30, r14
     324:	81 91       	ld	r24, Z+
     326:	7f 01       	movw	r14, r30
     328:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
					}
					break;

				case 'r' & 0x1f:
					uart_putchar('\r', stream);
					for (cp2 = b; cp2 < cp; cp2++)
     32c:	ec 16       	cp	r14, r28
     32e:	fd 06       	cpc	r15, r29
     330:	b8 f3       	brcs	.-18     	; 0x320 <uart_getchar+0xe2>
     332:	95 cf       	rjmp	.-214    	; 0x25e <uart_getchar+0x20>
						uart_putchar(*cp2, stream);
					break;

				case 'u' & 0x1f:
					while (cp > b) {
						uart_putchar('\b', stream);
     334:	b8 01       	movw	r22, r16
     336:	88 e0       	ldi	r24, 0x08	; 8
     338:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						uart_putchar(' ', stream);
     33c:	b8 01       	movw	r22, r16
     33e:	80 e2       	ldi	r24, 0x20	; 32
     340:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						uart_putchar('\b', stream);
     344:	b8 01       	movw	r22, r16
     346:	88 e0       	ldi	r24, 0x08	; 8
     348:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						cp--;
     34c:	21 97       	sbiw	r28, 0x01	; 1
					for (cp2 = b; cp2 < cp; cp2++)
						uart_putchar(*cp2, stream);
					break;

				case 'u' & 0x1f:
					while (cp > b) {
     34e:	f0 e4       	ldi	r31, 0x40	; 64
     350:	c6 36       	cpi	r28, 0x66	; 102
     352:	df 07       	cpc	r29, r31
     354:	09 f0       	breq	.+2      	; 0x358 <uart_getchar+0x11a>
     356:	70 f7       	brcc	.-36     	; 0x334 <uart_getchar+0xf6>
     358:	82 cf       	rjmp	.-252    	; 0x25e <uart_getchar+0x20>
					}
					break;

				case 'w' & 0x1f:
					while (cp > b && cp[-1] != ' ') {
						uart_putchar('\b', stream);
     35a:	b8 01       	movw	r22, r16
     35c:	88 e0       	ldi	r24, 0x08	; 8
     35e:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						uart_putchar(' ', stream);
     362:	b8 01       	movw	r22, r16
     364:	80 e2       	ldi	r24, 0x20	; 32
     366:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						uart_putchar('\b', stream);
     36a:	b8 01       	movw	r22, r16
     36c:	88 e0       	ldi	r24, 0x08	; 8
     36e:	0e 94 f6 00 	call	0x1ec	; 0x1ec <uart_putchar>
						cp--;
     372:	21 97       	sbiw	r28, 0x01	; 1
						cp--;
					}
					break;

				case 'w' & 0x1f:
					while (cp > b && cp[-1] != ' ') {
     374:	80 e4       	ldi	r24, 0x40	; 64
     376:	c6 36       	cpi	r28, 0x66	; 102
     378:	d8 07       	cpc	r29, r24
     37a:	09 f0       	breq	.+2      	; 0x37e <uart_getchar+0x140>
     37c:	08 f4       	brcc	.+2      	; 0x380 <uart_getchar+0x142>
     37e:	6f cf       	rjmp	.-290    	; 0x25e <uart_getchar+0x20>
     380:	fe 01       	movw	r30, r28
     382:	31 97       	sbiw	r30, 0x01	; 1
     384:	80 81       	ld	r24, Z
     386:	80 32       	cpi	r24, 0x20	; 32
     388:	41 f7       	brne	.-48     	; 0x35a <uart_getchar+0x11c>
     38a:	69 cf       	rjmp	.-302    	; 0x25e <uart_getchar+0x20>
					break;
			}
		}
	}

	c = *rxp++;
     38c:	e0 91 b6 40 	lds	r30, 0x40B6	; 0x8040b6 <rxp.1995>
     390:	f0 91 b7 40 	lds	r31, 0x40B7	; 0x8040b7 <rxp.1995+0x1>
     394:	cf 01       	movw	r24, r30
     396:	01 96       	adiw	r24, 0x01	; 1
     398:	80 93 b6 40 	sts	0x40B6, r24	; 0x8040b6 <rxp.1995>
     39c:	90 93 b7 40 	sts	0x40B7, r25	; 0x8040b7 <rxp.1995+0x1>
     3a0:	80 81       	ld	r24, Z
	if (c == '\n')
     3a2:	8a 30       	cpi	r24, 0x0A	; 10
     3a4:	21 f4       	brne	.+8      	; 0x3ae <uart_getchar+0x170>
		rxp = 0;
     3a6:	10 92 b6 40 	sts	0x40B6, r1	; 0x8040b6 <rxp.1995>
     3aa:	10 92 b7 40 	sts	0x40B7, r1	; 0x8040b7 <rxp.1995+0x1>

	return c;
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <uart_getchar+0x178>
			    continue;
			}

			switch (c) {
				case 'c' & 0x1f:
				    return -1;
     3b2:	8f ef       	ldi	r24, 0xFF	; 255
     3b4:	9f ef       	ldi	r25, 0xFF	; 255
	c = *rxp++;
	if (c == '\n')
		rxp = 0;

	return c;
}
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	ff 90       	pop	r15
     3c0:	ef 90       	pop	r14
     3c2:	08 95       	ret

000003c4 <uart_init>:
/*
 * Initialize the UART to 9600 Bd, tx/rx, 8N1.
 */
FILE*
uart_init(uint8_t usartnum, uint32_t baud_rate, FILE* stream)
{
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	e9 01       	movw	r28, r18
	if (stream) {
     3ca:	20 97       	sbiw	r28, 0x00	; 0
     3cc:	49 f0       	breq	.+18     	; 0x3e0 <uart_init+0x1c>
		*stream = uartFile;
     3ce:	9e e0       	ldi	r25, 0x0E	; 14
     3d0:	e0 e0       	ldi	r30, 0x00	; 0
     3d2:	f0 e4       	ldi	r31, 0x40	; 64
     3d4:	d9 01       	movw	r26, r18
     3d6:	01 90       	ld	r0, Z+
     3d8:	0d 92       	st	X+, r0
     3da:	9a 95       	dec	r25
     3dc:	e1 f7       	brne	.-8      	; 0x3d6 <uart_init+0x12>
     3de:	0b c0       	rjmp	.+22     	; 0x3f6 <uart_init+0x32>
	} else {
		stdout = &uartFile;
     3e0:	e8 eb       	ldi	r30, 0xB8	; 184
     3e2:	f0 e4       	ldi	r31, 0x40	; 64
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	30 e4       	ldi	r19, 0x40	; 64
     3e8:	22 83       	std	Z+2, r18	; 0x02
     3ea:	33 83       	std	Z+3, r19	; 0x03
		stdin = &uartFile;
     3ec:	20 83       	st	Z, r18
     3ee:	31 83       	std	Z+1, r19	; 0x01
		stderr = &uartFile;
     3f0:	24 83       	std	Z+4, r18	; 0x04
     3f2:	35 83       	std	Z+5, r19	; 0x05
		stream = &uartFile;
     3f4:	e9 01       	movw	r28, r18
	}

	void* usart = usart_init(usartnum, baud_rate);
     3f6:	0e 94 a1 00 	call	0x142	; 0x142 <usart_init>
	fdev_set_udata(stream, usart);
     3fa:	8c 87       	std	Y+12, r24	; 0x0c
     3fc:	9d 87       	std	Y+13, r25	; 0x0d
	  
	return stream;
}
     3fe:	ce 01       	movw	r24, r28
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	08 95       	ret

00000406 <init_clock>:

#define F_CPU 16000000UL
void init_clock() {
	// make sure to configure the clock with init function
	// setup appropriate registers when F_CPU 16MHz
	CPU_CCP = CCP_IOREG_gc;
     406:	88 ed       	ldi	r24, 0xD8	; 216
     408:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.OSCHFCTRLA = CLKCTRL_FRQSEL_16M_gc;
     40a:	8c e1       	ldi	r24, 0x1C	; 28
     40c:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
     410:	08 95       	ret

00000412 <delay>:

#include <util/delay.h>
// AVR128DB48 at COM5


void delay(double time_ms) {
     412:	cf 92       	push	r12
     414:	df 92       	push	r13
     416:	ef 92       	push	r14
     418:	ff 92       	push	r15
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	6b 01       	movw	r12, r22
     420:	7c 01       	movw	r14, r24
	// delay function to accept arbitrary times
	for (int i = 0; i < time_ms; i++) {
     422:	c0 e0       	ldi	r28, 0x00	; 0
     424:	d0 e0       	ldi	r29, 0x00	; 0
     426:	07 c0       	rjmp	.+14     	; 0x436 <delay+0x24>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     428:	8f e9       	ldi	r24, 0x9F	; 159
     42a:	9f e0       	ldi	r25, 0x0F	; 15
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	f1 f7       	brne	.-4      	; 0x42c <delay+0x1a>
     430:	00 c0       	rjmp	.+0      	; 0x432 <delay+0x20>
     432:	00 00       	nop
     434:	21 96       	adiw	r28, 0x01	; 1
     436:	be 01       	movw	r22, r28
     438:	0d 2e       	mov	r0, r29
     43a:	00 0c       	add	r0, r0
     43c:	88 0b       	sbc	r24, r24
     43e:	99 0b       	sbc	r25, r25
     440:	0e 94 8d 03 	call	0x71a	; 0x71a <__floatsisf>
     444:	a7 01       	movw	r20, r14
     446:	96 01       	movw	r18, r12
     448:	0e 94 14 03 	call	0x628	; 0x628 <__cmpsf2>
     44c:	88 23       	and	r24, r24
     44e:	64 f3       	brlt	.-40     	; 0x428 <delay+0x16>
		_delay_ms(1);
	}
}
     450:	df 91       	pop	r29
     452:	cf 91       	pop	r28
     454:	ff 90       	pop	r15
     456:	ef 90       	pop	r14
     458:	df 90       	pop	r13
     45a:	cf 90       	pop	r12
     45c:	08 95       	ret

0000045e <blink_cycle>:

void blink_cycle(char pin, char freq) {
     45e:	4f 92       	push	r4
     460:	5f 92       	push	r5
     462:	6f 92       	push	r6
     464:	7f 92       	push	r7
     466:	8f 92       	push	r8
     468:	9f 92       	push	r9
     46a:	af 92       	push	r10
     46c:	bf 92       	push	r11
     46e:	df 92       	push	r13
     470:	ef 92       	push	r14
     472:	ff 92       	push	r15
     474:	0f 93       	push	r16
     476:	1f 93       	push	r17
     478:	cf 93       	push	r28
     47a:	df 93       	push	r29
     47c:	d8 2e       	mov	r13, r24
	double period_ms = 1000 / freq;
     47e:	70 e0       	ldi	r23, 0x00	; 0
     480:	88 ee       	ldi	r24, 0xE8	; 232
     482:	93 e0       	ldi	r25, 0x03	; 3
     484:	0e 94 aa 04 	call	0x954	; 0x954 <__divmodhi4>
     488:	07 2e       	mov	r0, r23
     48a:	00 0c       	add	r0, r0
     48c:	88 0b       	sbc	r24, r24
     48e:	99 0b       	sbc	r25, r25
     490:	0e 94 8d 03 	call	0x71a	; 0x71a <__floatsisf>
     494:	2b 01       	movw	r4, r22
     496:	3c 01       	movw	r6, r24
	for (int i = 0; i < 5000 / period_ms; i++) {
     498:	e1 2c       	mov	r14, r1
     49a:	f1 2c       	mov	r15, r1
     49c:	27 c0       	rjmp	.+78     	; 0x4ec <blink_cycle+0x8e>
		PORTD.OUT |= (1 << pin);
     49e:	00 e6       	ldi	r16, 0x60	; 96
     4a0:	14 e0       	ldi	r17, 0x04	; 4
     4a2:	f8 01       	movw	r30, r16
     4a4:	84 81       	ldd	r24, Z+4	; 0x04
     4a6:	c1 e0       	ldi	r28, 0x01	; 1
     4a8:	d0 e0       	ldi	r29, 0x00	; 0
     4aa:	0d 2c       	mov	r0, r13
     4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <blink_cycle+0x54>
     4ae:	cc 0f       	add	r28, r28
     4b0:	dd 1f       	adc	r29, r29
     4b2:	0a 94       	dec	r0
     4b4:	e2 f7       	brpl	.-8      	; 0x4ae <blink_cycle+0x50>
     4b6:	8c 2b       	or	r24, r28
     4b8:	f8 01       	movw	r30, r16
     4ba:	84 83       	std	Z+4, r24	; 0x04
		delay(period_ms/2);
     4bc:	20 e0       	ldi	r18, 0x00	; 0
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	40 e0       	ldi	r20, 0x00	; 0
     4c2:	5f e3       	ldi	r21, 0x3F	; 63
     4c4:	c3 01       	movw	r24, r6
     4c6:	b2 01       	movw	r22, r4
     4c8:	0e 94 3d 04 	call	0x87a	; 0x87a <__mulsf3>
     4cc:	4b 01       	movw	r8, r22
     4ce:	5c 01       	movw	r10, r24
     4d0:	0e 94 09 02 	call	0x412	; 0x412 <delay>
		PORTD.OUT &= ~(1 << pin);
     4d4:	f8 01       	movw	r30, r16
     4d6:	84 81       	ldd	r24, Z+4	; 0x04
     4d8:	c0 95       	com	r28
     4da:	c8 23       	and	r28, r24
     4dc:	c4 83       	std	Z+4, r28	; 0x04
		delay(period_ms/2);
     4de:	c5 01       	movw	r24, r10
     4e0:	b4 01       	movw	r22, r8
     4e2:	0e 94 09 02 	call	0x412	; 0x412 <delay>
	}
}

void blink_cycle(char pin, char freq) {
	double period_ms = 1000 / freq;
	for (int i = 0; i < 5000 / period_ms; i++) {
     4e6:	ff ef       	ldi	r31, 0xFF	; 255
     4e8:	ef 1a       	sub	r14, r31
     4ea:	ff 0a       	sbc	r15, r31
     4ec:	b7 01       	movw	r22, r14
     4ee:	0f 2c       	mov	r0, r15
     4f0:	00 0c       	add	r0, r0
     4f2:	88 0b       	sbc	r24, r24
     4f4:	99 0b       	sbc	r25, r25
     4f6:	0e 94 8d 03 	call	0x71a	; 0x71a <__floatsisf>
     4fa:	4b 01       	movw	r8, r22
     4fc:	5c 01       	movw	r10, r24
     4fe:	a3 01       	movw	r20, r6
     500:	92 01       	movw	r18, r4
     502:	60 e0       	ldi	r22, 0x00	; 0
     504:	70 e4       	ldi	r23, 0x40	; 64
     506:	8c e9       	ldi	r24, 0x9C	; 156
     508:	95 e4       	ldi	r25, 0x45	; 69
     50a:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
     50e:	9b 01       	movw	r18, r22
     510:	ac 01       	movw	r20, r24
     512:	c5 01       	movw	r24, r10
     514:	b4 01       	movw	r22, r8
     516:	0e 94 14 03 	call	0x628	; 0x628 <__cmpsf2>
     51a:	88 23       	and	r24, r24
     51c:	0c f4       	brge	.+2      	; 0x520 <blink_cycle+0xc2>
     51e:	bf cf       	rjmp	.-130    	; 0x49e <blink_cycle+0x40>
		PORTD.OUT |= (1 << pin);
		delay(period_ms/2);
		PORTD.OUT &= ~(1 << pin);
		delay(period_ms/2);
	}
}
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	1f 91       	pop	r17
     526:	0f 91       	pop	r16
     528:	ff 90       	pop	r15
     52a:	ef 90       	pop	r14
     52c:	df 90       	pop	r13
     52e:	bf 90       	pop	r11
     530:	af 90       	pop	r10
     532:	9f 90       	pop	r9
     534:	8f 90       	pop	r8
     536:	7f 90       	pop	r7
     538:	6f 90       	pop	r6
     53a:	5f 90       	pop	r5
     53c:	4f 90       	pop	r4
     53e:	08 95       	ret

00000540 <main>:


int main(void)
{
     540:	cf 93       	push	r28
     542:	df 93       	push	r29
     544:	cd b7       	in	r28, 0x3d	; 61
     546:	de b7       	in	r29, 0x3e	; 62
     548:	66 97       	sbiw	r28, 0x16	; 22
     54a:	cd bf       	out	0x3d, r28	; 61
     54c:	de bf       	out	0x3e, r29	; 62
	init_clock();
     54e:	0e 94 03 02 	call	0x406	; 0x406 <init_clock>
	uart_init(3, 9600, NULL);
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	40 e8       	ldi	r20, 0x80	; 128
     558:	55 e2       	ldi	r21, 0x25	; 37
     55a:	60 e0       	ldi	r22, 0x00	; 0
     55c:	70 e0       	ldi	r23, 0x00	; 0
     55e:	83 e0       	ldi	r24, 0x03	; 3
     560:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <uart_init>
	
	PORTD.DIR = 0xff;
     564:	e0 e6       	ldi	r30, 0x60	; 96
     566:	f4 e0       	ldi	r31, 0x04	; 4
     568:	8f ef       	ldi	r24, 0xFF	; 255
     56a:	80 83       	st	Z, r24
	PORTD.OUT = 0x00;
     56c:	14 82       	std	Z+4, r1	; 0x04
	
	char input[20];
	int value;
	
	char curr_freq = 2;
	char pos = 2;
     56e:	02 e0       	ldi	r16, 0x02	; 2
	PORTD.OUT = 0x00;
	
	char input[20];
	int value;
	
	char curr_freq = 2;
     570:	12 e0       	ldi	r17, 0x02	; 2
	char pos = 2;
	
    while (1) 
    {
		blink_cycle(pos, curr_freq);
     572:	61 2f       	mov	r22, r17
     574:	80 2f       	mov	r24, r16
     576:	0e 94 2f 02 	call	0x45e	; 0x45e <blink_cycle>
     57a:	2f ef       	ldi	r18, 0xFF	; 255
     57c:	81 ee       	ldi	r24, 0xE1	; 225
     57e:	94 e0       	ldi	r25, 0x04	; 4
     580:	21 50       	subi	r18, 0x01	; 1
     582:	80 40       	sbci	r24, 0x00	; 0
     584:	90 40       	sbci	r25, 0x00	; 0
     586:	e1 f7       	brne	.-8      	; 0x580 <main+0x40>
     588:	00 c0       	rjmp	.+0      	; 0x58a <main+0x4a>
     58a:	00 00       	nop
		_delay_ms(100);
		printf("Do you want to change frequency or position? (F/P)\n");
     58c:	86 e1       	ldi	r24, 0x16	; 22
     58e:	90 e4       	ldi	r25, 0x40	; 64
     590:	0e 94 4a 05 	call	0xa94	; 0xa94 <puts>
		while( scanf("%s", input) < 0 );
     594:	ce 01       	movw	r24, r28
     596:	01 96       	adiw	r24, 0x01	; 1
     598:	9f 93       	push	r25
     59a:	8f 93       	push	r24
     59c:	89 e4       	ldi	r24, 0x49	; 73
     59e:	90 e4       	ldi	r25, 0x40	; 64
     5a0:	9f 93       	push	r25
     5a2:	8f 93       	push	r24
     5a4:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <scanf>
     5a8:	0f 90       	pop	r0
     5aa:	0f 90       	pop	r0
     5ac:	0f 90       	pop	r0
     5ae:	0f 90       	pop	r0
     5b0:	99 23       	and	r25, r25
     5b2:	84 f3       	brlt	.-32     	; 0x594 <main+0x54>
		
		if (input[0] == 'f') {
     5b4:	89 81       	ldd	r24, Y+1	; 0x01
     5b6:	86 36       	cpi	r24, 0x66	; 102
     5b8:	d1 f4       	brne	.+52     	; 0x5ee <main+0xae>
			// change frequency
			printf("Frequency: ");
     5ba:	8c e4       	ldi	r24, 0x4C	; 76
     5bc:	90 e4       	ldi	r25, 0x40	; 64
     5be:	9f 93       	push	r25
     5c0:	8f 93       	push	r24
     5c2:	0e 94 36 05 	call	0xa6c	; 0xa6c <printf>
			while( scanf("%d", &value) < 0 );
     5c6:	0f 90       	pop	r0
     5c8:	0f 90       	pop	r0
     5ca:	ce 01       	movw	r24, r28
     5cc:	45 96       	adiw	r24, 0x15	; 21
     5ce:	9f 93       	push	r25
     5d0:	8f 93       	push	r24
     5d2:	88 e5       	ldi	r24, 0x58	; 88
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	9f 93       	push	r25
     5d8:	8f 93       	push	r24
     5da:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <scanf>
     5de:	0f 90       	pop	r0
     5e0:	0f 90       	pop	r0
     5e2:	0f 90       	pop	r0
     5e4:	0f 90       	pop	r0
     5e6:	99 23       	and	r25, r25
     5e8:	84 f3       	brlt	.-32     	; 0x5ca <main+0x8a>
			curr_freq = (char)value;
     5ea:	1d 89       	ldd	r17, Y+21	; 0x15
     5ec:	c2 cf       	rjmp	.-124    	; 0x572 <main+0x32>
			// printf('\n');
		} else if (input[0] == 'p') {
     5ee:	80 37       	cpi	r24, 0x70	; 112
     5f0:	09 f0       	breq	.+2      	; 0x5f4 <main+0xb4>
     5f2:	bf cf       	rjmp	.-130    	; 0x572 <main+0x32>
			// change position
			printf("Position: ");
     5f4:	8b e5       	ldi	r24, 0x5B	; 91
     5f6:	90 e4       	ldi	r25, 0x40	; 64
     5f8:	9f 93       	push	r25
     5fa:	8f 93       	push	r24
     5fc:	0e 94 36 05 	call	0xa6c	; 0xa6c <printf>
			while( scanf("%d", &value) < 0 );
     600:	0f 90       	pop	r0
     602:	0f 90       	pop	r0
     604:	ce 01       	movw	r24, r28
     606:	45 96       	adiw	r24, 0x15	; 21
     608:	9f 93       	push	r25
     60a:	8f 93       	push	r24
     60c:	88 e5       	ldi	r24, 0x58	; 88
     60e:	90 e4       	ldi	r25, 0x40	; 64
     610:	9f 93       	push	r25
     612:	8f 93       	push	r24
     614:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <scanf>
     618:	0f 90       	pop	r0
     61a:	0f 90       	pop	r0
     61c:	0f 90       	pop	r0
     61e:	0f 90       	pop	r0
     620:	99 23       	and	r25, r25
     622:	84 f3       	brlt	.-32     	; 0x604 <main+0xc4>
			pos = (char)value;
     624:	0d 89       	ldd	r16, Y+21	; 0x15
     626:	a5 cf       	rjmp	.-182    	; 0x572 <main+0x32>

00000628 <__cmpsf2>:
     628:	0e 94 c8 03 	call	0x790	; 0x790 <__fp_cmp>
     62c:	08 f4       	brcc	.+2      	; 0x630 <__cmpsf2+0x8>
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	08 95       	ret

00000632 <__divsf3>:
     632:	0e 94 2d 03 	call	0x65a	; 0x65a <__divsf3x>
     636:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_round>
     63a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_pscB>
     63e:	58 f0       	brcs	.+22     	; 0x656 <__divsf3+0x24>
     640:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_pscA>
     644:	40 f0       	brcs	.+16     	; 0x656 <__divsf3+0x24>
     646:	29 f4       	brne	.+10     	; 0x652 <__divsf3+0x20>
     648:	5f 3f       	cpi	r21, 0xFF	; 255
     64a:	29 f0       	breq	.+10     	; 0x656 <__divsf3+0x24>
     64c:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__fp_inf>
     650:	51 11       	cpse	r21, r1
     652:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_szero>
     656:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__fp_nan>

0000065a <__divsf3x>:
     65a:	0e 94 14 04 	call	0x828	; 0x828 <__fp_split3>
     65e:	68 f3       	brcs	.-38     	; 0x63a <__divsf3+0x8>

00000660 <__divsf3_pse>:
     660:	99 23       	and	r25, r25
     662:	b1 f3       	breq	.-20     	; 0x650 <__divsf3+0x1e>
     664:	55 23       	and	r21, r21
     666:	91 f3       	breq	.-28     	; 0x64c <__divsf3+0x1a>
     668:	95 1b       	sub	r25, r21
     66a:	55 0b       	sbc	r21, r21
     66c:	bb 27       	eor	r27, r27
     66e:	aa 27       	eor	r26, r26
     670:	62 17       	cp	r22, r18
     672:	73 07       	cpc	r23, r19
     674:	84 07       	cpc	r24, r20
     676:	38 f0       	brcs	.+14     	; 0x686 <__divsf3_pse+0x26>
     678:	9f 5f       	subi	r25, 0xFF	; 255
     67a:	5f 4f       	sbci	r21, 0xFF	; 255
     67c:	22 0f       	add	r18, r18
     67e:	33 1f       	adc	r19, r19
     680:	44 1f       	adc	r20, r20
     682:	aa 1f       	adc	r26, r26
     684:	a9 f3       	breq	.-22     	; 0x670 <__divsf3_pse+0x10>
     686:	35 d0       	rcall	.+106    	; 0x6f2 <__divsf3_pse+0x92>
     688:	0e 2e       	mov	r0, r30
     68a:	3a f0       	brmi	.+14     	; 0x69a <__divsf3_pse+0x3a>
     68c:	e0 e8       	ldi	r30, 0x80	; 128
     68e:	32 d0       	rcall	.+100    	; 0x6f4 <__divsf3_pse+0x94>
     690:	91 50       	subi	r25, 0x01	; 1
     692:	50 40       	sbci	r21, 0x00	; 0
     694:	e6 95       	lsr	r30
     696:	00 1c       	adc	r0, r0
     698:	ca f7       	brpl	.-14     	; 0x68c <__divsf3_pse+0x2c>
     69a:	2b d0       	rcall	.+86     	; 0x6f2 <__divsf3_pse+0x92>
     69c:	fe 2f       	mov	r31, r30
     69e:	29 d0       	rcall	.+82     	; 0x6f2 <__divsf3_pse+0x92>
     6a0:	66 0f       	add	r22, r22
     6a2:	77 1f       	adc	r23, r23
     6a4:	88 1f       	adc	r24, r24
     6a6:	bb 1f       	adc	r27, r27
     6a8:	26 17       	cp	r18, r22
     6aa:	37 07       	cpc	r19, r23
     6ac:	48 07       	cpc	r20, r24
     6ae:	ab 07       	cpc	r26, r27
     6b0:	b0 e8       	ldi	r27, 0x80	; 128
     6b2:	09 f0       	breq	.+2      	; 0x6b6 <__divsf3_pse+0x56>
     6b4:	bb 0b       	sbc	r27, r27
     6b6:	80 2d       	mov	r24, r0
     6b8:	bf 01       	movw	r22, r30
     6ba:	ff 27       	eor	r31, r31
     6bc:	93 58       	subi	r25, 0x83	; 131
     6be:	5f 4f       	sbci	r21, 0xFF	; 255
     6c0:	3a f0       	brmi	.+14     	; 0x6d0 <__divsf3_pse+0x70>
     6c2:	9e 3f       	cpi	r25, 0xFE	; 254
     6c4:	51 05       	cpc	r21, r1
     6c6:	78 f0       	brcs	.+30     	; 0x6e6 <__divsf3_pse+0x86>
     6c8:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__fp_inf>
     6cc:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_szero>
     6d0:	5f 3f       	cpi	r21, 0xFF	; 255
     6d2:	e4 f3       	brlt	.-8      	; 0x6cc <__divsf3_pse+0x6c>
     6d4:	98 3e       	cpi	r25, 0xE8	; 232
     6d6:	d4 f3       	brlt	.-12     	; 0x6cc <__divsf3_pse+0x6c>
     6d8:	86 95       	lsr	r24
     6da:	77 95       	ror	r23
     6dc:	67 95       	ror	r22
     6de:	b7 95       	ror	r27
     6e0:	f7 95       	ror	r31
     6e2:	9f 5f       	subi	r25, 0xFF	; 255
     6e4:	c9 f7       	brne	.-14     	; 0x6d8 <__divsf3_pse+0x78>
     6e6:	88 0f       	add	r24, r24
     6e8:	91 1d       	adc	r25, r1
     6ea:	96 95       	lsr	r25
     6ec:	87 95       	ror	r24
     6ee:	97 f9       	bld	r25, 7
     6f0:	08 95       	ret
     6f2:	e1 e0       	ldi	r30, 0x01	; 1
     6f4:	66 0f       	add	r22, r22
     6f6:	77 1f       	adc	r23, r23
     6f8:	88 1f       	adc	r24, r24
     6fa:	bb 1f       	adc	r27, r27
     6fc:	62 17       	cp	r22, r18
     6fe:	73 07       	cpc	r23, r19
     700:	84 07       	cpc	r24, r20
     702:	ba 07       	cpc	r27, r26
     704:	20 f0       	brcs	.+8      	; 0x70e <__divsf3_pse+0xae>
     706:	62 1b       	sub	r22, r18
     708:	73 0b       	sbc	r23, r19
     70a:	84 0b       	sbc	r24, r20
     70c:	ba 0b       	sbc	r27, r26
     70e:	ee 1f       	adc	r30, r30
     710:	88 f7       	brcc	.-30     	; 0x6f4 <__divsf3_pse+0x94>
     712:	e0 95       	com	r30
     714:	08 95       	ret

00000716 <__floatunsisf>:
     716:	e8 94       	clt
     718:	09 c0       	rjmp	.+18     	; 0x72c <__floatsisf+0x12>

0000071a <__floatsisf>:
     71a:	97 fb       	bst	r25, 7
     71c:	3e f4       	brtc	.+14     	; 0x72c <__floatsisf+0x12>
     71e:	90 95       	com	r25
     720:	80 95       	com	r24
     722:	70 95       	com	r23
     724:	61 95       	neg	r22
     726:	7f 4f       	sbci	r23, 0xFF	; 255
     728:	8f 4f       	sbci	r24, 0xFF	; 255
     72a:	9f 4f       	sbci	r25, 0xFF	; 255
     72c:	99 23       	and	r25, r25
     72e:	a9 f0       	breq	.+42     	; 0x75a <__floatsisf+0x40>
     730:	f9 2f       	mov	r31, r25
     732:	96 e9       	ldi	r25, 0x96	; 150
     734:	bb 27       	eor	r27, r27
     736:	93 95       	inc	r25
     738:	f6 95       	lsr	r31
     73a:	87 95       	ror	r24
     73c:	77 95       	ror	r23
     73e:	67 95       	ror	r22
     740:	b7 95       	ror	r27
     742:	f1 11       	cpse	r31, r1
     744:	f8 cf       	rjmp	.-16     	; 0x736 <__floatsisf+0x1c>
     746:	fa f4       	brpl	.+62     	; 0x786 <__floatsisf+0x6c>
     748:	bb 0f       	add	r27, r27
     74a:	11 f4       	brne	.+4      	; 0x750 <__floatsisf+0x36>
     74c:	60 ff       	sbrs	r22, 0
     74e:	1b c0       	rjmp	.+54     	; 0x786 <__floatsisf+0x6c>
     750:	6f 5f       	subi	r22, 0xFF	; 255
     752:	7f 4f       	sbci	r23, 0xFF	; 255
     754:	8f 4f       	sbci	r24, 0xFF	; 255
     756:	9f 4f       	sbci	r25, 0xFF	; 255
     758:	16 c0       	rjmp	.+44     	; 0x786 <__floatsisf+0x6c>
     75a:	88 23       	and	r24, r24
     75c:	11 f0       	breq	.+4      	; 0x762 <__floatsisf+0x48>
     75e:	96 e9       	ldi	r25, 0x96	; 150
     760:	11 c0       	rjmp	.+34     	; 0x784 <__floatsisf+0x6a>
     762:	77 23       	and	r23, r23
     764:	21 f0       	breq	.+8      	; 0x76e <__floatsisf+0x54>
     766:	9e e8       	ldi	r25, 0x8E	; 142
     768:	87 2f       	mov	r24, r23
     76a:	76 2f       	mov	r23, r22
     76c:	05 c0       	rjmp	.+10     	; 0x778 <__floatsisf+0x5e>
     76e:	66 23       	and	r22, r22
     770:	71 f0       	breq	.+28     	; 0x78e <__floatsisf+0x74>
     772:	96 e8       	ldi	r25, 0x86	; 134
     774:	86 2f       	mov	r24, r22
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	60 e0       	ldi	r22, 0x00	; 0
     77a:	2a f0       	brmi	.+10     	; 0x786 <__floatsisf+0x6c>
     77c:	9a 95       	dec	r25
     77e:	66 0f       	add	r22, r22
     780:	77 1f       	adc	r23, r23
     782:	88 1f       	adc	r24, r24
     784:	da f7       	brpl	.-10     	; 0x77c <__floatsisf+0x62>
     786:	88 0f       	add	r24, r24
     788:	96 95       	lsr	r25
     78a:	87 95       	ror	r24
     78c:	97 f9       	bld	r25, 7
     78e:	08 95       	ret

00000790 <__fp_cmp>:
     790:	99 0f       	add	r25, r25
     792:	00 08       	sbc	r0, r0
     794:	55 0f       	add	r21, r21
     796:	aa 0b       	sbc	r26, r26
     798:	e0 e8       	ldi	r30, 0x80	; 128
     79a:	fe ef       	ldi	r31, 0xFE	; 254
     79c:	16 16       	cp	r1, r22
     79e:	17 06       	cpc	r1, r23
     7a0:	e8 07       	cpc	r30, r24
     7a2:	f9 07       	cpc	r31, r25
     7a4:	c0 f0       	brcs	.+48     	; 0x7d6 <__fp_cmp+0x46>
     7a6:	12 16       	cp	r1, r18
     7a8:	13 06       	cpc	r1, r19
     7aa:	e4 07       	cpc	r30, r20
     7ac:	f5 07       	cpc	r31, r21
     7ae:	98 f0       	brcs	.+38     	; 0x7d6 <__fp_cmp+0x46>
     7b0:	62 1b       	sub	r22, r18
     7b2:	73 0b       	sbc	r23, r19
     7b4:	84 0b       	sbc	r24, r20
     7b6:	95 0b       	sbc	r25, r21
     7b8:	39 f4       	brne	.+14     	; 0x7c8 <__fp_cmp+0x38>
     7ba:	0a 26       	eor	r0, r26
     7bc:	61 f0       	breq	.+24     	; 0x7d6 <__fp_cmp+0x46>
     7be:	23 2b       	or	r18, r19
     7c0:	24 2b       	or	r18, r20
     7c2:	25 2b       	or	r18, r21
     7c4:	21 f4       	brne	.+8      	; 0x7ce <__fp_cmp+0x3e>
     7c6:	08 95       	ret
     7c8:	0a 26       	eor	r0, r26
     7ca:	09 f4       	brne	.+2      	; 0x7ce <__fp_cmp+0x3e>
     7cc:	a1 40       	sbci	r26, 0x01	; 1
     7ce:	a6 95       	lsr	r26
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	81 1d       	adc	r24, r1
     7d4:	81 1d       	adc	r24, r1
     7d6:	08 95       	ret

000007d8 <__fp_inf>:
     7d8:	97 f9       	bld	r25, 7
     7da:	9f 67       	ori	r25, 0x7F	; 127
     7dc:	80 e8       	ldi	r24, 0x80	; 128
     7de:	70 e0       	ldi	r23, 0x00	; 0
     7e0:	60 e0       	ldi	r22, 0x00	; 0
     7e2:	08 95       	ret

000007e4 <__fp_nan>:
     7e4:	9f ef       	ldi	r25, 0xFF	; 255
     7e6:	80 ec       	ldi	r24, 0xC0	; 192
     7e8:	08 95       	ret

000007ea <__fp_pscA>:
     7ea:	00 24       	eor	r0, r0
     7ec:	0a 94       	dec	r0
     7ee:	16 16       	cp	r1, r22
     7f0:	17 06       	cpc	r1, r23
     7f2:	18 06       	cpc	r1, r24
     7f4:	09 06       	cpc	r0, r25
     7f6:	08 95       	ret

000007f8 <__fp_pscB>:
     7f8:	00 24       	eor	r0, r0
     7fa:	0a 94       	dec	r0
     7fc:	12 16       	cp	r1, r18
     7fe:	13 06       	cpc	r1, r19
     800:	14 06       	cpc	r1, r20
     802:	05 06       	cpc	r0, r21
     804:	08 95       	ret

00000806 <__fp_round>:
     806:	09 2e       	mov	r0, r25
     808:	03 94       	inc	r0
     80a:	00 0c       	add	r0, r0
     80c:	11 f4       	brne	.+4      	; 0x812 <__fp_round+0xc>
     80e:	88 23       	and	r24, r24
     810:	52 f0       	brmi	.+20     	; 0x826 <__fp_round+0x20>
     812:	bb 0f       	add	r27, r27
     814:	40 f4       	brcc	.+16     	; 0x826 <__fp_round+0x20>
     816:	bf 2b       	or	r27, r31
     818:	11 f4       	brne	.+4      	; 0x81e <__fp_round+0x18>
     81a:	60 ff       	sbrs	r22, 0
     81c:	04 c0       	rjmp	.+8      	; 0x826 <__fp_round+0x20>
     81e:	6f 5f       	subi	r22, 0xFF	; 255
     820:	7f 4f       	sbci	r23, 0xFF	; 255
     822:	8f 4f       	sbci	r24, 0xFF	; 255
     824:	9f 4f       	sbci	r25, 0xFF	; 255
     826:	08 95       	ret

00000828 <__fp_split3>:
     828:	57 fd       	sbrc	r21, 7
     82a:	90 58       	subi	r25, 0x80	; 128
     82c:	44 0f       	add	r20, r20
     82e:	55 1f       	adc	r21, r21
     830:	59 f0       	breq	.+22     	; 0x848 <__fp_splitA+0x10>
     832:	5f 3f       	cpi	r21, 0xFF	; 255
     834:	71 f0       	breq	.+28     	; 0x852 <__fp_splitA+0x1a>
     836:	47 95       	ror	r20

00000838 <__fp_splitA>:
     838:	88 0f       	add	r24, r24
     83a:	97 fb       	bst	r25, 7
     83c:	99 1f       	adc	r25, r25
     83e:	61 f0       	breq	.+24     	; 0x858 <__fp_splitA+0x20>
     840:	9f 3f       	cpi	r25, 0xFF	; 255
     842:	79 f0       	breq	.+30     	; 0x862 <__fp_splitA+0x2a>
     844:	87 95       	ror	r24
     846:	08 95       	ret
     848:	12 16       	cp	r1, r18
     84a:	13 06       	cpc	r1, r19
     84c:	14 06       	cpc	r1, r20
     84e:	55 1f       	adc	r21, r21
     850:	f2 cf       	rjmp	.-28     	; 0x836 <__fp_split3+0xe>
     852:	46 95       	lsr	r20
     854:	f1 df       	rcall	.-30     	; 0x838 <__fp_splitA>
     856:	08 c0       	rjmp	.+16     	; 0x868 <__fp_splitA+0x30>
     858:	16 16       	cp	r1, r22
     85a:	17 06       	cpc	r1, r23
     85c:	18 06       	cpc	r1, r24
     85e:	99 1f       	adc	r25, r25
     860:	f1 cf       	rjmp	.-30     	; 0x844 <__fp_splitA+0xc>
     862:	86 95       	lsr	r24
     864:	71 05       	cpc	r23, r1
     866:	61 05       	cpc	r22, r1
     868:	08 94       	sec
     86a:	08 95       	ret

0000086c <__fp_zero>:
     86c:	e8 94       	clt

0000086e <__fp_szero>:
     86e:	bb 27       	eor	r27, r27
     870:	66 27       	eor	r22, r22
     872:	77 27       	eor	r23, r23
     874:	cb 01       	movw	r24, r22
     876:	97 f9       	bld	r25, 7
     878:	08 95       	ret

0000087a <__mulsf3>:
     87a:	0e 94 50 04 	call	0x8a0	; 0x8a0 <__mulsf3x>
     87e:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_round>
     882:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_pscA>
     886:	38 f0       	brcs	.+14     	; 0x896 <__mulsf3+0x1c>
     888:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_pscB>
     88c:	20 f0       	brcs	.+8      	; 0x896 <__mulsf3+0x1c>
     88e:	95 23       	and	r25, r21
     890:	11 f0       	breq	.+4      	; 0x896 <__mulsf3+0x1c>
     892:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__fp_inf>
     896:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__fp_nan>
     89a:	11 24       	eor	r1, r1
     89c:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_szero>

000008a0 <__mulsf3x>:
     8a0:	0e 94 14 04 	call	0x828	; 0x828 <__fp_split3>
     8a4:	70 f3       	brcs	.-36     	; 0x882 <__mulsf3+0x8>

000008a6 <__mulsf3_pse>:
     8a6:	95 9f       	mul	r25, r21
     8a8:	c1 f3       	breq	.-16     	; 0x89a <__mulsf3+0x20>
     8aa:	95 0f       	add	r25, r21
     8ac:	50 e0       	ldi	r21, 0x00	; 0
     8ae:	55 1f       	adc	r21, r21
     8b0:	62 9f       	mul	r22, r18
     8b2:	f0 01       	movw	r30, r0
     8b4:	72 9f       	mul	r23, r18
     8b6:	bb 27       	eor	r27, r27
     8b8:	f0 0d       	add	r31, r0
     8ba:	b1 1d       	adc	r27, r1
     8bc:	63 9f       	mul	r22, r19
     8be:	aa 27       	eor	r26, r26
     8c0:	f0 0d       	add	r31, r0
     8c2:	b1 1d       	adc	r27, r1
     8c4:	aa 1f       	adc	r26, r26
     8c6:	64 9f       	mul	r22, r20
     8c8:	66 27       	eor	r22, r22
     8ca:	b0 0d       	add	r27, r0
     8cc:	a1 1d       	adc	r26, r1
     8ce:	66 1f       	adc	r22, r22
     8d0:	82 9f       	mul	r24, r18
     8d2:	22 27       	eor	r18, r18
     8d4:	b0 0d       	add	r27, r0
     8d6:	a1 1d       	adc	r26, r1
     8d8:	62 1f       	adc	r22, r18
     8da:	73 9f       	mul	r23, r19
     8dc:	b0 0d       	add	r27, r0
     8de:	a1 1d       	adc	r26, r1
     8e0:	62 1f       	adc	r22, r18
     8e2:	83 9f       	mul	r24, r19
     8e4:	a0 0d       	add	r26, r0
     8e6:	61 1d       	adc	r22, r1
     8e8:	22 1f       	adc	r18, r18
     8ea:	74 9f       	mul	r23, r20
     8ec:	33 27       	eor	r19, r19
     8ee:	a0 0d       	add	r26, r0
     8f0:	61 1d       	adc	r22, r1
     8f2:	23 1f       	adc	r18, r19
     8f4:	84 9f       	mul	r24, r20
     8f6:	60 0d       	add	r22, r0
     8f8:	21 1d       	adc	r18, r1
     8fa:	82 2f       	mov	r24, r18
     8fc:	76 2f       	mov	r23, r22
     8fe:	6a 2f       	mov	r22, r26
     900:	11 24       	eor	r1, r1
     902:	9f 57       	subi	r25, 0x7F	; 127
     904:	50 40       	sbci	r21, 0x00	; 0
     906:	9a f0       	brmi	.+38     	; 0x92e <__mulsf3_pse+0x88>
     908:	f1 f0       	breq	.+60     	; 0x946 <__mulsf3_pse+0xa0>
     90a:	88 23       	and	r24, r24
     90c:	4a f0       	brmi	.+18     	; 0x920 <__mulsf3_pse+0x7a>
     90e:	ee 0f       	add	r30, r30
     910:	ff 1f       	adc	r31, r31
     912:	bb 1f       	adc	r27, r27
     914:	66 1f       	adc	r22, r22
     916:	77 1f       	adc	r23, r23
     918:	88 1f       	adc	r24, r24
     91a:	91 50       	subi	r25, 0x01	; 1
     91c:	50 40       	sbci	r21, 0x00	; 0
     91e:	a9 f7       	brne	.-22     	; 0x90a <__mulsf3_pse+0x64>
     920:	9e 3f       	cpi	r25, 0xFE	; 254
     922:	51 05       	cpc	r21, r1
     924:	80 f0       	brcs	.+32     	; 0x946 <__mulsf3_pse+0xa0>
     926:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__fp_inf>
     92a:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_szero>
     92e:	5f 3f       	cpi	r21, 0xFF	; 255
     930:	e4 f3       	brlt	.-8      	; 0x92a <__mulsf3_pse+0x84>
     932:	98 3e       	cpi	r25, 0xE8	; 232
     934:	d4 f3       	brlt	.-12     	; 0x92a <__mulsf3_pse+0x84>
     936:	86 95       	lsr	r24
     938:	77 95       	ror	r23
     93a:	67 95       	ror	r22
     93c:	b7 95       	ror	r27
     93e:	f7 95       	ror	r31
     940:	e7 95       	ror	r30
     942:	9f 5f       	subi	r25, 0xFF	; 255
     944:	c1 f7       	brne	.-16     	; 0x936 <__mulsf3_pse+0x90>
     946:	fe 2b       	or	r31, r30
     948:	88 0f       	add	r24, r24
     94a:	91 1d       	adc	r25, r1
     94c:	96 95       	lsr	r25
     94e:	87 95       	ror	r24
     950:	97 f9       	bld	r25, 7
     952:	08 95       	ret

00000954 <__divmodhi4>:
     954:	97 fb       	bst	r25, 7
     956:	07 2e       	mov	r0, r23
     958:	16 f4       	brtc	.+4      	; 0x95e <__divmodhi4+0xa>
     95a:	00 94       	com	r0
     95c:	07 d0       	rcall	.+14     	; 0x96c <__divmodhi4_neg1>
     95e:	77 fd       	sbrc	r23, 7
     960:	09 d0       	rcall	.+18     	; 0x974 <__divmodhi4_neg2>
     962:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__udivmodhi4>
     966:	07 fc       	sbrc	r0, 7
     968:	05 d0       	rcall	.+10     	; 0x974 <__divmodhi4_neg2>
     96a:	3e f4       	brtc	.+14     	; 0x97a <__divmodhi4_exit>

0000096c <__divmodhi4_neg1>:
     96c:	90 95       	com	r25
     96e:	81 95       	neg	r24
     970:	9f 4f       	sbci	r25, 0xFF	; 255
     972:	08 95       	ret

00000974 <__divmodhi4_neg2>:
     974:	70 95       	com	r23
     976:	61 95       	neg	r22
     978:	7f 4f       	sbci	r23, 0xFF	; 255

0000097a <__divmodhi4_exit>:
     97a:	08 95       	ret

0000097c <__udivmodsi4>:
     97c:	a1 e2       	ldi	r26, 0x21	; 33
     97e:	1a 2e       	mov	r1, r26
     980:	aa 1b       	sub	r26, r26
     982:	bb 1b       	sub	r27, r27
     984:	fd 01       	movw	r30, r26
     986:	0d c0       	rjmp	.+26     	; 0x9a2 <__udivmodsi4_ep>

00000988 <__udivmodsi4_loop>:
     988:	aa 1f       	adc	r26, r26
     98a:	bb 1f       	adc	r27, r27
     98c:	ee 1f       	adc	r30, r30
     98e:	ff 1f       	adc	r31, r31
     990:	a2 17       	cp	r26, r18
     992:	b3 07       	cpc	r27, r19
     994:	e4 07       	cpc	r30, r20
     996:	f5 07       	cpc	r31, r21
     998:	20 f0       	brcs	.+8      	; 0x9a2 <__udivmodsi4_ep>
     99a:	a2 1b       	sub	r26, r18
     99c:	b3 0b       	sbc	r27, r19
     99e:	e4 0b       	sbc	r30, r20
     9a0:	f5 0b       	sbc	r31, r21

000009a2 <__udivmodsi4_ep>:
     9a2:	66 1f       	adc	r22, r22
     9a4:	77 1f       	adc	r23, r23
     9a6:	88 1f       	adc	r24, r24
     9a8:	99 1f       	adc	r25, r25
     9aa:	1a 94       	dec	r1
     9ac:	69 f7       	brne	.-38     	; 0x988 <__udivmodsi4_loop>
     9ae:	60 95       	com	r22
     9b0:	70 95       	com	r23
     9b2:	80 95       	com	r24
     9b4:	90 95       	com	r25
     9b6:	9b 01       	movw	r18, r22
     9b8:	ac 01       	movw	r20, r24
     9ba:	bd 01       	movw	r22, r26
     9bc:	cf 01       	movw	r24, r30
     9be:	08 95       	ret

000009c0 <__udivmodhi4>:
     9c0:	aa 1b       	sub	r26, r26
     9c2:	bb 1b       	sub	r27, r27
     9c4:	51 e1       	ldi	r21, 0x11	; 17
     9c6:	07 c0       	rjmp	.+14     	; 0x9d6 <__udivmodhi4_ep>

000009c8 <__udivmodhi4_loop>:
     9c8:	aa 1f       	adc	r26, r26
     9ca:	bb 1f       	adc	r27, r27
     9cc:	a6 17       	cp	r26, r22
     9ce:	b7 07       	cpc	r27, r23
     9d0:	10 f0       	brcs	.+4      	; 0x9d6 <__udivmodhi4_ep>
     9d2:	a6 1b       	sub	r26, r22
     9d4:	b7 0b       	sbc	r27, r23

000009d6 <__udivmodhi4_ep>:
     9d6:	88 1f       	adc	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	5a 95       	dec	r21
     9dc:	a9 f7       	brne	.-22     	; 0x9c8 <__udivmodhi4_loop>
     9de:	80 95       	com	r24
     9e0:	90 95       	com	r25
     9e2:	bc 01       	movw	r22, r24
     9e4:	cd 01       	movw	r24, r26
     9e6:	08 95       	ret

000009e8 <fwrite>:
     9e8:	8f 92       	push	r8
     9ea:	9f 92       	push	r9
     9ec:	af 92       	push	r10
     9ee:	bf 92       	push	r11
     9f0:	cf 92       	push	r12
     9f2:	df 92       	push	r13
     9f4:	ef 92       	push	r14
     9f6:	ff 92       	push	r15
     9f8:	0f 93       	push	r16
     9fa:	1f 93       	push	r17
     9fc:	cf 93       	push	r28
     9fe:	df 93       	push	r29
     a00:	5b 01       	movw	r10, r22
     a02:	4a 01       	movw	r8, r20
     a04:	79 01       	movw	r14, r18
     a06:	d9 01       	movw	r26, r18
     a08:	13 96       	adiw	r26, 0x03	; 3
     a0a:	2c 91       	ld	r18, X
     a0c:	21 ff       	sbrs	r18, 1
     a0e:	1d c0       	rjmp	.+58     	; 0xa4a <fwrite+0x62>
     a10:	c0 e0       	ldi	r28, 0x00	; 0
     a12:	d0 e0       	ldi	r29, 0x00	; 0
     a14:	c8 15       	cp	r28, r8
     a16:	d9 05       	cpc	r29, r9
     a18:	d9 f0       	breq	.+54     	; 0xa50 <fwrite+0x68>
     a1a:	8c 01       	movw	r16, r24
     a1c:	6c 01       	movw	r12, r24
     a1e:	ca 0c       	add	r12, r10
     a20:	db 1c       	adc	r13, r11
     a22:	c8 01       	movw	r24, r16
     a24:	0c 15       	cp	r16, r12
     a26:	1d 05       	cpc	r17, r13
     a28:	71 f0       	breq	.+28     	; 0xa46 <fwrite+0x5e>
     a2a:	0f 5f       	subi	r16, 0xFF	; 255
     a2c:	1f 4f       	sbci	r17, 0xFF	; 255
     a2e:	d7 01       	movw	r26, r14
     a30:	18 96       	adiw	r26, 0x08	; 8
     a32:	ed 91       	ld	r30, X+
     a34:	fc 91       	ld	r31, X
     a36:	19 97       	sbiw	r26, 0x09	; 9
     a38:	b7 01       	movw	r22, r14
     a3a:	dc 01       	movw	r26, r24
     a3c:	8c 91       	ld	r24, X
     a3e:	09 95       	icall
     a40:	89 2b       	or	r24, r25
     a42:	79 f3       	breq	.-34     	; 0xa22 <fwrite+0x3a>
     a44:	05 c0       	rjmp	.+10     	; 0xa50 <fwrite+0x68>
     a46:	21 96       	adiw	r28, 0x01	; 1
     a48:	e5 cf       	rjmp	.-54     	; 0xa14 <fwrite+0x2c>
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	01 c0       	rjmp	.+2      	; 0xa52 <fwrite+0x6a>
     a50:	ce 01       	movw	r24, r28
     a52:	df 91       	pop	r29
     a54:	cf 91       	pop	r28
     a56:	1f 91       	pop	r17
     a58:	0f 91       	pop	r16
     a5a:	ff 90       	pop	r15
     a5c:	ef 90       	pop	r14
     a5e:	df 90       	pop	r13
     a60:	cf 90       	pop	r12
     a62:	bf 90       	pop	r11
     a64:	af 90       	pop	r10
     a66:	9f 90       	pop	r9
     a68:	8f 90       	pop	r8
     a6a:	08 95       	ret

00000a6c <printf>:
     a6c:	cf 93       	push	r28
     a6e:	df 93       	push	r29
     a70:	cd b7       	in	r28, 0x3d	; 61
     a72:	de b7       	in	r29, 0x3e	; 62
     a74:	ae 01       	movw	r20, r28
     a76:	4b 5f       	subi	r20, 0xFB	; 251
     a78:	5f 4f       	sbci	r21, 0xFF	; 255
     a7a:	fa 01       	movw	r30, r20
     a7c:	61 91       	ld	r22, Z+
     a7e:	71 91       	ld	r23, Z+
     a80:	af 01       	movw	r20, r30
     a82:	80 91 ba 40 	lds	r24, 0x40BA	; 0x8040ba <__iob+0x2>
     a86:	90 91 bb 40 	lds	r25, 0x40BB	; 0x8040bb <__iob+0x3>
     a8a:	0e 94 8e 05 	call	0xb1c	; 0xb1c <vfprintf>
     a8e:	df 91       	pop	r29
     a90:	cf 91       	pop	r28
     a92:	08 95       	ret

00000a94 <puts>:
     a94:	0f 93       	push	r16
     a96:	1f 93       	push	r17
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
     a9c:	e0 91 ba 40 	lds	r30, 0x40BA	; 0x8040ba <__iob+0x2>
     aa0:	f0 91 bb 40 	lds	r31, 0x40BB	; 0x8040bb <__iob+0x3>
     aa4:	23 81       	ldd	r18, Z+3	; 0x03
     aa6:	21 ff       	sbrs	r18, 1
     aa8:	1b c0       	rjmp	.+54     	; 0xae0 <puts+0x4c>
     aaa:	8c 01       	movw	r16, r24
     aac:	d0 e0       	ldi	r29, 0x00	; 0
     aae:	c0 e0       	ldi	r28, 0x00	; 0
     ab0:	f8 01       	movw	r30, r16
     ab2:	81 91       	ld	r24, Z+
     ab4:	8f 01       	movw	r16, r30
     ab6:	60 91 ba 40 	lds	r22, 0x40BA	; 0x8040ba <__iob+0x2>
     aba:	70 91 bb 40 	lds	r23, 0x40BB	; 0x8040bb <__iob+0x3>
     abe:	db 01       	movw	r26, r22
     ac0:	18 96       	adiw	r26, 0x08	; 8
     ac2:	ed 91       	ld	r30, X+
     ac4:	fc 91       	ld	r31, X
     ac6:	19 97       	sbiw	r26, 0x09	; 9
     ac8:	88 23       	and	r24, r24
     aca:	31 f0       	breq	.+12     	; 0xad8 <puts+0x44>
     acc:	09 95       	icall
     ace:	89 2b       	or	r24, r25
     ad0:	79 f3       	breq	.-34     	; 0xab0 <puts+0x1c>
     ad2:	df ef       	ldi	r29, 0xFF	; 255
     ad4:	cf ef       	ldi	r28, 0xFF	; 255
     ad6:	ec cf       	rjmp	.-40     	; 0xab0 <puts+0x1c>
     ad8:	8a e0       	ldi	r24, 0x0A	; 10
     ada:	09 95       	icall
     adc:	89 2b       	or	r24, r25
     ade:	19 f0       	breq	.+6      	; 0xae6 <puts+0x52>
     ae0:	8f ef       	ldi	r24, 0xFF	; 255
     ae2:	9f ef       	ldi	r25, 0xFF	; 255
     ae4:	02 c0       	rjmp	.+4      	; 0xaea <puts+0x56>
     ae6:	8d 2f       	mov	r24, r29
     ae8:	9c 2f       	mov	r25, r28
     aea:	df 91       	pop	r29
     aec:	cf 91       	pop	r28
     aee:	1f 91       	pop	r17
     af0:	0f 91       	pop	r16
     af2:	08 95       	ret

00000af4 <scanf>:
     af4:	cf 93       	push	r28
     af6:	df 93       	push	r29
     af8:	cd b7       	in	r28, 0x3d	; 61
     afa:	de b7       	in	r29, 0x3e	; 62
     afc:	ae 01       	movw	r20, r28
     afe:	4b 5f       	subi	r20, 0xFB	; 251
     b00:	5f 4f       	sbci	r21, 0xFF	; 255
     b02:	fa 01       	movw	r30, r20
     b04:	61 91       	ld	r22, Z+
     b06:	71 91       	ld	r23, Z+
     b08:	af 01       	movw	r20, r30
     b0a:	80 91 b8 40 	lds	r24, 0x40B8	; 0x8040b8 <__iob>
     b0e:	90 91 b9 40 	lds	r25, 0x40B9	; 0x8040b9 <__iob+0x1>
     b12:	0e 94 4b 09 	call	0x1296	; 0x1296 <vfscanf>
     b16:	df 91       	pop	r29
     b18:	cf 91       	pop	r28
     b1a:	08 95       	ret

00000b1c <vfprintf>:
     b1c:	2f 92       	push	r2
     b1e:	3f 92       	push	r3
     b20:	4f 92       	push	r4
     b22:	5f 92       	push	r5
     b24:	6f 92       	push	r6
     b26:	7f 92       	push	r7
     b28:	8f 92       	push	r8
     b2a:	9f 92       	push	r9
     b2c:	af 92       	push	r10
     b2e:	bf 92       	push	r11
     b30:	cf 92       	push	r12
     b32:	df 92       	push	r13
     b34:	ef 92       	push	r14
     b36:	ff 92       	push	r15
     b38:	0f 93       	push	r16
     b3a:	1f 93       	push	r17
     b3c:	cf 93       	push	r28
     b3e:	df 93       	push	r29
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	2b 97       	sbiw	r28, 0x0b	; 11
     b46:	cd bf       	out	0x3d, r28	; 61
     b48:	de bf       	out	0x3e, r29	; 62
     b4a:	6c 01       	movw	r12, r24
     b4c:	7b 01       	movw	r14, r22
     b4e:	8a 01       	movw	r16, r20
     b50:	fc 01       	movw	r30, r24
     b52:	16 82       	std	Z+6, r1	; 0x06
     b54:	17 82       	std	Z+7, r1	; 0x07
     b56:	83 81       	ldd	r24, Z+3	; 0x03
     b58:	81 ff       	sbrs	r24, 1
     b5a:	cc c1       	rjmp	.+920    	; 0xef4 <vfprintf+0x3d8>
     b5c:	ce 01       	movw	r24, r28
     b5e:	01 96       	adiw	r24, 0x01	; 1
     b60:	3c 01       	movw	r6, r24
     b62:	f6 01       	movw	r30, r12
     b64:	93 81       	ldd	r25, Z+3	; 0x03
     b66:	f7 01       	movw	r30, r14
     b68:	93 fd       	sbrc	r25, 3
     b6a:	85 91       	lpm	r24, Z+
     b6c:	93 ff       	sbrs	r25, 3
     b6e:	81 91       	ld	r24, Z+
     b70:	7f 01       	movw	r14, r30
     b72:	88 23       	and	r24, r24
     b74:	09 f4       	brne	.+2      	; 0xb78 <vfprintf+0x5c>
     b76:	ba c1       	rjmp	.+884    	; 0xeec <vfprintf+0x3d0>
     b78:	85 32       	cpi	r24, 0x25	; 37
     b7a:	39 f4       	brne	.+14     	; 0xb8a <vfprintf+0x6e>
     b7c:	93 fd       	sbrc	r25, 3
     b7e:	85 91       	lpm	r24, Z+
     b80:	93 ff       	sbrs	r25, 3
     b82:	81 91       	ld	r24, Z+
     b84:	7f 01       	movw	r14, r30
     b86:	85 32       	cpi	r24, 0x25	; 37
     b88:	29 f4       	brne	.+10     	; 0xb94 <vfprintf+0x78>
     b8a:	b6 01       	movw	r22, r12
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     b92:	e7 cf       	rjmp	.-50     	; 0xb62 <vfprintf+0x46>
     b94:	91 2c       	mov	r9, r1
     b96:	21 2c       	mov	r2, r1
     b98:	31 2c       	mov	r3, r1
     b9a:	ff e1       	ldi	r31, 0x1F	; 31
     b9c:	f3 15       	cp	r31, r3
     b9e:	d8 f0       	brcs	.+54     	; 0xbd6 <vfprintf+0xba>
     ba0:	8b 32       	cpi	r24, 0x2B	; 43
     ba2:	79 f0       	breq	.+30     	; 0xbc2 <vfprintf+0xa6>
     ba4:	38 f4       	brcc	.+14     	; 0xbb4 <vfprintf+0x98>
     ba6:	80 32       	cpi	r24, 0x20	; 32
     ba8:	79 f0       	breq	.+30     	; 0xbc8 <vfprintf+0xac>
     baa:	83 32       	cpi	r24, 0x23	; 35
     bac:	a1 f4       	brne	.+40     	; 0xbd6 <vfprintf+0xba>
     bae:	23 2d       	mov	r18, r3
     bb0:	20 61       	ori	r18, 0x10	; 16
     bb2:	1d c0       	rjmp	.+58     	; 0xbee <vfprintf+0xd2>
     bb4:	8d 32       	cpi	r24, 0x2D	; 45
     bb6:	61 f0       	breq	.+24     	; 0xbd0 <vfprintf+0xb4>
     bb8:	80 33       	cpi	r24, 0x30	; 48
     bba:	69 f4       	brne	.+26     	; 0xbd6 <vfprintf+0xba>
     bbc:	23 2d       	mov	r18, r3
     bbe:	21 60       	ori	r18, 0x01	; 1
     bc0:	16 c0       	rjmp	.+44     	; 0xbee <vfprintf+0xd2>
     bc2:	83 2d       	mov	r24, r3
     bc4:	82 60       	ori	r24, 0x02	; 2
     bc6:	38 2e       	mov	r3, r24
     bc8:	e3 2d       	mov	r30, r3
     bca:	e4 60       	ori	r30, 0x04	; 4
     bcc:	3e 2e       	mov	r3, r30
     bce:	2a c0       	rjmp	.+84     	; 0xc24 <vfprintf+0x108>
     bd0:	f3 2d       	mov	r31, r3
     bd2:	f8 60       	ori	r31, 0x08	; 8
     bd4:	1d c0       	rjmp	.+58     	; 0xc10 <vfprintf+0xf4>
     bd6:	37 fc       	sbrc	r3, 7
     bd8:	2d c0       	rjmp	.+90     	; 0xc34 <vfprintf+0x118>
     bda:	20 ed       	ldi	r18, 0xD0	; 208
     bdc:	28 0f       	add	r18, r24
     bde:	2a 30       	cpi	r18, 0x0A	; 10
     be0:	40 f0       	brcs	.+16     	; 0xbf2 <vfprintf+0xd6>
     be2:	8e 32       	cpi	r24, 0x2E	; 46
     be4:	b9 f4       	brne	.+46     	; 0xc14 <vfprintf+0xf8>
     be6:	36 fc       	sbrc	r3, 6
     be8:	81 c1       	rjmp	.+770    	; 0xeec <vfprintf+0x3d0>
     bea:	23 2d       	mov	r18, r3
     bec:	20 64       	ori	r18, 0x40	; 64
     bee:	32 2e       	mov	r3, r18
     bf0:	19 c0       	rjmp	.+50     	; 0xc24 <vfprintf+0x108>
     bf2:	36 fe       	sbrs	r3, 6
     bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0xe6>
     bf6:	8a e0       	ldi	r24, 0x0A	; 10
     bf8:	98 9e       	mul	r9, r24
     bfa:	20 0d       	add	r18, r0
     bfc:	11 24       	eor	r1, r1
     bfe:	92 2e       	mov	r9, r18
     c00:	11 c0       	rjmp	.+34     	; 0xc24 <vfprintf+0x108>
     c02:	ea e0       	ldi	r30, 0x0A	; 10
     c04:	2e 9e       	mul	r2, r30
     c06:	20 0d       	add	r18, r0
     c08:	11 24       	eor	r1, r1
     c0a:	22 2e       	mov	r2, r18
     c0c:	f3 2d       	mov	r31, r3
     c0e:	f0 62       	ori	r31, 0x20	; 32
     c10:	3f 2e       	mov	r3, r31
     c12:	08 c0       	rjmp	.+16     	; 0xc24 <vfprintf+0x108>
     c14:	8c 36       	cpi	r24, 0x6C	; 108
     c16:	21 f4       	brne	.+8      	; 0xc20 <vfprintf+0x104>
     c18:	83 2d       	mov	r24, r3
     c1a:	80 68       	ori	r24, 0x80	; 128
     c1c:	38 2e       	mov	r3, r24
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <vfprintf+0x108>
     c20:	88 36       	cpi	r24, 0x68	; 104
     c22:	41 f4       	brne	.+16     	; 0xc34 <vfprintf+0x118>
     c24:	f7 01       	movw	r30, r14
     c26:	93 fd       	sbrc	r25, 3
     c28:	85 91       	lpm	r24, Z+
     c2a:	93 ff       	sbrs	r25, 3
     c2c:	81 91       	ld	r24, Z+
     c2e:	7f 01       	movw	r14, r30
     c30:	81 11       	cpse	r24, r1
     c32:	b3 cf       	rjmp	.-154    	; 0xb9a <vfprintf+0x7e>
     c34:	98 2f       	mov	r25, r24
     c36:	9f 7d       	andi	r25, 0xDF	; 223
     c38:	95 54       	subi	r25, 0x45	; 69
     c3a:	93 30       	cpi	r25, 0x03	; 3
     c3c:	28 f4       	brcc	.+10     	; 0xc48 <vfprintf+0x12c>
     c3e:	0c 5f       	subi	r16, 0xFC	; 252
     c40:	1f 4f       	sbci	r17, 0xFF	; 255
     c42:	9f e3       	ldi	r25, 0x3F	; 63
     c44:	99 83       	std	Y+1, r25	; 0x01
     c46:	0d c0       	rjmp	.+26     	; 0xc62 <vfprintf+0x146>
     c48:	83 36       	cpi	r24, 0x63	; 99
     c4a:	31 f0       	breq	.+12     	; 0xc58 <vfprintf+0x13c>
     c4c:	83 37       	cpi	r24, 0x73	; 115
     c4e:	71 f0       	breq	.+28     	; 0xc6c <vfprintf+0x150>
     c50:	83 35       	cpi	r24, 0x53	; 83
     c52:	09 f0       	breq	.+2      	; 0xc56 <vfprintf+0x13a>
     c54:	59 c0       	rjmp	.+178    	; 0xd08 <vfprintf+0x1ec>
     c56:	21 c0       	rjmp	.+66     	; 0xc9a <vfprintf+0x17e>
     c58:	f8 01       	movw	r30, r16
     c5a:	80 81       	ld	r24, Z
     c5c:	89 83       	std	Y+1, r24	; 0x01
     c5e:	0e 5f       	subi	r16, 0xFE	; 254
     c60:	1f 4f       	sbci	r17, 0xFF	; 255
     c62:	88 24       	eor	r8, r8
     c64:	83 94       	inc	r8
     c66:	91 2c       	mov	r9, r1
     c68:	53 01       	movw	r10, r6
     c6a:	13 c0       	rjmp	.+38     	; 0xc92 <vfprintf+0x176>
     c6c:	28 01       	movw	r4, r16
     c6e:	f2 e0       	ldi	r31, 0x02	; 2
     c70:	4f 0e       	add	r4, r31
     c72:	51 1c       	adc	r5, r1
     c74:	f8 01       	movw	r30, r16
     c76:	a0 80       	ld	r10, Z
     c78:	b1 80       	ldd	r11, Z+1	; 0x01
     c7a:	36 fe       	sbrs	r3, 6
     c7c:	03 c0       	rjmp	.+6      	; 0xc84 <vfprintf+0x168>
     c7e:	69 2d       	mov	r22, r9
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <vfprintf+0x16c>
     c84:	6f ef       	ldi	r22, 0xFF	; 255
     c86:	7f ef       	ldi	r23, 0xFF	; 255
     c88:	c5 01       	movw	r24, r10
     c8a:	0e 94 8f 0a 	call	0x151e	; 0x151e <strnlen>
     c8e:	4c 01       	movw	r8, r24
     c90:	82 01       	movw	r16, r4
     c92:	f3 2d       	mov	r31, r3
     c94:	ff 77       	andi	r31, 0x7F	; 127
     c96:	3f 2e       	mov	r3, r31
     c98:	16 c0       	rjmp	.+44     	; 0xcc6 <vfprintf+0x1aa>
     c9a:	28 01       	movw	r4, r16
     c9c:	22 e0       	ldi	r18, 0x02	; 2
     c9e:	42 0e       	add	r4, r18
     ca0:	51 1c       	adc	r5, r1
     ca2:	f8 01       	movw	r30, r16
     ca4:	a0 80       	ld	r10, Z
     ca6:	b1 80       	ldd	r11, Z+1	; 0x01
     ca8:	36 fe       	sbrs	r3, 6
     caa:	03 c0       	rjmp	.+6      	; 0xcb2 <vfprintf+0x196>
     cac:	69 2d       	mov	r22, r9
     cae:	70 e0       	ldi	r23, 0x00	; 0
     cb0:	02 c0       	rjmp	.+4      	; 0xcb6 <vfprintf+0x19a>
     cb2:	6f ef       	ldi	r22, 0xFF	; 255
     cb4:	7f ef       	ldi	r23, 0xFF	; 255
     cb6:	c5 01       	movw	r24, r10
     cb8:	0e 94 84 0a 	call	0x1508	; 0x1508 <strnlen_P>
     cbc:	4c 01       	movw	r8, r24
     cbe:	f3 2d       	mov	r31, r3
     cc0:	f0 68       	ori	r31, 0x80	; 128
     cc2:	3f 2e       	mov	r3, r31
     cc4:	82 01       	movw	r16, r4
     cc6:	33 fc       	sbrc	r3, 3
     cc8:	1b c0       	rjmp	.+54     	; 0xd00 <vfprintf+0x1e4>
     cca:	82 2d       	mov	r24, r2
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	88 16       	cp	r8, r24
     cd0:	99 06       	cpc	r9, r25
     cd2:	b0 f4       	brcc	.+44     	; 0xd00 <vfprintf+0x1e4>
     cd4:	b6 01       	movw	r22, r12
     cd6:	80 e2       	ldi	r24, 0x20	; 32
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     cde:	2a 94       	dec	r2
     ce0:	f4 cf       	rjmp	.-24     	; 0xcca <vfprintf+0x1ae>
     ce2:	f5 01       	movw	r30, r10
     ce4:	37 fc       	sbrc	r3, 7
     ce6:	85 91       	lpm	r24, Z+
     ce8:	37 fe       	sbrs	r3, 7
     cea:	81 91       	ld	r24, Z+
     cec:	5f 01       	movw	r10, r30
     cee:	b6 01       	movw	r22, r12
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     cf6:	21 10       	cpse	r2, r1
     cf8:	2a 94       	dec	r2
     cfa:	21 e0       	ldi	r18, 0x01	; 1
     cfc:	82 1a       	sub	r8, r18
     cfe:	91 08       	sbc	r9, r1
     d00:	81 14       	cp	r8, r1
     d02:	91 04       	cpc	r9, r1
     d04:	71 f7       	brne	.-36     	; 0xce2 <vfprintf+0x1c6>
     d06:	e8 c0       	rjmp	.+464    	; 0xed8 <vfprintf+0x3bc>
     d08:	84 36       	cpi	r24, 0x64	; 100
     d0a:	11 f0       	breq	.+4      	; 0xd10 <vfprintf+0x1f4>
     d0c:	89 36       	cpi	r24, 0x69	; 105
     d0e:	41 f5       	brne	.+80     	; 0xd60 <vfprintf+0x244>
     d10:	f8 01       	movw	r30, r16
     d12:	37 fe       	sbrs	r3, 7
     d14:	07 c0       	rjmp	.+14     	; 0xd24 <vfprintf+0x208>
     d16:	60 81       	ld	r22, Z
     d18:	71 81       	ldd	r23, Z+1	; 0x01
     d1a:	82 81       	ldd	r24, Z+2	; 0x02
     d1c:	93 81       	ldd	r25, Z+3	; 0x03
     d1e:	0c 5f       	subi	r16, 0xFC	; 252
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	08 c0       	rjmp	.+16     	; 0xd34 <vfprintf+0x218>
     d24:	60 81       	ld	r22, Z
     d26:	71 81       	ldd	r23, Z+1	; 0x01
     d28:	07 2e       	mov	r0, r23
     d2a:	00 0c       	add	r0, r0
     d2c:	88 0b       	sbc	r24, r24
     d2e:	99 0b       	sbc	r25, r25
     d30:	0e 5f       	subi	r16, 0xFE	; 254
     d32:	1f 4f       	sbci	r17, 0xFF	; 255
     d34:	f3 2d       	mov	r31, r3
     d36:	ff 76       	andi	r31, 0x6F	; 111
     d38:	3f 2e       	mov	r3, r31
     d3a:	97 ff       	sbrs	r25, 7
     d3c:	09 c0       	rjmp	.+18     	; 0xd50 <vfprintf+0x234>
     d3e:	90 95       	com	r25
     d40:	80 95       	com	r24
     d42:	70 95       	com	r23
     d44:	61 95       	neg	r22
     d46:	7f 4f       	sbci	r23, 0xFF	; 255
     d48:	8f 4f       	sbci	r24, 0xFF	; 255
     d4a:	9f 4f       	sbci	r25, 0xFF	; 255
     d4c:	f0 68       	ori	r31, 0x80	; 128
     d4e:	3f 2e       	mov	r3, r31
     d50:	2a e0       	ldi	r18, 0x0A	; 10
     d52:	30 e0       	ldi	r19, 0x00	; 0
     d54:	a3 01       	movw	r20, r6
     d56:	0e 94 2d 0b 	call	0x165a	; 0x165a <__ultoa_invert>
     d5a:	88 2e       	mov	r8, r24
     d5c:	86 18       	sub	r8, r6
     d5e:	45 c0       	rjmp	.+138    	; 0xdea <vfprintf+0x2ce>
     d60:	85 37       	cpi	r24, 0x75	; 117
     d62:	31 f4       	brne	.+12     	; 0xd70 <vfprintf+0x254>
     d64:	23 2d       	mov	r18, r3
     d66:	2f 7e       	andi	r18, 0xEF	; 239
     d68:	b2 2e       	mov	r11, r18
     d6a:	2a e0       	ldi	r18, 0x0A	; 10
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	25 c0       	rjmp	.+74     	; 0xdba <vfprintf+0x29e>
     d70:	93 2d       	mov	r25, r3
     d72:	99 7f       	andi	r25, 0xF9	; 249
     d74:	b9 2e       	mov	r11, r25
     d76:	8f 36       	cpi	r24, 0x6F	; 111
     d78:	c1 f0       	breq	.+48     	; 0xdaa <vfprintf+0x28e>
     d7a:	18 f4       	brcc	.+6      	; 0xd82 <vfprintf+0x266>
     d7c:	88 35       	cpi	r24, 0x58	; 88
     d7e:	79 f0       	breq	.+30     	; 0xd9e <vfprintf+0x282>
     d80:	b5 c0       	rjmp	.+362    	; 0xeec <vfprintf+0x3d0>
     d82:	80 37       	cpi	r24, 0x70	; 112
     d84:	19 f0       	breq	.+6      	; 0xd8c <vfprintf+0x270>
     d86:	88 37       	cpi	r24, 0x78	; 120
     d88:	21 f0       	breq	.+8      	; 0xd92 <vfprintf+0x276>
     d8a:	b0 c0       	rjmp	.+352    	; 0xeec <vfprintf+0x3d0>
     d8c:	e9 2f       	mov	r30, r25
     d8e:	e0 61       	ori	r30, 0x10	; 16
     d90:	be 2e       	mov	r11, r30
     d92:	b4 fe       	sbrs	r11, 4
     d94:	0d c0       	rjmp	.+26     	; 0xdb0 <vfprintf+0x294>
     d96:	fb 2d       	mov	r31, r11
     d98:	f4 60       	ori	r31, 0x04	; 4
     d9a:	bf 2e       	mov	r11, r31
     d9c:	09 c0       	rjmp	.+18     	; 0xdb0 <vfprintf+0x294>
     d9e:	34 fe       	sbrs	r3, 4
     da0:	0a c0       	rjmp	.+20     	; 0xdb6 <vfprintf+0x29a>
     da2:	29 2f       	mov	r18, r25
     da4:	26 60       	ori	r18, 0x06	; 6
     da6:	b2 2e       	mov	r11, r18
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <vfprintf+0x29a>
     daa:	28 e0       	ldi	r18, 0x08	; 8
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	05 c0       	rjmp	.+10     	; 0xdba <vfprintf+0x29e>
     db0:	20 e1       	ldi	r18, 0x10	; 16
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	02 c0       	rjmp	.+4      	; 0xdba <vfprintf+0x29e>
     db6:	20 e1       	ldi	r18, 0x10	; 16
     db8:	32 e0       	ldi	r19, 0x02	; 2
     dba:	f8 01       	movw	r30, r16
     dbc:	b7 fe       	sbrs	r11, 7
     dbe:	07 c0       	rjmp	.+14     	; 0xdce <vfprintf+0x2b2>
     dc0:	60 81       	ld	r22, Z
     dc2:	71 81       	ldd	r23, Z+1	; 0x01
     dc4:	82 81       	ldd	r24, Z+2	; 0x02
     dc6:	93 81       	ldd	r25, Z+3	; 0x03
     dc8:	0c 5f       	subi	r16, 0xFC	; 252
     dca:	1f 4f       	sbci	r17, 0xFF	; 255
     dcc:	06 c0       	rjmp	.+12     	; 0xdda <vfprintf+0x2be>
     dce:	60 81       	ld	r22, Z
     dd0:	71 81       	ldd	r23, Z+1	; 0x01
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 5f       	subi	r16, 0xFE	; 254
     dd8:	1f 4f       	sbci	r17, 0xFF	; 255
     dda:	a3 01       	movw	r20, r6
     ddc:	0e 94 2d 0b 	call	0x165a	; 0x165a <__ultoa_invert>
     de0:	88 2e       	mov	r8, r24
     de2:	86 18       	sub	r8, r6
     de4:	fb 2d       	mov	r31, r11
     de6:	ff 77       	andi	r31, 0x7F	; 127
     de8:	3f 2e       	mov	r3, r31
     dea:	36 fe       	sbrs	r3, 6
     dec:	0d c0       	rjmp	.+26     	; 0xe08 <vfprintf+0x2ec>
     dee:	23 2d       	mov	r18, r3
     df0:	2e 7f       	andi	r18, 0xFE	; 254
     df2:	a2 2e       	mov	r10, r18
     df4:	89 14       	cp	r8, r9
     df6:	58 f4       	brcc	.+22     	; 0xe0e <vfprintf+0x2f2>
     df8:	34 fe       	sbrs	r3, 4
     dfa:	0b c0       	rjmp	.+22     	; 0xe12 <vfprintf+0x2f6>
     dfc:	32 fc       	sbrc	r3, 2
     dfe:	09 c0       	rjmp	.+18     	; 0xe12 <vfprintf+0x2f6>
     e00:	83 2d       	mov	r24, r3
     e02:	8e 7e       	andi	r24, 0xEE	; 238
     e04:	a8 2e       	mov	r10, r24
     e06:	05 c0       	rjmp	.+10     	; 0xe12 <vfprintf+0x2f6>
     e08:	b8 2c       	mov	r11, r8
     e0a:	a3 2c       	mov	r10, r3
     e0c:	03 c0       	rjmp	.+6      	; 0xe14 <vfprintf+0x2f8>
     e0e:	b8 2c       	mov	r11, r8
     e10:	01 c0       	rjmp	.+2      	; 0xe14 <vfprintf+0x2f8>
     e12:	b9 2c       	mov	r11, r9
     e14:	a4 fe       	sbrs	r10, 4
     e16:	0f c0       	rjmp	.+30     	; 0xe36 <vfprintf+0x31a>
     e18:	fe 01       	movw	r30, r28
     e1a:	e8 0d       	add	r30, r8
     e1c:	f1 1d       	adc	r31, r1
     e1e:	80 81       	ld	r24, Z
     e20:	80 33       	cpi	r24, 0x30	; 48
     e22:	21 f4       	brne	.+8      	; 0xe2c <vfprintf+0x310>
     e24:	9a 2d       	mov	r25, r10
     e26:	99 7e       	andi	r25, 0xE9	; 233
     e28:	a9 2e       	mov	r10, r25
     e2a:	09 c0       	rjmp	.+18     	; 0xe3e <vfprintf+0x322>
     e2c:	a2 fe       	sbrs	r10, 2
     e2e:	06 c0       	rjmp	.+12     	; 0xe3c <vfprintf+0x320>
     e30:	b3 94       	inc	r11
     e32:	b3 94       	inc	r11
     e34:	04 c0       	rjmp	.+8      	; 0xe3e <vfprintf+0x322>
     e36:	8a 2d       	mov	r24, r10
     e38:	86 78       	andi	r24, 0x86	; 134
     e3a:	09 f0       	breq	.+2      	; 0xe3e <vfprintf+0x322>
     e3c:	b3 94       	inc	r11
     e3e:	a3 fc       	sbrc	r10, 3
     e40:	11 c0       	rjmp	.+34     	; 0xe64 <vfprintf+0x348>
     e42:	a0 fe       	sbrs	r10, 0
     e44:	06 c0       	rjmp	.+12     	; 0xe52 <vfprintf+0x336>
     e46:	b2 14       	cp	r11, r2
     e48:	88 f4       	brcc	.+34     	; 0xe6c <vfprintf+0x350>
     e4a:	28 0c       	add	r2, r8
     e4c:	92 2c       	mov	r9, r2
     e4e:	9b 18       	sub	r9, r11
     e50:	0e c0       	rjmp	.+28     	; 0xe6e <vfprintf+0x352>
     e52:	b2 14       	cp	r11, r2
     e54:	60 f4       	brcc	.+24     	; 0xe6e <vfprintf+0x352>
     e56:	b6 01       	movw	r22, r12
     e58:	80 e2       	ldi	r24, 0x20	; 32
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     e60:	b3 94       	inc	r11
     e62:	f7 cf       	rjmp	.-18     	; 0xe52 <vfprintf+0x336>
     e64:	b2 14       	cp	r11, r2
     e66:	18 f4       	brcc	.+6      	; 0xe6e <vfprintf+0x352>
     e68:	2b 18       	sub	r2, r11
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <vfprintf+0x354>
     e6c:	98 2c       	mov	r9, r8
     e6e:	21 2c       	mov	r2, r1
     e70:	a4 fe       	sbrs	r10, 4
     e72:	10 c0       	rjmp	.+32     	; 0xe94 <vfprintf+0x378>
     e74:	b6 01       	movw	r22, r12
     e76:	80 e3       	ldi	r24, 0x30	; 48
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     e7e:	a2 fe       	sbrs	r10, 2
     e80:	17 c0       	rjmp	.+46     	; 0xeb0 <vfprintf+0x394>
     e82:	a1 fc       	sbrc	r10, 1
     e84:	03 c0       	rjmp	.+6      	; 0xe8c <vfprintf+0x370>
     e86:	88 e7       	ldi	r24, 0x78	; 120
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	02 c0       	rjmp	.+4      	; 0xe90 <vfprintf+0x374>
     e8c:	88 e5       	ldi	r24, 0x58	; 88
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	b6 01       	movw	r22, r12
     e92:	0c c0       	rjmp	.+24     	; 0xeac <vfprintf+0x390>
     e94:	8a 2d       	mov	r24, r10
     e96:	86 78       	andi	r24, 0x86	; 134
     e98:	59 f0       	breq	.+22     	; 0xeb0 <vfprintf+0x394>
     e9a:	a1 fe       	sbrs	r10, 1
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <vfprintf+0x386>
     e9e:	8b e2       	ldi	r24, 0x2B	; 43
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <vfprintf+0x388>
     ea2:	80 e2       	ldi	r24, 0x20	; 32
     ea4:	a7 fc       	sbrc	r10, 7
     ea6:	8d e2       	ldi	r24, 0x2D	; 45
     ea8:	b6 01       	movw	r22, r12
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     eb0:	89 14       	cp	r8, r9
     eb2:	38 f4       	brcc	.+14     	; 0xec2 <vfprintf+0x3a6>
     eb4:	b6 01       	movw	r22, r12
     eb6:	80 e3       	ldi	r24, 0x30	; 48
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     ebe:	9a 94       	dec	r9
     ec0:	f7 cf       	rjmp	.-18     	; 0xeb0 <vfprintf+0x394>
     ec2:	8a 94       	dec	r8
     ec4:	f3 01       	movw	r30, r6
     ec6:	e8 0d       	add	r30, r8
     ec8:	f1 1d       	adc	r31, r1
     eca:	80 81       	ld	r24, Z
     ecc:	b6 01       	movw	r22, r12
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     ed4:	81 10       	cpse	r8, r1
     ed6:	f5 cf       	rjmp	.-22     	; 0xec2 <vfprintf+0x3a6>
     ed8:	22 20       	and	r2, r2
     eda:	09 f4       	brne	.+2      	; 0xede <vfprintf+0x3c2>
     edc:	42 ce       	rjmp	.-892    	; 0xb62 <vfprintf+0x46>
     ede:	b6 01       	movw	r22, r12
     ee0:	80 e2       	ldi	r24, 0x20	; 32
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <fputc>
     ee8:	2a 94       	dec	r2
     eea:	f6 cf       	rjmp	.-20     	; 0xed8 <vfprintf+0x3bc>
     eec:	f6 01       	movw	r30, r12
     eee:	86 81       	ldd	r24, Z+6	; 0x06
     ef0:	97 81       	ldd	r25, Z+7	; 0x07
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <vfprintf+0x3dc>
     ef4:	8f ef       	ldi	r24, 0xFF	; 255
     ef6:	9f ef       	ldi	r25, 0xFF	; 255
     ef8:	2b 96       	adiw	r28, 0x0b	; 11
     efa:	cd bf       	out	0x3d, r28	; 61
     efc:	de bf       	out	0x3e, r29	; 62
     efe:	df 91       	pop	r29
     f00:	cf 91       	pop	r28
     f02:	1f 91       	pop	r17
     f04:	0f 91       	pop	r16
     f06:	ff 90       	pop	r15
     f08:	ef 90       	pop	r14
     f0a:	df 90       	pop	r13
     f0c:	cf 90       	pop	r12
     f0e:	bf 90       	pop	r11
     f10:	af 90       	pop	r10
     f12:	9f 90       	pop	r9
     f14:	8f 90       	pop	r8
     f16:	7f 90       	pop	r7
     f18:	6f 90       	pop	r6
     f1a:	5f 90       	pop	r5
     f1c:	4f 90       	pop	r4
     f1e:	3f 90       	pop	r3
     f20:	2f 90       	pop	r2
     f22:	08 95       	ret

00000f24 <putval>:
     f24:	20 fd       	sbrc	r18, 0
     f26:	09 c0       	rjmp	.+18     	; 0xf3a <putval+0x16>
     f28:	fc 01       	movw	r30, r24
     f2a:	23 fd       	sbrc	r18, 3
     f2c:	05 c0       	rjmp	.+10     	; 0xf38 <putval+0x14>
     f2e:	22 ff       	sbrs	r18, 2
     f30:	02 c0       	rjmp	.+4      	; 0xf36 <putval+0x12>
     f32:	73 83       	std	Z+3, r23	; 0x03
     f34:	62 83       	std	Z+2, r22	; 0x02
     f36:	51 83       	std	Z+1, r21	; 0x01
     f38:	40 83       	st	Z, r20
     f3a:	08 95       	ret

00000f3c <mulacc>:
     f3c:	44 fd       	sbrc	r20, 4
     f3e:	17 c0       	rjmp	.+46     	; 0xf6e <mulacc+0x32>
     f40:	46 fd       	sbrc	r20, 6
     f42:	17 c0       	rjmp	.+46     	; 0xf72 <mulacc+0x36>
     f44:	ab 01       	movw	r20, r22
     f46:	bc 01       	movw	r22, r24
     f48:	da 01       	movw	r26, r20
     f4a:	fb 01       	movw	r30, r22
     f4c:	aa 0f       	add	r26, r26
     f4e:	bb 1f       	adc	r27, r27
     f50:	ee 1f       	adc	r30, r30
     f52:	ff 1f       	adc	r31, r31
     f54:	10 94       	com	r1
     f56:	d1 f7       	brne	.-12     	; 0xf4c <mulacc+0x10>
     f58:	4a 0f       	add	r20, r26
     f5a:	5b 1f       	adc	r21, r27
     f5c:	6e 1f       	adc	r22, r30
     f5e:	7f 1f       	adc	r23, r31
     f60:	cb 01       	movw	r24, r22
     f62:	ba 01       	movw	r22, r20
     f64:	66 0f       	add	r22, r22
     f66:	77 1f       	adc	r23, r23
     f68:	88 1f       	adc	r24, r24
     f6a:	99 1f       	adc	r25, r25
     f6c:	09 c0       	rjmp	.+18     	; 0xf80 <mulacc+0x44>
     f6e:	33 e0       	ldi	r19, 0x03	; 3
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <mulacc+0x38>
     f72:	34 e0       	ldi	r19, 0x04	; 4
     f74:	66 0f       	add	r22, r22
     f76:	77 1f       	adc	r23, r23
     f78:	88 1f       	adc	r24, r24
     f7a:	99 1f       	adc	r25, r25
     f7c:	31 50       	subi	r19, 0x01	; 1
     f7e:	d1 f7       	brne	.-12     	; 0xf74 <mulacc+0x38>
     f80:	62 0f       	add	r22, r18
     f82:	71 1d       	adc	r23, r1
     f84:	81 1d       	adc	r24, r1
     f86:	91 1d       	adc	r25, r1
     f88:	08 95       	ret

00000f8a <skip_spaces>:
     f8a:	0f 93       	push	r16
     f8c:	1f 93       	push	r17
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
     f92:	8c 01       	movw	r16, r24
     f94:	c8 01       	movw	r24, r16
     f96:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
     f9a:	ec 01       	movw	r28, r24
     f9c:	97 fd       	sbrc	r25, 7
     f9e:	08 c0       	rjmp	.+16     	; 0xfb0 <skip_spaces+0x26>
     fa0:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <isspace>
     fa4:	89 2b       	or	r24, r25
     fa6:	b1 f7       	brne	.-20     	; 0xf94 <skip_spaces+0xa>
     fa8:	b8 01       	movw	r22, r16
     faa:	ce 01       	movw	r24, r28
     fac:	0e 94 14 0b 	call	0x1628	; 0x1628 <ungetc>
     fb0:	ce 01       	movw	r24, r28
     fb2:	df 91       	pop	r29
     fb4:	cf 91       	pop	r28
     fb6:	1f 91       	pop	r17
     fb8:	0f 91       	pop	r16
     fba:	08 95       	ret

00000fbc <conv_int>:
     fbc:	8f 92       	push	r8
     fbe:	9f 92       	push	r9
     fc0:	af 92       	push	r10
     fc2:	bf 92       	push	r11
     fc4:	ef 92       	push	r14
     fc6:	ff 92       	push	r15
     fc8:	0f 93       	push	r16
     fca:	1f 93       	push	r17
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	8c 01       	movw	r16, r24
     fd2:	d6 2f       	mov	r29, r22
     fd4:	7a 01       	movw	r14, r20
     fd6:	b2 2e       	mov	r11, r18
     fd8:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
     fdc:	9c 01       	movw	r18, r24
     fde:	33 27       	eor	r19, r19
     fe0:	2b 32       	cpi	r18, 0x2B	; 43
     fe2:	31 05       	cpc	r19, r1
     fe4:	31 f0       	breq	.+12     	; 0xff2 <conv_int+0x36>
     fe6:	2d 32       	cpi	r18, 0x2D	; 45
     fe8:	31 05       	cpc	r19, r1
     fea:	61 f4       	brne	.+24     	; 0x1004 <conv_int+0x48>
     fec:	8b 2d       	mov	r24, r11
     fee:	80 68       	ori	r24, 0x80	; 128
     ff0:	b8 2e       	mov	r11, r24
     ff2:	d1 50       	subi	r29, 0x01	; 1
     ff4:	11 f4       	brne	.+4      	; 0xffa <conv_int+0x3e>
     ff6:	80 e0       	ldi	r24, 0x00	; 0
     ff8:	68 c0       	rjmp	.+208    	; 0x10ca <conv_int+0x10e>
     ffa:	c8 01       	movw	r24, r16
     ffc:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
    1000:	97 fd       	sbrc	r25, 7
    1002:	f9 cf       	rjmp	.-14     	; 0xff6 <conv_int+0x3a>
    1004:	cb 2d       	mov	r28, r11
    1006:	cd 7f       	andi	r28, 0xFD	; 253
    1008:	2b 2d       	mov	r18, r11
    100a:	20 73       	andi	r18, 0x30	; 48
    100c:	09 f5       	brne	.+66     	; 0x1050 <conv_int+0x94>
    100e:	80 33       	cpi	r24, 0x30	; 48
    1010:	f9 f4       	brne	.+62     	; 0x1050 <conv_int+0x94>
    1012:	aa 24       	eor	r10, r10
    1014:	aa 94       	dec	r10
    1016:	ad 0e       	add	r10, r29
    1018:	09 f4       	brne	.+2      	; 0x101c <conv_int+0x60>
    101a:	43 c0       	rjmp	.+134    	; 0x10a2 <conv_int+0xe6>
    101c:	c8 01       	movw	r24, r16
    101e:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
    1022:	97 fd       	sbrc	r25, 7
    1024:	3e c0       	rjmp	.+124    	; 0x10a2 <conv_int+0xe6>
    1026:	9c 01       	movw	r18, r24
    1028:	2f 7d       	andi	r18, 0xDF	; 223
    102a:	33 27       	eor	r19, r19
    102c:	28 35       	cpi	r18, 0x58	; 88
    102e:	31 05       	cpc	r19, r1
    1030:	49 f4       	brne	.+18     	; 0x1044 <conv_int+0x88>
    1032:	c2 64       	ori	r28, 0x42	; 66
    1034:	d2 50       	subi	r29, 0x02	; 2
    1036:	a9 f1       	breq	.+106    	; 0x10a2 <conv_int+0xe6>
    1038:	c8 01       	movw	r24, r16
    103a:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
    103e:	97 ff       	sbrs	r25, 7
    1040:	07 c0       	rjmp	.+14     	; 0x1050 <conv_int+0x94>
    1042:	2f c0       	rjmp	.+94     	; 0x10a2 <conv_int+0xe6>
    1044:	b6 fe       	sbrs	r11, 6
    1046:	02 c0       	rjmp	.+4      	; 0x104c <conv_int+0x90>
    1048:	c2 60       	ori	r28, 0x02	; 2
    104a:	01 c0       	rjmp	.+2      	; 0x104e <conv_int+0x92>
    104c:	c2 61       	ori	r28, 0x12	; 18
    104e:	da 2d       	mov	r29, r10
    1050:	81 2c       	mov	r8, r1
    1052:	91 2c       	mov	r9, r1
    1054:	54 01       	movw	r10, r8
    1056:	20 ed       	ldi	r18, 0xD0	; 208
    1058:	28 0f       	add	r18, r24
    105a:	28 30       	cpi	r18, 0x08	; 8
    105c:	80 f0       	brcs	.+32     	; 0x107e <conv_int+0xc2>
    105e:	c4 ff       	sbrs	r28, 4
    1060:	04 c0       	rjmp	.+8      	; 0x106a <conv_int+0xae>
    1062:	b8 01       	movw	r22, r16
    1064:	0e 94 14 0b 	call	0x1628	; 0x1628 <ungetc>
    1068:	19 c0       	rjmp	.+50     	; 0x109c <conv_int+0xe0>
    106a:	2a 30       	cpi	r18, 0x0A	; 10
    106c:	40 f0       	brcs	.+16     	; 0x107e <conv_int+0xc2>
    106e:	c6 ff       	sbrs	r28, 6
    1070:	f8 cf       	rjmp	.-16     	; 0x1062 <conv_int+0xa6>
    1072:	2f 7d       	andi	r18, 0xDF	; 223
    1074:	3f ee       	ldi	r19, 0xEF	; 239
    1076:	32 0f       	add	r19, r18
    1078:	36 30       	cpi	r19, 0x06	; 6
    107a:	98 f7       	brcc	.-26     	; 0x1062 <conv_int+0xa6>
    107c:	27 50       	subi	r18, 0x07	; 7
    107e:	4c 2f       	mov	r20, r28
    1080:	c5 01       	movw	r24, r10
    1082:	b4 01       	movw	r22, r8
    1084:	0e 94 9e 07 	call	0xf3c	; 0xf3c <mulacc>
    1088:	4b 01       	movw	r8, r22
    108a:	5c 01       	movw	r10, r24
    108c:	c2 60       	ori	r28, 0x02	; 2
    108e:	d1 50       	subi	r29, 0x01	; 1
    1090:	59 f0       	breq	.+22     	; 0x10a8 <conv_int+0xec>
    1092:	c8 01       	movw	r24, r16
    1094:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
    1098:	97 ff       	sbrs	r25, 7
    109a:	dd cf       	rjmp	.-70     	; 0x1056 <conv_int+0x9a>
    109c:	c1 fd       	sbrc	r28, 1
    109e:	04 c0       	rjmp	.+8      	; 0x10a8 <conv_int+0xec>
    10a0:	aa cf       	rjmp	.-172    	; 0xff6 <conv_int+0x3a>
    10a2:	81 2c       	mov	r8, r1
    10a4:	91 2c       	mov	r9, r1
    10a6:	54 01       	movw	r10, r8
    10a8:	c7 ff       	sbrs	r28, 7
    10aa:	08 c0       	rjmp	.+16     	; 0x10bc <conv_int+0x100>
    10ac:	b0 94       	com	r11
    10ae:	a0 94       	com	r10
    10b0:	90 94       	com	r9
    10b2:	80 94       	com	r8
    10b4:	81 1c       	adc	r8, r1
    10b6:	91 1c       	adc	r9, r1
    10b8:	a1 1c       	adc	r10, r1
    10ba:	b1 1c       	adc	r11, r1
    10bc:	2c 2f       	mov	r18, r28
    10be:	b5 01       	movw	r22, r10
    10c0:	a4 01       	movw	r20, r8
    10c2:	c7 01       	movw	r24, r14
    10c4:	0e 94 92 07 	call	0xf24	; 0xf24 <putval>
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	1f 91       	pop	r17
    10d0:	0f 91       	pop	r16
    10d2:	ff 90       	pop	r15
    10d4:	ef 90       	pop	r14
    10d6:	bf 90       	pop	r11
    10d8:	af 90       	pop	r10
    10da:	9f 90       	pop	r9
    10dc:	8f 90       	pop	r8
    10de:	08 95       	ret

000010e0 <conv_brk>:
    10e0:	5f 92       	push	r5
    10e2:	6f 92       	push	r6
    10e4:	7f 92       	push	r7
    10e6:	8f 92       	push	r8
    10e8:	9f 92       	push	r9
    10ea:	af 92       	push	r10
    10ec:	bf 92       	push	r11
    10ee:	cf 92       	push	r12
    10f0:	df 92       	push	r13
    10f2:	ef 92       	push	r14
    10f4:	ff 92       	push	r15
    10f6:	0f 93       	push	r16
    10f8:	1f 93       	push	r17
    10fa:	cf 93       	push	r28
    10fc:	df 93       	push	r29
    10fe:	cd b7       	in	r28, 0x3d	; 61
    1100:	de b7       	in	r29, 0x3e	; 62
    1102:	a0 97       	sbiw	r28, 0x20	; 32
    1104:	cd bf       	out	0x3d, r28	; 61
    1106:	de bf       	out	0x3e, r29	; 62
    1108:	5c 01       	movw	r10, r24
    110a:	96 2e       	mov	r9, r22
    110c:	7a 01       	movw	r14, r20
    110e:	f9 01       	movw	r30, r18
    1110:	8e 01       	movw	r16, r28
    1112:	0f 5f       	subi	r16, 0xFF	; 255
    1114:	1f 4f       	sbci	r17, 0xFF	; 255
    1116:	68 01       	movw	r12, r16
    1118:	80 e2       	ldi	r24, 0x20	; 32
    111a:	d8 01       	movw	r26, r16
    111c:	1d 92       	st	X+, r1
    111e:	8a 95       	dec	r24
    1120:	e9 f7       	brne	.-6      	; 0x111c <conv_brk+0x3c>
    1122:	d5 01       	movw	r26, r10
    1124:	13 96       	adiw	r26, 0x03	; 3
    1126:	8c 90       	ld	r8, X
    1128:	80 e0       	ldi	r24, 0x00	; 0
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	61 2c       	mov	r6, r1
    112e:	71 2c       	mov	r7, r1
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	61 e0       	ldi	r22, 0x01	; 1
    1134:	70 e0       	ldi	r23, 0x00	; 0
    1136:	83 fc       	sbrc	r8, 3
    1138:	25 91       	lpm	r18, Z+
    113a:	83 fe       	sbrs	r8, 3
    113c:	21 91       	ld	r18, Z+
    113e:	8f 01       	movw	r16, r30
    1140:	52 2e       	mov	r5, r18
    1142:	21 11       	cpse	r18, r1
    1144:	03 c0       	rjmp	.+6      	; 0x114c <conv_brk+0x6c>
    1146:	80 e0       	ldi	r24, 0x00	; 0
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	92 c0       	rjmp	.+292    	; 0x1270 <conv_brk+0x190>
    114c:	2e 35       	cpi	r18, 0x5E	; 94
    114e:	11 f4       	brne	.+4      	; 0x1154 <conv_brk+0x74>
    1150:	00 97       	sbiw	r24, 0x00	; 0
    1152:	51 f1       	breq	.+84     	; 0x11a8 <conv_brk+0xc8>
    1154:	43 2f       	mov	r20, r19
    1156:	50 e0       	ldi	r21, 0x00	; 0
    1158:	48 17       	cp	r20, r24
    115a:	59 07       	cpc	r21, r25
    115c:	3c f4       	brge	.+14     	; 0x116c <conv_brk+0x8c>
    115e:	2d 35       	cpi	r18, 0x5D	; 93
    1160:	59 f1       	breq	.+86     	; 0x11b8 <conv_brk+0xd8>
    1162:	2d 32       	cpi	r18, 0x2D	; 45
    1164:	19 f4       	brne	.+6      	; 0x116c <conv_brk+0x8c>
    1166:	77 20       	and	r7, r7
    1168:	09 f1       	breq	.+66     	; 0x11ac <conv_brk+0xcc>
    116a:	03 c0       	rjmp	.+6      	; 0x1172 <conv_brk+0x92>
    116c:	77 20       	and	r7, r7
    116e:	09 f4       	brne	.+2      	; 0x1172 <conv_brk+0x92>
    1170:	6a c0       	rjmp	.+212    	; 0x1246 <conv_brk+0x166>
    1172:	45 2d       	mov	r20, r5
    1174:	46 95       	lsr	r20
    1176:	46 95       	lsr	r20
    1178:	46 95       	lsr	r20
    117a:	d6 01       	movw	r26, r12
    117c:	a4 0f       	add	r26, r20
    117e:	b1 1d       	adc	r27, r1
    1180:	45 2d       	mov	r20, r5
    1182:	47 70       	andi	r20, 0x07	; 7
    1184:	8b 01       	movw	r16, r22
    1186:	02 c0       	rjmp	.+4      	; 0x118c <conv_brk+0xac>
    1188:	00 0f       	add	r16, r16
    118a:	11 1f       	adc	r17, r17
    118c:	4a 95       	dec	r20
    118e:	e2 f7       	brpl	.-8      	; 0x1188 <conv_brk+0xa8>
    1190:	a8 01       	movw	r20, r16
    1192:	5c 91       	ld	r21, X
    1194:	45 2b       	or	r20, r21
    1196:	4c 93       	st	X, r20
    1198:	65 14       	cp	r6, r5
    119a:	59 f0       	breq	.+22     	; 0x11b2 <conv_brk+0xd2>
    119c:	56 14       	cp	r5, r6
    119e:	10 f4       	brcc	.+4      	; 0x11a4 <conv_brk+0xc4>
    11a0:	53 94       	inc	r5
    11a2:	e7 cf       	rjmp	.-50     	; 0x1172 <conv_brk+0x92>
    11a4:	5a 94       	dec	r5
    11a6:	e5 cf       	rjmp	.-54     	; 0x1172 <conv_brk+0x92>
    11a8:	31 e0       	ldi	r19, 0x01	; 1
    11aa:	04 c0       	rjmp	.+8      	; 0x11b4 <conv_brk+0xd4>
    11ac:	77 24       	eor	r7, r7
    11ae:	73 94       	inc	r7
    11b0:	01 c0       	rjmp	.+2      	; 0x11b4 <conv_brk+0xd4>
    11b2:	71 2c       	mov	r7, r1
    11b4:	01 96       	adiw	r24, 0x01	; 1
    11b6:	bf cf       	rjmp	.-130    	; 0x1136 <conv_brk+0x56>
    11b8:	77 20       	and	r7, r7
    11ba:	19 f0       	breq	.+6      	; 0x11c2 <conv_brk+0xe2>
    11bc:	8e 81       	ldd	r24, Y+6	; 0x06
    11be:	80 62       	ori	r24, 0x20	; 32
    11c0:	8e 83       	std	Y+6, r24	; 0x06
    11c2:	31 11       	cpse	r19, r1
    11c4:	03 c0       	rjmp	.+6      	; 0x11cc <conv_brk+0xec>
    11c6:	88 24       	eor	r8, r8
    11c8:	83 94       	inc	r8
    11ca:	17 c0       	rjmp	.+46     	; 0x11fa <conv_brk+0x11a>
    11cc:	f6 01       	movw	r30, r12
    11ce:	9e 01       	movw	r18, r28
    11d0:	2f 5d       	subi	r18, 0xDF	; 223
    11d2:	3f 4f       	sbci	r19, 0xFF	; 255
    11d4:	80 81       	ld	r24, Z
    11d6:	80 95       	com	r24
    11d8:	81 93       	st	Z+, r24
    11da:	2e 17       	cp	r18, r30
    11dc:	3f 07       	cpc	r19, r31
    11de:	d1 f7       	brne	.-12     	; 0x11d4 <conv_brk+0xf4>
    11e0:	f2 cf       	rjmp	.-28     	; 0x11c6 <conv_brk+0xe6>
    11e2:	e1 14       	cp	r14, r1
    11e4:	f1 04       	cpc	r15, r1
    11e6:	29 f0       	breq	.+10     	; 0x11f2 <conv_brk+0x112>
    11e8:	d7 01       	movw	r26, r14
    11ea:	8c 93       	st	X, r24
    11ec:	f7 01       	movw	r30, r14
    11ee:	31 96       	adiw	r30, 0x01	; 1
    11f0:	7f 01       	movw	r14, r30
    11f2:	9a 94       	dec	r9
    11f4:	81 2c       	mov	r8, r1
    11f6:	99 20       	and	r9, r9
    11f8:	f9 f0       	breq	.+62     	; 0x1238 <conv_brk+0x158>
    11fa:	c5 01       	movw	r24, r10
    11fc:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
    1200:	97 fd       	sbrc	r25, 7
    1202:	18 c0       	rjmp	.+48     	; 0x1234 <conv_brk+0x154>
    1204:	fc 01       	movw	r30, r24
    1206:	ff 27       	eor	r31, r31
    1208:	23 e0       	ldi	r18, 0x03	; 3
    120a:	f5 95       	asr	r31
    120c:	e7 95       	ror	r30
    120e:	2a 95       	dec	r18
    1210:	e1 f7       	brne	.-8      	; 0x120a <conv_brk+0x12a>
    1212:	ec 0d       	add	r30, r12
    1214:	fd 1d       	adc	r31, r13
    1216:	20 81       	ld	r18, Z
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	ac 01       	movw	r20, r24
    121c:	47 70       	andi	r20, 0x07	; 7
    121e:	55 27       	eor	r21, r21
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <conv_brk+0x146>
    1222:	35 95       	asr	r19
    1224:	27 95       	ror	r18
    1226:	4a 95       	dec	r20
    1228:	e2 f7       	brpl	.-8      	; 0x1222 <conv_brk+0x142>
    122a:	20 fd       	sbrc	r18, 0
    122c:	da cf       	rjmp	.-76     	; 0x11e2 <conv_brk+0x102>
    122e:	b5 01       	movw	r22, r10
    1230:	0e 94 14 0b 	call	0x1628	; 0x1628 <ungetc>
    1234:	81 10       	cpse	r8, r1
    1236:	87 cf       	rjmp	.-242    	; 0x1146 <conv_brk+0x66>
    1238:	e1 14       	cp	r14, r1
    123a:	f1 04       	cpc	r15, r1
    123c:	11 f0       	breq	.+4      	; 0x1242 <conv_brk+0x162>
    123e:	d7 01       	movw	r26, r14
    1240:	1c 92       	st	X, r1
    1242:	c8 01       	movw	r24, r16
    1244:	15 c0       	rjmp	.+42     	; 0x1270 <conv_brk+0x190>
    1246:	42 2f       	mov	r20, r18
    1248:	46 95       	lsr	r20
    124a:	46 95       	lsr	r20
    124c:	46 95       	lsr	r20
    124e:	d6 01       	movw	r26, r12
    1250:	a4 0f       	add	r26, r20
    1252:	b1 1d       	adc	r27, r1
    1254:	42 2f       	mov	r20, r18
    1256:	47 70       	andi	r20, 0x07	; 7
    1258:	8b 01       	movw	r16, r22
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <conv_brk+0x180>
    125c:	00 0f       	add	r16, r16
    125e:	11 1f       	adc	r17, r17
    1260:	4a 95       	dec	r20
    1262:	e2 f7       	brpl	.-8      	; 0x125c <conv_brk+0x17c>
    1264:	a8 01       	movw	r20, r16
    1266:	5c 91       	ld	r21, X
    1268:	45 2b       	or	r20, r21
    126a:	4c 93       	st	X, r20
    126c:	62 2e       	mov	r6, r18
    126e:	a2 cf       	rjmp	.-188    	; 0x11b4 <conv_brk+0xd4>
    1270:	a0 96       	adiw	r28, 0x20	; 32
    1272:	cd bf       	out	0x3d, r28	; 61
    1274:	de bf       	out	0x3e, r29	; 62
    1276:	df 91       	pop	r29
    1278:	cf 91       	pop	r28
    127a:	1f 91       	pop	r17
    127c:	0f 91       	pop	r16
    127e:	ff 90       	pop	r15
    1280:	ef 90       	pop	r14
    1282:	df 90       	pop	r13
    1284:	cf 90       	pop	r12
    1286:	bf 90       	pop	r11
    1288:	af 90       	pop	r10
    128a:	9f 90       	pop	r9
    128c:	8f 90       	pop	r8
    128e:	7f 90       	pop	r7
    1290:	6f 90       	pop	r6
    1292:	5f 90       	pop	r5
    1294:	08 95       	ret

00001296 <vfscanf>:
    1296:	5f 92       	push	r5
    1298:	6f 92       	push	r6
    129a:	7f 92       	push	r7
    129c:	8f 92       	push	r8
    129e:	9f 92       	push	r9
    12a0:	af 92       	push	r10
    12a2:	bf 92       	push	r11
    12a4:	cf 92       	push	r12
    12a6:	df 92       	push	r13
    12a8:	ef 92       	push	r14
    12aa:	ff 92       	push	r15
    12ac:	0f 93       	push	r16
    12ae:	1f 93       	push	r17
    12b0:	cf 93       	push	r28
    12b2:	df 93       	push	r29
    12b4:	6c 01       	movw	r12, r24
    12b6:	eb 01       	movw	r28, r22
    12b8:	5a 01       	movw	r10, r20
    12ba:	fc 01       	movw	r30, r24
    12bc:	16 82       	std	Z+6, r1	; 0x06
    12be:	17 82       	std	Z+7, r1	; 0x07
    12c0:	51 2c       	mov	r5, r1
    12c2:	f6 01       	movw	r30, r12
    12c4:	e3 80       	ldd	r14, Z+3	; 0x03
    12c6:	fe 01       	movw	r30, r28
    12c8:	e3 fc       	sbrc	r14, 3
    12ca:	85 91       	lpm	r24, Z+
    12cc:	e3 fe       	sbrs	r14, 3
    12ce:	81 91       	ld	r24, Z+
    12d0:	18 2f       	mov	r17, r24
    12d2:	ef 01       	movw	r28, r30
    12d4:	88 23       	and	r24, r24
    12d6:	09 f4       	brne	.+2      	; 0x12da <vfscanf+0x44>
    12d8:	ee c0       	rjmp	.+476    	; 0x14b6 <vfscanf+0x220>
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <isspace>
    12e0:	89 2b       	or	r24, r25
    12e2:	21 f0       	breq	.+8      	; 0x12ec <vfscanf+0x56>
    12e4:	c6 01       	movw	r24, r12
    12e6:	0e 94 c5 07 	call	0xf8a	; 0xf8a <skip_spaces>
    12ea:	eb cf       	rjmp	.-42     	; 0x12c2 <vfscanf+0x2c>
    12ec:	15 32       	cpi	r17, 0x25	; 37
    12ee:	41 f4       	brne	.+16     	; 0x1300 <vfscanf+0x6a>
    12f0:	fe 01       	movw	r30, r28
    12f2:	e3 fc       	sbrc	r14, 3
    12f4:	15 91       	lpm	r17, Z+
    12f6:	e3 fe       	sbrs	r14, 3
    12f8:	11 91       	ld	r17, Z+
    12fa:	ef 01       	movw	r28, r30
    12fc:	15 32       	cpi	r17, 0x25	; 37
    12fe:	81 f4       	brne	.+32     	; 0x1320 <vfscanf+0x8a>
    1300:	c6 01       	movw	r24, r12
    1302:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
    1306:	97 fd       	sbrc	r25, 7
    1308:	d4 c0       	rjmp	.+424    	; 0x14b2 <vfscanf+0x21c>
    130a:	41 2f       	mov	r20, r17
    130c:	50 e0       	ldi	r21, 0x00	; 0
    130e:	9c 01       	movw	r18, r24
    1310:	33 27       	eor	r19, r19
    1312:	24 17       	cp	r18, r20
    1314:	35 07       	cpc	r19, r21
    1316:	a9 f2       	breq	.-86     	; 0x12c2 <vfscanf+0x2c>
    1318:	b6 01       	movw	r22, r12
    131a:	0e 94 14 0b 	call	0x1628	; 0x1628 <ungetc>
    131e:	cb c0       	rjmp	.+406    	; 0x14b6 <vfscanf+0x220>
    1320:	1a 32       	cpi	r17, 0x2A	; 42
    1322:	39 f4       	brne	.+14     	; 0x1332 <vfscanf+0x9c>
    1324:	e3 fc       	sbrc	r14, 3
    1326:	15 91       	lpm	r17, Z+
    1328:	e3 fe       	sbrs	r14, 3
    132a:	11 91       	ld	r17, Z+
    132c:	ef 01       	movw	r28, r30
    132e:	01 e0       	ldi	r16, 0x01	; 1
    1330:	01 c0       	rjmp	.+2      	; 0x1334 <vfscanf+0x9e>
    1332:	00 e0       	ldi	r16, 0x00	; 0
    1334:	f1 2c       	mov	r15, r1
    1336:	20 ed       	ldi	r18, 0xD0	; 208
    1338:	21 0f       	add	r18, r17
    133a:	2a 30       	cpi	r18, 0x0A	; 10
    133c:	80 f4       	brcc	.+32     	; 0x135e <vfscanf+0xc8>
    133e:	02 60       	ori	r16, 0x02	; 2
    1340:	6f 2d       	mov	r22, r15
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	80 e0       	ldi	r24, 0x00	; 0
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	40 e2       	ldi	r20, 0x20	; 32
    134a:	0e 94 9e 07 	call	0xf3c	; 0xf3c <mulacc>
    134e:	f6 2e       	mov	r15, r22
    1350:	fe 01       	movw	r30, r28
    1352:	e3 fc       	sbrc	r14, 3
    1354:	15 91       	lpm	r17, Z+
    1356:	e3 fe       	sbrs	r14, 3
    1358:	11 91       	ld	r17, Z+
    135a:	ef 01       	movw	r28, r30
    135c:	ec cf       	rjmp	.-40     	; 0x1336 <vfscanf+0xa0>
    135e:	01 ff       	sbrs	r16, 1
    1360:	03 c0       	rjmp	.+6      	; 0x1368 <vfscanf+0xd2>
    1362:	f1 10       	cpse	r15, r1
    1364:	03 c0       	rjmp	.+6      	; 0x136c <vfscanf+0xd6>
    1366:	a7 c0       	rjmp	.+334    	; 0x14b6 <vfscanf+0x220>
    1368:	ff 24       	eor	r15, r15
    136a:	fa 94       	dec	r15
    136c:	18 36       	cpi	r17, 0x68	; 104
    136e:	19 f0       	breq	.+6      	; 0x1376 <vfscanf+0xe0>
    1370:	1c 36       	cpi	r17, 0x6C	; 108
    1372:	51 f0       	breq	.+20     	; 0x1388 <vfscanf+0xf2>
    1374:	10 c0       	rjmp	.+32     	; 0x1396 <vfscanf+0x100>
    1376:	fe 01       	movw	r30, r28
    1378:	e3 fc       	sbrc	r14, 3
    137a:	15 91       	lpm	r17, Z+
    137c:	e3 fe       	sbrs	r14, 3
    137e:	11 91       	ld	r17, Z+
    1380:	ef 01       	movw	r28, r30
    1382:	18 36       	cpi	r17, 0x68	; 104
    1384:	41 f4       	brne	.+16     	; 0x1396 <vfscanf+0x100>
    1386:	08 60       	ori	r16, 0x08	; 8
    1388:	04 60       	ori	r16, 0x04	; 4
    138a:	fe 01       	movw	r30, r28
    138c:	e3 fc       	sbrc	r14, 3
    138e:	15 91       	lpm	r17, Z+
    1390:	e3 fe       	sbrs	r14, 3
    1392:	11 91       	ld	r17, Z+
    1394:	ef 01       	movw	r28, r30
    1396:	11 23       	and	r17, r17
    1398:	09 f4       	brne	.+2      	; 0x139c <vfscanf+0x106>
    139a:	8d c0       	rjmp	.+282    	; 0x14b6 <vfscanf+0x220>
    139c:	61 2f       	mov	r22, r17
    139e:	70 e0       	ldi	r23, 0x00	; 0
    13a0:	84 ef       	ldi	r24, 0xF4	; 244
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <strchr_P>
    13a8:	89 2b       	or	r24, r25
    13aa:	09 f4       	brne	.+2      	; 0x13ae <vfscanf+0x118>
    13ac:	84 c0       	rjmp	.+264    	; 0x14b6 <vfscanf+0x220>
    13ae:	00 fd       	sbrc	r16, 0
    13b0:	07 c0       	rjmp	.+14     	; 0x13c0 <vfscanf+0x12a>
    13b2:	f5 01       	movw	r30, r10
    13b4:	80 80       	ld	r8, Z
    13b6:	91 80       	ldd	r9, Z+1	; 0x01
    13b8:	c5 01       	movw	r24, r10
    13ba:	02 96       	adiw	r24, 0x02	; 2
    13bc:	5c 01       	movw	r10, r24
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <vfscanf+0x12e>
    13c0:	81 2c       	mov	r8, r1
    13c2:	91 2c       	mov	r9, r1
    13c4:	1e 36       	cpi	r17, 0x6E	; 110
    13c6:	51 f4       	brne	.+20     	; 0x13dc <vfscanf+0x146>
    13c8:	f6 01       	movw	r30, r12
    13ca:	46 81       	ldd	r20, Z+6	; 0x06
    13cc:	57 81       	ldd	r21, Z+7	; 0x07
    13ce:	60 e0       	ldi	r22, 0x00	; 0
    13d0:	70 e0       	ldi	r23, 0x00	; 0
    13d2:	20 2f       	mov	r18, r16
    13d4:	c4 01       	movw	r24, r8
    13d6:	0e 94 92 07 	call	0xf24	; 0xf24 <putval>
    13da:	73 cf       	rjmp	.-282    	; 0x12c2 <vfscanf+0x2c>
    13dc:	13 36       	cpi	r17, 0x63	; 99
    13de:	a9 f4       	brne	.+42     	; 0x140a <vfscanf+0x174>
    13e0:	01 fd       	sbrc	r16, 1
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <vfscanf+0x152>
    13e4:	ff 24       	eor	r15, r15
    13e6:	f3 94       	inc	r15
    13e8:	c6 01       	movw	r24, r12
    13ea:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
    13ee:	97 fd       	sbrc	r25, 7
    13f0:	60 c0       	rjmp	.+192    	; 0x14b2 <vfscanf+0x21c>
    13f2:	81 14       	cp	r8, r1
    13f4:	91 04       	cpc	r9, r1
    13f6:	29 f0       	breq	.+10     	; 0x1402 <vfscanf+0x16c>
    13f8:	f4 01       	movw	r30, r8
    13fa:	80 83       	st	Z, r24
    13fc:	c4 01       	movw	r24, r8
    13fe:	01 96       	adiw	r24, 0x01	; 1
    1400:	4c 01       	movw	r8, r24
    1402:	fa 94       	dec	r15
    1404:	f1 10       	cpse	r15, r1
    1406:	f0 cf       	rjmp	.-32     	; 0x13e8 <vfscanf+0x152>
    1408:	50 c0       	rjmp	.+160    	; 0x14aa <vfscanf+0x214>
    140a:	1b 35       	cpi	r17, 0x5B	; 91
    140c:	59 f4       	brne	.+22     	; 0x1424 <vfscanf+0x18e>
    140e:	9e 01       	movw	r18, r28
    1410:	a4 01       	movw	r20, r8
    1412:	6f 2d       	mov	r22, r15
    1414:	c6 01       	movw	r24, r12
    1416:	0e 94 70 08 	call	0x10e0	; 0x10e0 <conv_brk>
    141a:	ec 01       	movw	r28, r24
    141c:	89 2b       	or	r24, r25
    141e:	09 f0       	breq	.+2      	; 0x1422 <vfscanf+0x18c>
    1420:	44 c0       	rjmp	.+136    	; 0x14aa <vfscanf+0x214>
    1422:	3e c0       	rjmp	.+124    	; 0x14a0 <vfscanf+0x20a>
    1424:	c6 01       	movw	r24, r12
    1426:	0e 94 c5 07 	call	0xf8a	; 0xf8a <skip_spaces>
    142a:	97 fd       	sbrc	r25, 7
    142c:	42 c0       	rjmp	.+132    	; 0x14b2 <vfscanf+0x21c>
    142e:	1f 36       	cpi	r17, 0x6F	; 111
    1430:	61 f1       	breq	.+88     	; 0x148a <vfscanf+0x1f4>
    1432:	28 f4       	brcc	.+10     	; 0x143e <vfscanf+0x1a8>
    1434:	14 36       	cpi	r17, 0x64	; 100
    1436:	39 f1       	breq	.+78     	; 0x1486 <vfscanf+0x1f0>
    1438:	19 36       	cpi	r17, 0x69	; 105
    143a:	51 f1       	breq	.+84     	; 0x1490 <vfscanf+0x1fa>
    143c:	28 c0       	rjmp	.+80     	; 0x148e <vfscanf+0x1f8>
    143e:	13 37       	cpi	r17, 0x73	; 115
    1440:	71 f0       	breq	.+28     	; 0x145e <vfscanf+0x1c8>
    1442:	15 37       	cpi	r17, 0x75	; 117
    1444:	01 f1       	breq	.+64     	; 0x1486 <vfscanf+0x1f0>
    1446:	23 c0       	rjmp	.+70     	; 0x148e <vfscanf+0x1f8>
    1448:	81 14       	cp	r8, r1
    144a:	91 04       	cpc	r9, r1
    144c:	29 f0       	breq	.+10     	; 0x1458 <vfscanf+0x1c2>
    144e:	f4 01       	movw	r30, r8
    1450:	60 82       	st	Z, r6
    1452:	c4 01       	movw	r24, r8
    1454:	01 96       	adiw	r24, 0x01	; 1
    1456:	4c 01       	movw	r8, r24
    1458:	fa 94       	dec	r15
    145a:	ff 20       	and	r15, r15
    145c:	71 f0       	breq	.+28     	; 0x147a <vfscanf+0x1e4>
    145e:	c6 01       	movw	r24, r12
    1460:	0e 94 9a 0a 	call	0x1534	; 0x1534 <fgetc>
    1464:	3c 01       	movw	r6, r24
    1466:	97 fd       	sbrc	r25, 7
    1468:	08 c0       	rjmp	.+16     	; 0x147a <vfscanf+0x1e4>
    146a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <isspace>
    146e:	89 2b       	or	r24, r25
    1470:	59 f3       	breq	.-42     	; 0x1448 <vfscanf+0x1b2>
    1472:	b6 01       	movw	r22, r12
    1474:	c3 01       	movw	r24, r6
    1476:	0e 94 14 0b 	call	0x1628	; 0x1628 <ungetc>
    147a:	81 14       	cp	r8, r1
    147c:	91 04       	cpc	r9, r1
    147e:	a9 f0       	breq	.+42     	; 0x14aa <vfscanf+0x214>
    1480:	f4 01       	movw	r30, r8
    1482:	10 82       	st	Z, r1
    1484:	12 c0       	rjmp	.+36     	; 0x14aa <vfscanf+0x214>
    1486:	00 62       	ori	r16, 0x20	; 32
    1488:	03 c0       	rjmp	.+6      	; 0x1490 <vfscanf+0x1fa>
    148a:	00 61       	ori	r16, 0x10	; 16
    148c:	01 c0       	rjmp	.+2      	; 0x1490 <vfscanf+0x1fa>
    148e:	00 64       	ori	r16, 0x40	; 64
    1490:	20 2f       	mov	r18, r16
    1492:	a4 01       	movw	r20, r8
    1494:	6f 2d       	mov	r22, r15
    1496:	c6 01       	movw	r24, r12
    1498:	0e 94 de 07 	call	0xfbc	; 0xfbc <conv_int>
    149c:	81 11       	cpse	r24, r1
    149e:	05 c0       	rjmp	.+10     	; 0x14aa <vfscanf+0x214>
    14a0:	f6 01       	movw	r30, r12
    14a2:	83 81       	ldd	r24, Z+3	; 0x03
    14a4:	80 73       	andi	r24, 0x30	; 48
    14a6:	29 f4       	brne	.+10     	; 0x14b2 <vfscanf+0x21c>
    14a8:	06 c0       	rjmp	.+12     	; 0x14b6 <vfscanf+0x220>
    14aa:	00 fd       	sbrc	r16, 0
    14ac:	0a cf       	rjmp	.-492    	; 0x12c2 <vfscanf+0x2c>
    14ae:	53 94       	inc	r5
    14b0:	08 cf       	rjmp	.-496    	; 0x12c2 <vfscanf+0x2c>
    14b2:	55 20       	and	r5, r5
    14b4:	19 f0       	breq	.+6      	; 0x14bc <vfscanf+0x226>
    14b6:	85 2d       	mov	r24, r5
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	02 c0       	rjmp	.+4      	; 0x14c0 <vfscanf+0x22a>
    14bc:	8f ef       	ldi	r24, 0xFF	; 255
    14be:	9f ef       	ldi	r25, 0xFF	; 255
    14c0:	df 91       	pop	r29
    14c2:	cf 91       	pop	r28
    14c4:	1f 91       	pop	r17
    14c6:	0f 91       	pop	r16
    14c8:	ff 90       	pop	r15
    14ca:	ef 90       	pop	r14
    14cc:	df 90       	pop	r13
    14ce:	cf 90       	pop	r12
    14d0:	bf 90       	pop	r11
    14d2:	af 90       	pop	r10
    14d4:	9f 90       	pop	r9
    14d6:	8f 90       	pop	r8
    14d8:	7f 90       	pop	r7
    14da:	6f 90       	pop	r6
    14dc:	5f 90       	pop	r5
    14de:	08 95       	ret

000014e0 <isspace>:
    14e0:	91 11       	cpse	r25, r1
    14e2:	0c 94 8b 0b 	jmp	0x1716	; 0x1716 <__ctype_isfalse>
    14e6:	80 32       	cpi	r24, 0x20	; 32
    14e8:	19 f0       	breq	.+6      	; 0x14f0 <isspace+0x10>
    14ea:	89 50       	subi	r24, 0x09	; 9
    14ec:	85 50       	subi	r24, 0x05	; 5
    14ee:	c8 f7       	brcc	.-14     	; 0x14e2 <isspace+0x2>
    14f0:	08 95       	ret

000014f2 <strchr_P>:
    14f2:	fc 01       	movw	r30, r24
    14f4:	05 90       	lpm	r0, Z+
    14f6:	06 16       	cp	r0, r22
    14f8:	21 f0       	breq	.+8      	; 0x1502 <strchr_P+0x10>
    14fa:	00 20       	and	r0, r0
    14fc:	d9 f7       	brne	.-10     	; 0x14f4 <strchr_P+0x2>
    14fe:	c0 01       	movw	r24, r0
    1500:	08 95       	ret
    1502:	31 97       	sbiw	r30, 0x01	; 1
    1504:	cf 01       	movw	r24, r30
    1506:	08 95       	ret

00001508 <strnlen_P>:
    1508:	fc 01       	movw	r30, r24
    150a:	05 90       	lpm	r0, Z+
    150c:	61 50       	subi	r22, 0x01	; 1
    150e:	70 40       	sbci	r23, 0x00	; 0
    1510:	01 10       	cpse	r0, r1
    1512:	d8 f7       	brcc	.-10     	; 0x150a <strnlen_P+0x2>
    1514:	80 95       	com	r24
    1516:	90 95       	com	r25
    1518:	8e 0f       	add	r24, r30
    151a:	9f 1f       	adc	r25, r31
    151c:	08 95       	ret

0000151e <strnlen>:
    151e:	fc 01       	movw	r30, r24
    1520:	61 50       	subi	r22, 0x01	; 1
    1522:	70 40       	sbci	r23, 0x00	; 0
    1524:	01 90       	ld	r0, Z+
    1526:	01 10       	cpse	r0, r1
    1528:	d8 f7       	brcc	.-10     	; 0x1520 <strnlen+0x2>
    152a:	80 95       	com	r24
    152c:	90 95       	com	r25
    152e:	8e 0f       	add	r24, r30
    1530:	9f 1f       	adc	r25, r31
    1532:	08 95       	ret

00001534 <fgetc>:
    1534:	cf 93       	push	r28
    1536:	df 93       	push	r29
    1538:	ec 01       	movw	r28, r24
    153a:	2b 81       	ldd	r18, Y+3	; 0x03
    153c:	20 ff       	sbrs	r18, 0
    153e:	33 c0       	rjmp	.+102    	; 0x15a6 <fgetc+0x72>
    1540:	26 ff       	sbrs	r18, 6
    1542:	0a c0       	rjmp	.+20     	; 0x1558 <fgetc+0x24>
    1544:	2f 7b       	andi	r18, 0xBF	; 191
    1546:	2b 83       	std	Y+3, r18	; 0x03
    1548:	8e 81       	ldd	r24, Y+6	; 0x06
    154a:	9f 81       	ldd	r25, Y+7	; 0x07
    154c:	01 96       	adiw	r24, 0x01	; 1
    154e:	8e 83       	std	Y+6, r24	; 0x06
    1550:	9f 83       	std	Y+7, r25	; 0x07
    1552:	8a 81       	ldd	r24, Y+2	; 0x02
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	29 c0       	rjmp	.+82     	; 0x15aa <fgetc+0x76>
    1558:	22 ff       	sbrs	r18, 2
    155a:	0f c0       	rjmp	.+30     	; 0x157a <fgetc+0x46>
    155c:	e8 81       	ld	r30, Y
    155e:	f9 81       	ldd	r31, Y+1	; 0x01
    1560:	80 81       	ld	r24, Z
    1562:	08 2e       	mov	r0, r24
    1564:	00 0c       	add	r0, r0
    1566:	99 0b       	sbc	r25, r25
    1568:	00 97       	sbiw	r24, 0x00	; 0
    156a:	19 f4       	brne	.+6      	; 0x1572 <fgetc+0x3e>
    156c:	20 62       	ori	r18, 0x20	; 32
    156e:	2b 83       	std	Y+3, r18	; 0x03
    1570:	1a c0       	rjmp	.+52     	; 0x15a6 <fgetc+0x72>
    1572:	31 96       	adiw	r30, 0x01	; 1
    1574:	e8 83       	st	Y, r30
    1576:	f9 83       	std	Y+1, r31	; 0x01
    1578:	0e c0       	rjmp	.+28     	; 0x1596 <fgetc+0x62>
    157a:	ea 85       	ldd	r30, Y+10	; 0x0a
    157c:	fb 85       	ldd	r31, Y+11	; 0x0b
    157e:	09 95       	icall
    1580:	97 ff       	sbrs	r25, 7
    1582:	09 c0       	rjmp	.+18     	; 0x1596 <fgetc+0x62>
    1584:	2b 81       	ldd	r18, Y+3	; 0x03
    1586:	01 96       	adiw	r24, 0x01	; 1
    1588:	11 f0       	breq	.+4      	; 0x158e <fgetc+0x5a>
    158a:	80 e2       	ldi	r24, 0x20	; 32
    158c:	01 c0       	rjmp	.+2      	; 0x1590 <fgetc+0x5c>
    158e:	80 e1       	ldi	r24, 0x10	; 16
    1590:	82 2b       	or	r24, r18
    1592:	8b 83       	std	Y+3, r24	; 0x03
    1594:	08 c0       	rjmp	.+16     	; 0x15a6 <fgetc+0x72>
    1596:	2e 81       	ldd	r18, Y+6	; 0x06
    1598:	3f 81       	ldd	r19, Y+7	; 0x07
    159a:	2f 5f       	subi	r18, 0xFF	; 255
    159c:	3f 4f       	sbci	r19, 0xFF	; 255
    159e:	2e 83       	std	Y+6, r18	; 0x06
    15a0:	3f 83       	std	Y+7, r19	; 0x07
    15a2:	99 27       	eor	r25, r25
    15a4:	02 c0       	rjmp	.+4      	; 0x15aa <fgetc+0x76>
    15a6:	8f ef       	ldi	r24, 0xFF	; 255
    15a8:	9f ef       	ldi	r25, 0xFF	; 255
    15aa:	df 91       	pop	r29
    15ac:	cf 91       	pop	r28
    15ae:	08 95       	ret

000015b0 <fputc>:
    15b0:	0f 93       	push	r16
    15b2:	1f 93       	push	r17
    15b4:	cf 93       	push	r28
    15b6:	df 93       	push	r29
    15b8:	fb 01       	movw	r30, r22
    15ba:	23 81       	ldd	r18, Z+3	; 0x03
    15bc:	21 fd       	sbrc	r18, 1
    15be:	03 c0       	rjmp	.+6      	; 0x15c6 <fputc+0x16>
    15c0:	8f ef       	ldi	r24, 0xFF	; 255
    15c2:	9f ef       	ldi	r25, 0xFF	; 255
    15c4:	2c c0       	rjmp	.+88     	; 0x161e <fputc+0x6e>
    15c6:	22 ff       	sbrs	r18, 2
    15c8:	16 c0       	rjmp	.+44     	; 0x15f6 <fputc+0x46>
    15ca:	46 81       	ldd	r20, Z+6	; 0x06
    15cc:	57 81       	ldd	r21, Z+7	; 0x07
    15ce:	24 81       	ldd	r18, Z+4	; 0x04
    15d0:	35 81       	ldd	r19, Z+5	; 0x05
    15d2:	42 17       	cp	r20, r18
    15d4:	53 07       	cpc	r21, r19
    15d6:	44 f4       	brge	.+16     	; 0x15e8 <fputc+0x38>
    15d8:	a0 81       	ld	r26, Z
    15da:	b1 81       	ldd	r27, Z+1	; 0x01
    15dc:	9d 01       	movw	r18, r26
    15de:	2f 5f       	subi	r18, 0xFF	; 255
    15e0:	3f 4f       	sbci	r19, 0xFF	; 255
    15e2:	20 83       	st	Z, r18
    15e4:	31 83       	std	Z+1, r19	; 0x01
    15e6:	8c 93       	st	X, r24
    15e8:	26 81       	ldd	r18, Z+6	; 0x06
    15ea:	37 81       	ldd	r19, Z+7	; 0x07
    15ec:	2f 5f       	subi	r18, 0xFF	; 255
    15ee:	3f 4f       	sbci	r19, 0xFF	; 255
    15f0:	26 83       	std	Z+6, r18	; 0x06
    15f2:	37 83       	std	Z+7, r19	; 0x07
    15f4:	14 c0       	rjmp	.+40     	; 0x161e <fputc+0x6e>
    15f6:	8b 01       	movw	r16, r22
    15f8:	ec 01       	movw	r28, r24
    15fa:	fb 01       	movw	r30, r22
    15fc:	00 84       	ldd	r0, Z+8	; 0x08
    15fe:	f1 85       	ldd	r31, Z+9	; 0x09
    1600:	e0 2d       	mov	r30, r0
    1602:	09 95       	icall
    1604:	89 2b       	or	r24, r25
    1606:	e1 f6       	brne	.-72     	; 0x15c0 <fputc+0x10>
    1608:	d8 01       	movw	r26, r16
    160a:	16 96       	adiw	r26, 0x06	; 6
    160c:	8d 91       	ld	r24, X+
    160e:	9c 91       	ld	r25, X
    1610:	17 97       	sbiw	r26, 0x07	; 7
    1612:	01 96       	adiw	r24, 0x01	; 1
    1614:	16 96       	adiw	r26, 0x06	; 6
    1616:	8d 93       	st	X+, r24
    1618:	9c 93       	st	X, r25
    161a:	17 97       	sbiw	r26, 0x07	; 7
    161c:	ce 01       	movw	r24, r28
    161e:	df 91       	pop	r29
    1620:	cf 91       	pop	r28
    1622:	1f 91       	pop	r17
    1624:	0f 91       	pop	r16
    1626:	08 95       	ret

00001628 <ungetc>:
    1628:	fb 01       	movw	r30, r22
    162a:	23 81       	ldd	r18, Z+3	; 0x03
    162c:	20 ff       	sbrs	r18, 0
    162e:	12 c0       	rjmp	.+36     	; 0x1654 <ungetc+0x2c>
    1630:	26 fd       	sbrc	r18, 6
    1632:	10 c0       	rjmp	.+32     	; 0x1654 <ungetc+0x2c>
    1634:	8f 3f       	cpi	r24, 0xFF	; 255
    1636:	3f ef       	ldi	r19, 0xFF	; 255
    1638:	93 07       	cpc	r25, r19
    163a:	61 f0       	breq	.+24     	; 0x1654 <ungetc+0x2c>
    163c:	82 83       	std	Z+2, r24	; 0x02
    163e:	2f 7d       	andi	r18, 0xDF	; 223
    1640:	20 64       	ori	r18, 0x40	; 64
    1642:	23 83       	std	Z+3, r18	; 0x03
    1644:	26 81       	ldd	r18, Z+6	; 0x06
    1646:	37 81       	ldd	r19, Z+7	; 0x07
    1648:	21 50       	subi	r18, 0x01	; 1
    164a:	31 09       	sbc	r19, r1
    164c:	26 83       	std	Z+6, r18	; 0x06
    164e:	37 83       	std	Z+7, r19	; 0x07
    1650:	99 27       	eor	r25, r25
    1652:	08 95       	ret
    1654:	8f ef       	ldi	r24, 0xFF	; 255
    1656:	9f ef       	ldi	r25, 0xFF	; 255
    1658:	08 95       	ret

0000165a <__ultoa_invert>:
    165a:	fa 01       	movw	r30, r20
    165c:	aa 27       	eor	r26, r26
    165e:	28 30       	cpi	r18, 0x08	; 8
    1660:	51 f1       	breq	.+84     	; 0x16b6 <__ultoa_invert+0x5c>
    1662:	20 31       	cpi	r18, 0x10	; 16
    1664:	81 f1       	breq	.+96     	; 0x16c6 <__ultoa_invert+0x6c>
    1666:	e8 94       	clt
    1668:	6f 93       	push	r22
    166a:	6e 7f       	andi	r22, 0xFE	; 254
    166c:	6e 5f       	subi	r22, 0xFE	; 254
    166e:	7f 4f       	sbci	r23, 0xFF	; 255
    1670:	8f 4f       	sbci	r24, 0xFF	; 255
    1672:	9f 4f       	sbci	r25, 0xFF	; 255
    1674:	af 4f       	sbci	r26, 0xFF	; 255
    1676:	b1 e0       	ldi	r27, 0x01	; 1
    1678:	3e d0       	rcall	.+124    	; 0x16f6 <__ultoa_invert+0x9c>
    167a:	b4 e0       	ldi	r27, 0x04	; 4
    167c:	3c d0       	rcall	.+120    	; 0x16f6 <__ultoa_invert+0x9c>
    167e:	67 0f       	add	r22, r23
    1680:	78 1f       	adc	r23, r24
    1682:	89 1f       	adc	r24, r25
    1684:	9a 1f       	adc	r25, r26
    1686:	a1 1d       	adc	r26, r1
    1688:	68 0f       	add	r22, r24
    168a:	79 1f       	adc	r23, r25
    168c:	8a 1f       	adc	r24, r26
    168e:	91 1d       	adc	r25, r1
    1690:	a1 1d       	adc	r26, r1
    1692:	6a 0f       	add	r22, r26
    1694:	71 1d       	adc	r23, r1
    1696:	81 1d       	adc	r24, r1
    1698:	91 1d       	adc	r25, r1
    169a:	a1 1d       	adc	r26, r1
    169c:	20 d0       	rcall	.+64     	; 0x16de <__ultoa_invert+0x84>
    169e:	09 f4       	brne	.+2      	; 0x16a2 <__ultoa_invert+0x48>
    16a0:	68 94       	set
    16a2:	3f 91       	pop	r19
    16a4:	2a e0       	ldi	r18, 0x0A	; 10
    16a6:	26 9f       	mul	r18, r22
    16a8:	11 24       	eor	r1, r1
    16aa:	30 19       	sub	r19, r0
    16ac:	30 5d       	subi	r19, 0xD0	; 208
    16ae:	31 93       	st	Z+, r19
    16b0:	de f6       	brtc	.-74     	; 0x1668 <__ultoa_invert+0xe>
    16b2:	cf 01       	movw	r24, r30
    16b4:	08 95       	ret
    16b6:	46 2f       	mov	r20, r22
    16b8:	47 70       	andi	r20, 0x07	; 7
    16ba:	40 5d       	subi	r20, 0xD0	; 208
    16bc:	41 93       	st	Z+, r20
    16be:	b3 e0       	ldi	r27, 0x03	; 3
    16c0:	0f d0       	rcall	.+30     	; 0x16e0 <__ultoa_invert+0x86>
    16c2:	c9 f7       	brne	.-14     	; 0x16b6 <__ultoa_invert+0x5c>
    16c4:	f6 cf       	rjmp	.-20     	; 0x16b2 <__ultoa_invert+0x58>
    16c6:	46 2f       	mov	r20, r22
    16c8:	4f 70       	andi	r20, 0x0F	; 15
    16ca:	40 5d       	subi	r20, 0xD0	; 208
    16cc:	4a 33       	cpi	r20, 0x3A	; 58
    16ce:	18 f0       	brcs	.+6      	; 0x16d6 <__ultoa_invert+0x7c>
    16d0:	49 5d       	subi	r20, 0xD9	; 217
    16d2:	31 fd       	sbrc	r19, 1
    16d4:	40 52       	subi	r20, 0x20	; 32
    16d6:	41 93       	st	Z+, r20
    16d8:	02 d0       	rcall	.+4      	; 0x16de <__ultoa_invert+0x84>
    16da:	a9 f7       	brne	.-22     	; 0x16c6 <__ultoa_invert+0x6c>
    16dc:	ea cf       	rjmp	.-44     	; 0x16b2 <__ultoa_invert+0x58>
    16de:	b4 e0       	ldi	r27, 0x04	; 4
    16e0:	a6 95       	lsr	r26
    16e2:	97 95       	ror	r25
    16e4:	87 95       	ror	r24
    16e6:	77 95       	ror	r23
    16e8:	67 95       	ror	r22
    16ea:	ba 95       	dec	r27
    16ec:	c9 f7       	brne	.-14     	; 0x16e0 <__ultoa_invert+0x86>
    16ee:	00 97       	sbiw	r24, 0x00	; 0
    16f0:	61 05       	cpc	r22, r1
    16f2:	71 05       	cpc	r23, r1
    16f4:	08 95       	ret
    16f6:	9b 01       	movw	r18, r22
    16f8:	ac 01       	movw	r20, r24
    16fa:	0a 2e       	mov	r0, r26
    16fc:	06 94       	lsr	r0
    16fe:	57 95       	ror	r21
    1700:	47 95       	ror	r20
    1702:	37 95       	ror	r19
    1704:	27 95       	ror	r18
    1706:	ba 95       	dec	r27
    1708:	c9 f7       	brne	.-14     	; 0x16fc <__ultoa_invert+0xa2>
    170a:	62 0f       	add	r22, r18
    170c:	73 1f       	adc	r23, r19
    170e:	84 1f       	adc	r24, r20
    1710:	95 1f       	adc	r25, r21
    1712:	a0 1d       	adc	r26, r0
    1714:	08 95       	ret

00001716 <__ctype_isfalse>:
    1716:	99 27       	eor	r25, r25
    1718:	88 27       	eor	r24, r24

0000171a <__ctype_istrue>:
    171a:	08 95       	ret

0000171c <_exit>:
    171c:	f8 94       	cli

0000171e <__stop_program>:
    171e:	ff cf       	rjmp	.-2      	; 0x171e <__stop_program>
