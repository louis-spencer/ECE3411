
Lab_Test_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00804000  00001b68  00001bfc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b68  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000062  00804056  00804056  00001c52  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c52  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cb0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00001cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005dc6  00000000  00000000  00001eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003504  00000000  00000000  00007c76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001175  00000000  00000000  0000b17a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000440  00000000  00000000  0000c2f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000285a  00000000  00000000  0000c730  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012b2  00000000  00000000  0000ef8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0001023c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f7 00 	jmp	0x1ee	; 0x1ee <__ctors_end>
       4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
       8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
       c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      68:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      6c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      70:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      74:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      78:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      7c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      80:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      84:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      88:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      90:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      94:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      98:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      9c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      b4:	0c 94 4b 03 	jmp	0x696	; 0x696 <__vector_45>
      b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      bc:	0c 94 f4 02 	jmp	0x5e8	; 0x5e8 <__vector_47>
      c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>

000000f4 <__trampolines_end>:
      f4:	00 40       	sbci	r16, 0x00	; 0
      f6:	7a 10       	cpse	r7, r10
      f8:	f3 5a       	subi	r31, 0xA3	; 163
      fa:	00 a0       	ldd	r0, Z+32	; 0x20
      fc:	72 4e       	sbci	r23, 0xE2	; 226
      fe:	18 09       	sbc	r17, r8
     100:	00 10       	cpse	r0, r0
     102:	a5 d4       	rcall	.+2378   	; 0xa4e <uart_getchar+0x5c>
     104:	e8 00       	.word	0x00e8	; ????
     106:	00 e8       	ldi	r16, 0x80	; 128
     108:	76 48       	sbci	r23, 0x86	; 134
     10a:	17 00       	.word	0x0017	; ????
     10c:	00 e4       	ldi	r16, 0x40	; 64
     10e:	0b 54       	subi	r16, 0x4B	; 75
     110:	02 00       	.word	0x0002	; ????
     112:	00 ca       	rjmp	.-3072   	; 0xfffff514 <__eeprom_end+0xff7ef514>
     114:	9a 3b       	cpi	r25, 0xBA	; 186
     116:	00 00       	nop
     118:	00 e1       	ldi	r16, 0x10	; 16
     11a:	f5 05       	cpc	r31, r5
     11c:	00 00       	nop
     11e:	80 96       	adiw	r24, 0x20	; 32
     120:	98 00       	.word	0x0098	; ????
     122:	00 00       	nop
     124:	40 42       	sbci	r20, 0x20	; 32
     126:	0f 00       	.word	0x000f	; ????
     128:	00 00       	nop
     12a:	a0 86       	std	Z+8, r10	; 0x08
     12c:	01 00       	.word	0x0001	; ????
     12e:	00 00       	nop
     130:	10 27       	eor	r17, r16
     132:	00 00       	nop
     134:	00 00       	nop
     136:	e8 03       	fmulsu	r22, r16
     138:	00 00       	nop
     13a:	00 00       	nop
     13c:	64 00       	.word	0x0064	; ????
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	0a 00       	.word	0x000a	; ????
     144:	00 00       	nop
     146:	00 00       	nop
     148:	01 00       	.word	0x0001	; ????
     14a:	00 00       	nop
     14c:	00 00       	nop
     14e:	2c 76       	andi	r18, 0x6C	; 108
     150:	d8 88       	ldd	r13, Y+16	; 0x10
     152:	dc 67       	ori	r29, 0x7C	; 124
     154:	4f 08       	sbc	r4, r15
     156:	23 df       	rcall	.-442    	; 0xffffff9e <__eeprom_end+0xff7eff9e>
     158:	c1 df       	rcall	.-126    	; 0xdc <__SREG__+0x9d>
     15a:	ae 59       	subi	r26, 0x9E	; 158
     15c:	e1 b1       	in	r30, 0x01	; 1
     15e:	b7 96       	adiw	r30, 0x27	; 39
     160:	e5 e3       	ldi	r30, 0x35	; 53
     162:	e4 53       	subi	r30, 0x34	; 52
     164:	c6 3a       	cpi	r28, 0xA6	; 166
     166:	e6 51       	subi	r30, 0x16	; 22
     168:	99 76       	andi	r25, 0x69	; 105
     16a:	96 e8       	ldi	r25, 0x86	; 134
     16c:	e6 c2       	rjmp	.+1484   	; 0x73a <TWI_Address+0x46>
     16e:	84 26       	eor	r8, r20
     170:	eb 89       	ldd	r30, Y+19	; 0x13
     172:	8c 9b       	sbis	0x11, 4	; 17
     174:	62 ed       	ldi	r22, 0xD2	; 210
     176:	40 7c       	andi	r20, 0xC0	; 192
     178:	6f fc       	.word	0xfc6f	; ????
     17a:	ef bc       	out	0x2f, r14	; 47
     17c:	9c 9f       	mul	r25, r28
     17e:	40 f2       	brcs	.-112    	; 0x110 <__trampolines_end+0x1c>
     180:	ba a5       	ldd	r27, Y+42	; 0x2a
     182:	6f a5       	ldd	r22, Y+47	; 0x2f
     184:	f4 90       	lpm	r15, Z
     186:	05 5a       	subi	r16, 0xA5	; 165
     188:	2a f7       	brpl	.-54     	; 0x154 <__trampolines_end+0x60>
     18a:	5c 93       	st	X, r21
     18c:	6b 6c       	ori	r22, 0xCB	; 203
     18e:	f9 67       	ori	r31, 0x79	; 121
     190:	6d c1       	rjmp	.+730    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     192:	1b fc       	.word	0xfc1b	; ????
     194:	e0 e4       	ldi	r30, 0x40	; 64
     196:	0d 47       	sbci	r16, 0x7D	; 125
     198:	fe f5       	brtc	.+126    	; 0x218 <__do_clear_bss+0x4>
     19a:	20 e6       	ldi	r18, 0x60	; 96
     19c:	b5 00       	.word	0x00b5	; ????
     19e:	d0 ed       	ldi	r29, 0xD0	; 208
     1a0:	90 2e       	mov	r9, r16
     1a2:	03 00       	.word	0x0003	; ????
     1a4:	94 35       	cpi	r25, 0x54	; 84
     1a6:	77 05       	cpc	r23, r7
     1a8:	00 80       	ld	r0, Z
     1aa:	84 1e       	adc	r8, r20
     1ac:	08 00       	.word	0x0008	; ????
     1ae:	00 20       	and	r0, r0
     1b0:	4e 0a       	sbc	r4, r30
     1b2:	00 00       	nop
     1b4:	00 c8       	rjmp	.-4096   	; 0xfffff1b6 <__eeprom_end+0xff7ef1b6>
     1b6:	0c 33       	cpi	r16, 0x3C	; 60
     1b8:	33 33       	cpi	r19, 0x33	; 51
     1ba:	33 0f       	add	r19, r19
     1bc:	98 6e       	ori	r25, 0xE8	; 232
     1be:	12 83       	std	Z+2, r17	; 0x02
     1c0:	11 41       	sbci	r17, 0x11	; 17
     1c2:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1c4:	21 14       	cp	r2, r1
     1c6:	89 3b       	cpi	r24, 0xB9	; 185
     1c8:	e6 55       	subi	r30, 0x56	; 86
     1ca:	16 cf       	rjmp	.-468    	; 0xfffffff8 <__eeprom_end+0xff7efff8>
     1cc:	fe e6       	ldi	r31, 0x6E	; 110
     1ce:	db 18       	sub	r13, r11
     1d0:	d1 84       	ldd	r13, Z+9	; 0x09
     1d2:	4b 38       	cpi	r20, 0x8B	; 139
     1d4:	1b f7       	brvc	.-58     	; 0x19c <__trampolines_end+0xa8>
     1d6:	7c 1d       	adc	r23, r12
     1d8:	90 1d       	adc	r25, r0
     1da:	a4 bb       	out	0x14, r26	; 20
     1dc:	e4 24       	eor	r14, r4
     1de:	20 32       	cpi	r18, 0x20	; 32
     1e0:	84 72       	andi	r24, 0x24	; 36
     1e2:	5e 22       	and	r5, r30
     1e4:	81 00       	.word	0x0081	; ????
     1e6:	c9 f1       	breq	.+114    	; 0x25a <init_TCA0+0xe>
     1e8:	24 ec       	ldi	r18, 0xC4	; 196
     1ea:	a1 e5       	ldi	r26, 0x51	; 81
     1ec:	3d 27       	eor	r19, r29

000001ee <__ctors_end>:
     1ee:	11 24       	eor	r1, r1
     1f0:	1f be       	out	0x3f, r1	; 63
     1f2:	cf ef       	ldi	r28, 0xFF	; 255
     1f4:	cd bf       	out	0x3d, r28	; 61
     1f6:	df e7       	ldi	r29, 0x7F	; 127
     1f8:	de bf       	out	0x3e, r29	; 62

000001fa <__do_copy_data>:
     1fa:	10 e4       	ldi	r17, 0x40	; 64
     1fc:	a0 e0       	ldi	r26, 0x00	; 0
     1fe:	b0 e4       	ldi	r27, 0x40	; 64
     200:	e8 e6       	ldi	r30, 0x68	; 104
     202:	fb e1       	ldi	r31, 0x1B	; 27
     204:	00 e0       	ldi	r16, 0x00	; 0
     206:	0b bf       	out	0x3b, r16	; 59
     208:	02 c0       	rjmp	.+4      	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
     20a:	07 90       	elpm	r0, Z+
     20c:	0d 92       	st	X+, r0
     20e:	a6 35       	cpi	r26, 0x56	; 86
     210:	b1 07       	cpc	r27, r17
     212:	d9 f7       	brne	.-10     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>

00000214 <__do_clear_bss>:
     214:	20 e4       	ldi	r18, 0x40	; 64
     216:	a6 e5       	ldi	r26, 0x56	; 86
     218:	b0 e4       	ldi	r27, 0x40	; 64
     21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
     21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
     21e:	a8 3b       	cpi	r26, 0xB8	; 184
     220:	b2 07       	cpc	r27, r18
     222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
     224:	0e 94 78 01 	call	0x2f0	; 0x2f0 <main>
     228:	0c 94 b2 0d 	jmp	0x1b64	; 0x1b64 <_exit>

0000022c <__bad_interrupt>:
     22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <init_clock>:
#define DEBOUNCE_TIME 50
#define BTN5 (!(VPORTB.IN & PIN5_bm))

void init_btn(void) {
	PORTB.PIN5CTRL |= PORT_ISC_RISING_gc;
	PORTB.DIRCLR = PIN5_bm;
     230:	88 ed       	ldi	r24, 0xD8	; 216
     232:	84 bf       	out	0x34, r24	; 52
     234:	e0 e6       	ldi	r30, 0x60	; 96
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	95 e0       	ldi	r25, 0x05	; 5
     23a:	90 a3       	std	Z+32, r25	; 0x20
     23c:	84 bf       	out	0x34, r24	; 52
     23e:	83 e0       	ldi	r24, 0x03	; 3
     240:	80 83       	st	Z, r24
     242:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     246:	84 ff       	sbrs	r24, 4
     248:	fc cf       	rjmp	.-8      	; 0x242 <init_clock+0x12>
     24a:	08 95       	ret

0000024c <init_TCA0>:
     24c:	e0 e0       	ldi	r30, 0x00	; 0
     24e:	fa e0       	ldi	r31, 0x0A	; 10
     250:	83 e0       	ldi	r24, 0x03	; 3
     252:	81 83       	std	Z+1, r24	; 0x01
     254:	80 81       	ld	r24, Z
     256:	84 60       	ori	r24, 0x04	; 4
     258:	80 83       	st	Z, r24
     25a:	8f ef       	ldi	r24, 0xFF	; 255
     25c:	9f e0       	ldi	r25, 0x0F	; 15
     25e:	86 a3       	std	Z+38, r24	; 0x26
     260:	97 a3       	std	Z+39, r25	; 0x27
     262:	14 a6       	std	Z+44, r1	; 0x2c
     264:	15 a6       	std	Z+45, r1	; 0x2d
     266:	81 81       	ldd	r24, Z+1	; 0x01
     268:	80 64       	ori	r24, 0x40	; 64
     26a:	81 83       	std	Z+1, r24	; 0x01
     26c:	a0 ee       	ldi	r26, 0xE0	; 224
     26e:	b5 e0       	ldi	r27, 0x05	; 5
     270:	16 96       	adiw	r26, 0x06	; 6
     272:	8c 91       	ld	r24, X
     274:	16 97       	sbiw	r26, 0x06	; 6
     276:	82 60       	ori	r24, 0x02	; 2
     278:	16 96       	adiw	r26, 0x06	; 6
     27a:	8c 93       	st	X, r24
     27c:	a0 e4       	ldi	r26, 0x40	; 64
     27e:	b4 e0       	ldi	r27, 0x04	; 4
     280:	11 96       	adiw	r26, 0x01	; 1
     282:	8c 91       	ld	r24, X
     284:	11 97       	sbiw	r26, 0x01	; 1
     286:	84 60       	ori	r24, 0x04	; 4
     288:	11 96       	adiw	r26, 0x01	; 1
     28a:	8c 93       	st	X, r24
     28c:	80 81       	ld	r24, Z
     28e:	81 60       	ori	r24, 0x01	; 1
     290:	80 83       	st	Z, r24
     292:	08 95       	ret

00000294 <init_TCA1>:
     294:	e0 e4       	ldi	r30, 0x40	; 64
     296:	fa e0       	ldi	r31, 0x0A	; 10
     298:	11 82       	std	Z+1, r1	; 0x01
     29a:	80 81       	ld	r24, Z
     29c:	86 60       	ori	r24, 0x06	; 6
     29e:	80 83       	st	Z, r24
     2a0:	8f ec       	ldi	r24, 0xCF	; 207
     2a2:	97 e0       	ldi	r25, 0x07	; 7
     2a4:	86 a3       	std	Z+38, r24	; 0x26
     2a6:	97 a3       	std	Z+39, r25	; 0x27
     2a8:	81 e0       	ldi	r24, 0x01	; 1
     2aa:	82 87       	std	Z+10, r24	; 0x0a
     2ac:	80 81       	ld	r24, Z
     2ae:	81 60       	ori	r24, 0x01	; 1
     2b0:	80 83       	st	Z, r24
     2b2:	08 95       	ret

000002b4 <init_ADC0>:
     2b4:	e0 e0       	ldi	r30, 0x00	; 0
     2b6:	f6 e0       	ldi	r31, 0x06	; 6
     2b8:	88 e0       	ldi	r24, 0x08	; 8
     2ba:	80 87       	std	Z+8, r24	; 0x08
     2bc:	82 e0       	ldi	r24, 0x02	; 2
     2be:	82 83       	std	Z+2, r24	; 0x02
     2c0:	80 e2       	ldi	r24, 0x20	; 32
     2c2:	83 83       	std	Z+3, r24	; 0x03
     2c4:	85 e0       	ldi	r24, 0x05	; 5
     2c6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
     2ca:	81 e0       	ldi	r24, 0x01	; 1
     2cc:	80 83       	st	Z, r24
     2ce:	80 91 0a 06 	lds	r24, 0x060A	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
     2d2:	80 fd       	sbrc	r24, 0
     2d4:	fc cf       	rjmp	.-8      	; 0x2ce <init_ADC0+0x1a>
     2d6:	08 95       	ret

000002d8 <start_ADC0>:
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
     2de:	08 95       	ret

000002e0 <read_i2c_temp>:
     2e0:	60 e0       	ldi	r22, 0x00	; 0
     2e2:	88 e4       	ldi	r24, 0x48	; 72
     2e4:	0e 94 bc 03 	call	0x778	; 0x778 <TWI_Host_Write>
     2e8:	88 e4       	ldi	r24, 0x48	; 72
     2ea:	0e 94 c8 03 	call	0x790	; 0x790 <TWI_Host_Read>
     2ee:	08 95       	ret

000002f0 <main>:
int tempr_thresh = 24;
state_t waveform_state = ZERO;


int main(void)
{
     2f0:	cf 93       	push	r28
     2f2:	df 93       	push	r29
     2f4:	00 d0       	rcall	.+0      	; 0x2f6 <main+0x6>
     2f6:	cd b7       	in	r28, 0x3d	; 61
     2f8:	de b7       	in	r29, 0x3e	; 62
    init_clock();
     2fa:	0e 94 18 01 	call	0x230	; 0x230 <init_clock>
	init_TCA1();
     2fe:	0e 94 4a 01 	call	0x294	; 0x294 <init_TCA1>
	init_TCA0();
     302:	0e 94 26 01 	call	0x24c	; 0x24c <init_TCA0>
	init_ADC0();
     306:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <init_ADC0>
	
	LCDinitialize();
     30a:	0e 94 03 04 	call	0x806	; 0x806 <LCDinitialize>
	PORTA.PIN2CTRL |= PORT_PULLUPEN_bm;
     30e:	e0 e0       	ldi	r30, 0x00	; 0
     310:	f4 e0       	ldi	r31, 0x04	; 4
     312:	82 89       	ldd	r24, Z+18	; 0x12
     314:	88 60       	ori	r24, 0x08	; 8
     316:	82 8b       	std	Z+18, r24	; 0x12
	PORTA.PIN3CTRL |= PORT_PULLUPEN_bm;
     318:	83 89       	ldd	r24, Z+19	; 0x13
     31a:	88 60       	ori	r24, 0x08	; 8
     31c:	83 8b       	std	Z+19, r24	; 0x13
	
	uart_init(3, 9600, NULL);
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	40 e8       	ldi	r20, 0x80	; 128
     324:	55 e2       	ldi	r21, 0x25	; 37
     326:	60 e0       	ldi	r22, 0x00	; 0
     328:	70 e0       	ldi	r23, 0x00	; 0
     32a:	83 e0       	ldi	r24, 0x03	; 3
     32c:	0e 94 bc 05 	call	0xb78	; 0xb78 <uart_init>
	
	sei();
     330:	78 94       	sei
    while (1) 
    {
		if (print_counter >= 200) {
     332:	80 91 5e 40 	lds	r24, 0x405E	; 0x80405e <print_counter>
     336:	90 91 5f 40 	lds	r25, 0x405F	; 0x80405f <print_counter+0x1>
     33a:	88 3c       	cpi	r24, 0xC8	; 200
     33c:	91 05       	cpc	r25, r1
     33e:	08 f4       	brcc	.+2      	; 0x342 <main+0x52>
     340:	88 c0       	rjmp	.+272    	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
			start_ADC0();
     342:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <start_ADC0>
		
			LCDclr();
     346:	0e 94 4f 04 	call	0x89e	; 0x89e <LCDclr>
			print_counter = 0;
     34a:	10 92 5e 40 	sts	0x405E, r1	; 0x80405e <print_counter>
     34e:	10 92 5f 40 	sts	0x405F, r1	; 0x80405f <print_counter+0x1>
			tempr_data = read_i2c_temp();
     352:	0e 94 70 01 	call	0x2e0	; 0x2e0 <read_i2c_temp>
     356:	80 93 57 40 	sts	0x4057, r24	; 0x804057 <tempr_data>
			
			char strbuf[2];
			dtostrf(tempr_data, 2, 0, strbuf);
     35a:	68 2f       	mov	r22, r24
     35c:	70 e0       	ldi	r23, 0x00	; 0
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	0e 94 f2 06 	call	0xde4	; 0xde4 <__floatunsisf>
     366:	8e 01       	movw	r16, r28
     368:	0f 5f       	subi	r16, 0xFF	; 255
     36a:	1f 4f       	sbci	r17, 0xFF	; 255
     36c:	20 e0       	ldi	r18, 0x00	; 0
     36e:	42 e0       	ldi	r20, 0x02	; 2
     370:	0e 94 0f 08 	call	0x101e	; 0x101e <dtostrf>
			
			printf("%d %d %d %d\t", tempr_data, millis, tempr_thresh, (int)tempr_stdby);
     374:	80 91 5c 40 	lds	r24, 0x405C	; 0x80405c <millis>
     378:	90 91 5d 40 	lds	r25, 0x405D	; 0x80405d <millis+0x1>
     37c:	20 91 58 40 	lds	r18, 0x4058	; 0x804058 <tempr_stdby>
     380:	1f 92       	push	r1
     382:	2f 93       	push	r18
     384:	20 91 01 40 	lds	r18, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
     388:	2f 93       	push	r18
     38a:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     38e:	2f 93       	push	r18
     390:	9f 93       	push	r25
     392:	8f 93       	push	r24
     394:	80 91 57 40 	lds	r24, 0x4057	; 0x804057 <tempr_data>
     398:	1f 92       	push	r1
     39a:	8f 93       	push	r24
     39c:	80 e1       	ldi	r24, 0x10	; 16
     39e:	90 e4       	ldi	r25, 0x40	; 64
     3a0:	9f 93       	push	r25
     3a2:	8f 93       	push	r24
     3a4:	0e 94 71 08 	call	0x10e2	; 0x10e2 <printf>
			if (waveform_state == ZERO) printf("zero\n");
     3a8:	80 91 56 40 	lds	r24, 0x4056	; 0x804056 <__data_end>
     3ac:	cd bf       	out	0x3d, r28	; 61
     3ae:	de bf       	out	0x3e, r29	; 62
     3b0:	81 11       	cpse	r24, r1
     3b2:	05 c0       	rjmp	.+10     	; 0x3be <main+0xce>
     3b4:	8d e1       	ldi	r24, 0x1D	; 29
     3b6:	90 e4       	ldi	r25, 0x40	; 64
     3b8:	0e 94 85 08 	call	0x110a	; 0x110a <puts>
     3bc:	14 c0       	rjmp	.+40     	; 0x3e6 <main+0xf6>
			else if (waveform_state == RISING) printf("rising\n");
     3be:	81 30       	cpi	r24, 0x01	; 1
     3c0:	29 f4       	brne	.+10     	; 0x3cc <main+0xdc>
     3c2:	82 e2       	ldi	r24, 0x22	; 34
     3c4:	90 e4       	ldi	r25, 0x40	; 64
     3c6:	0e 94 85 08 	call	0x110a	; 0x110a <puts>
     3ca:	0d c0       	rjmp	.+26     	; 0x3e6 <main+0xf6>
			else if (waveform_state == TOP) printf("top\n");
     3cc:	82 30       	cpi	r24, 0x02	; 2
     3ce:	29 f4       	brne	.+10     	; 0x3da <main+0xea>
     3d0:	89 e2       	ldi	r24, 0x29	; 41
     3d2:	90 e4       	ldi	r25, 0x40	; 64
     3d4:	0e 94 85 08 	call	0x110a	; 0x110a <puts>
     3d8:	06 c0       	rjmp	.+12     	; 0x3e6 <main+0xf6>
			else if (waveform_state == FALLING) printf("falling\n");
     3da:	83 30       	cpi	r24, 0x03	; 3
     3dc:	21 f4       	brne	.+8      	; 0x3e6 <main+0xf6>
     3de:	8d e2       	ldi	r24, 0x2D	; 45
     3e0:	90 e4       	ldi	r25, 0x40	; 64
     3e2:	0e 94 85 08 	call	0x110a	; 0x110a <puts>
			
			LCDstring("TC74: ");
     3e6:	85 e3       	ldi	r24, 0x35	; 53
     3e8:	90 e4       	ldi	r25, 0x40	; 64
     3ea:	0e 94 59 04 	call	0x8b2	; 0x8b2 <LCDstring>
			LCDstring(strbuf);
     3ee:	ce 01       	movw	r24, r28
     3f0:	01 96       	adiw	r24, 0x01	; 1
     3f2:	0e 94 59 04 	call	0x8b2	; 0x8b2 <LCDstring>
			LCDstring("C");
     3f6:	8c e3       	ldi	r24, 0x3C	; 60
     3f8:	90 e4       	ldi	r25, 0x40	; 64
     3fa:	0e 94 59 04 	call	0x8b2	; 0x8b2 <LCDstring>
			if (tempr_stdby > 0) LCDstring(" *");
     3fe:	80 91 58 40 	lds	r24, 0x4058	; 0x804058 <tempr_stdby>
     402:	88 23       	and	r24, r24
     404:	21 f0       	breq	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     406:	8e e3       	ldi	r24, 0x3E	; 62
     408:	90 e4       	ldi	r25, 0x40	; 64
     40a:	0e 94 59 04 	call	0x8b2	; 0x8b2 <LCDstring>
			
			memset(strbuf, NULL, 2);
     40e:	19 82       	std	Y+1, r1	; 0x01
     410:	1a 82       	std	Y+2, r1	; 0x02
			dtostrf(tempr_thresh, 2, 0, strbuf);
     412:	60 91 00 40 	lds	r22, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     416:	70 91 01 40 	lds	r23, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
     41a:	07 2e       	mov	r0, r23
     41c:	00 0c       	add	r0, r0
     41e:	88 0b       	sbc	r24, r24
     420:	99 0b       	sbc	r25, r25
     422:	0e 94 f4 06 	call	0xde8	; 0xde8 <__floatsisf>
     426:	8e 01       	movw	r16, r28
     428:	0f 5f       	subi	r16, 0xFF	; 255
     42a:	1f 4f       	sbci	r17, 0xFF	; 255
     42c:	20 e0       	ldi	r18, 0x00	; 0
     42e:	42 e0       	ldi	r20, 0x02	; 2
     430:	0e 94 0f 08 	call	0x101e	; 0x101e <dtostrf>
			LCDgotoXY(0, 1);
     434:	61 e0       	ldi	r22, 0x01	; 1
     436:	80 e0       	ldi	r24, 0x00	; 0
     438:	0e 94 73 04 	call	0x8e6	; 0x8e6 <LCDgotoXY>
			LCDstring("Threshold: ");
     43c:	81 e4       	ldi	r24, 0x41	; 65
     43e:	90 e4       	ldi	r25, 0x40	; 64
     440:	0e 94 59 04 	call	0x8b2	; 0x8b2 <LCDstring>
			LCDstring(strbuf);
     444:	c8 01       	movw	r24, r16
     446:	0e 94 59 04 	call	0x8b2	; 0x8b2 <LCDstring>
			LCDstring("C");
     44a:	8c e3       	ldi	r24, 0x3C	; 60
     44c:	90 e4       	ldi	r25, 0x40	; 64
     44e:	0e 94 59 04 	call	0x8b2	; 0x8b2 <LCDstring>
			
					
		}
		
		if (btn5_flag == 1) {
     452:	80 91 59 40 	lds	r24, 0x4059	; 0x804059 <btn5_flag>
     456:	81 30       	cpi	r24, 0x01	; 1
     458:	e1 f4       	brne	.+56     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
			if (!BTN5) {
     45a:	35 9b       	sbis	0x06, 5	; 6
     45c:	1a c0       	rjmp	.+52     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
				btn5_flag = 0;
     45e:	10 92 59 40 	sts	0x4059, r1	; 0x804059 <btn5_flag>
				tempr_stdby = ~tempr_stdby;
     462:	80 91 58 40 	lds	r24, 0x4058	; 0x804058 <tempr_stdby>
     466:	80 95       	com	r24
     468:	80 93 58 40 	sts	0x4058, r24	; 0x804058 <tempr_stdby>
			
				if (tempr_stdby > 0) {
     46c:	88 23       	and	r24, r24
     46e:	49 f0       	breq	.+18     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
					TWI_2TXData(TEMPR_ADDR, 0x01, 0x80);
     470:	40 e8       	ldi	r20, 0x80	; 128
     472:	50 e0       	ldi	r21, 0x00	; 0
     474:	61 e0       	ldi	r22, 0x01	; 1
     476:	70 e0       	ldi	r23, 0x00	; 0
     478:	88 e4       	ldi	r24, 0x48	; 72
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <TWI_2TXData>
     480:	08 c0       	rjmp	.+16     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
				} else {
					TWI_2TXData(TEMPR_ADDR, 0x01, 0x00);
     482:	40 e0       	ldi	r20, 0x00	; 0
     484:	50 e0       	ldi	r21, 0x00	; 0
     486:	61 e0       	ldi	r22, 0x01	; 1
     488:	70 e0       	ldi	r23, 0x00	; 0
     48a:	88 e4       	ldi	r24, 0x48	; 72
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <TWI_2TXData>
				}
			}
		}
		
		float adc_reading = (float)(ADC0.RES)/4096.0;
     492:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
     496:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	0e 94 f2 06 	call	0xde4	; 0xde4 <__floatunsisf>
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	40 e8       	ldi	r20, 0x80	; 128
     4a8:	59 e3       	ldi	r21, 0x39	; 57
     4aa:	0e 94 80 07 	call	0xf00	; 0xf00 <__mulsf3>
		tempr_thresh = (int)((30.0-22.0)*adc_reading + 22.0);
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	40 e0       	ldi	r20, 0x00	; 0
     4b4:	51 e4       	ldi	r21, 0x41	; 65
     4b6:	0e 94 80 07 	call	0xf00	; 0xf00 <__mulsf3>
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	40 eb       	ldi	r20, 0xB0	; 176
     4c0:	51 e4       	ldi	r21, 0x41	; 65
     4c2:	0e 94 de 05 	call	0xbbc	; 0xbbc <__addsf3>
     4c6:	0e 94 bc 06 	call	0xd78	; 0xd78 <__fixsfsi>
     4ca:	9b 01       	movw	r18, r22
     4cc:	60 93 00 40 	sts	0x4000, r22	; 0x804000 <__DATA_REGION_ORIGIN__>
     4d0:	70 93 01 40 	sts	0x4001, r23	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
			
		if (waveform_state == ZERO) {
     4d4:	80 91 56 40 	lds	r24, 0x4056	; 0x804056 <__data_end>
     4d8:	81 11       	cpse	r24, r1
     4da:	11 c0       	rjmp	.+34     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
			waveform_state = ZERO;
     4dc:	10 92 56 40 	sts	0x4056, r1	; 0x804056 <__data_end>
			TCA0.SINGLE.CMP2BUF = 0;
     4e0:	10 92 3c 0a 	sts	0x0A3C, r1	; 0x800a3c <__TEXT_REGION_LENGTH__+0x7e0a3c>
     4e4:	10 92 3d 0a 	sts	0x0A3D, r1	; 0x800a3d <__TEXT_REGION_LENGTH__+0x7e0a3d>
			if (tempr_data >= tempr_thresh) {
     4e8:	80 91 57 40 	lds	r24, 0x4057	; 0x804057 <tempr_data>
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	82 17       	cp	r24, r18
     4f0:	93 07       	cpc	r25, r19
     4f2:	0c f4       	brge	.+2      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
     4f4:	1e cf       	rjmp	.-452    	; 0x332 <main+0x42>
				waveform_state = RISING;
     4f6:	81 e0       	ldi	r24, 0x01	; 1
     4f8:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <__data_end>
     4fc:	1a cf       	rjmp	.-460    	; 0x332 <main+0x42>
			}
			
		} else if (waveform_state == RISING) {
     4fe:	81 30       	cpi	r24, 0x01	; 1
     500:	51 f5       	brne	.+84     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
			if (millis < 2000) {
     502:	80 91 5c 40 	lds	r24, 0x405C	; 0x80405c <millis>
     506:	90 91 5d 40 	lds	r25, 0x405D	; 0x80405d <millis+0x1>
     50a:	80 3d       	cpi	r24, 0xD0	; 208
     50c:	97 40       	sbci	r25, 0x07	; 7
     50e:	d8 f4       	brcc	.+54     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
				TCA0.SINGLE.CMP2BUF = (uint16_t)((1.0*millis/2000.0)*2482.0);
     510:	60 91 5c 40 	lds	r22, 0x405C	; 0x80405c <millis>
     514:	70 91 5d 40 	lds	r23, 0x405D	; 0x80405d <millis+0x1>
     518:	80 e0       	ldi	r24, 0x00	; 0
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	0e 94 f2 06 	call	0xde4	; 0xde4 <__floatunsisf>
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	4a ef       	ldi	r20, 0xFA	; 250
     526:	54 e4       	ldi	r21, 0x44	; 68
     528:	0e 94 4a 06 	call	0xc94	; 0xc94 <__divsf3>
     52c:	20 e0       	ldi	r18, 0x00	; 0
     52e:	30 e2       	ldi	r19, 0x20	; 32
     530:	4b e1       	ldi	r20, 0x1B	; 27
     532:	55 e4       	ldi	r21, 0x45	; 69
     534:	0e 94 80 07 	call	0xf00	; 0xf00 <__mulsf3>
     538:	0e 94 c3 06 	call	0xd86	; 0xd86 <__fixunssfsi>
     53c:	60 93 3c 0a 	sts	0x0A3C, r22	; 0x800a3c <__TEXT_REGION_LENGTH__+0x7e0a3c>
     540:	70 93 3d 0a 	sts	0x0A3D, r23	; 0x800a3d <__TEXT_REGION_LENGTH__+0x7e0a3d>
     544:	f6 ce       	rjmp	.-532    	; 0x332 <main+0x42>
			} else {
				millis = 0;
     546:	10 92 5c 40 	sts	0x405C, r1	; 0x80405c <millis>
     54a:	10 92 5d 40 	sts	0x405D, r1	; 0x80405d <millis+0x1>
				waveform_state = TOP;
     54e:	82 e0       	ldi	r24, 0x02	; 2
     550:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <__data_end>
     554:	ee ce       	rjmp	.-548    	; 0x332 <main+0x42>
			}
			
		} else if (waveform_state == TOP) {
     556:	82 30       	cpi	r24, 0x02	; 2
     558:	99 f4       	brne	.+38     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
			waveform_state = TOP;
     55a:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <__data_end>
			TCA0.SINGLE.CMP2BUF = (2.0/3.3) * 4095;
     55e:	81 eb       	ldi	r24, 0xB1	; 177
     560:	99 e0       	ldi	r25, 0x09	; 9
     562:	80 93 3c 0a 	sts	0x0A3C, r24	; 0x800a3c <__TEXT_REGION_LENGTH__+0x7e0a3c>
     566:	90 93 3d 0a 	sts	0x0A3D, r25	; 0x800a3d <__TEXT_REGION_LENGTH__+0x7e0a3d>
			if (tempr_data < tempr_thresh) waveform_state = FALLING;
     56a:	80 91 57 40 	lds	r24, 0x4057	; 0x804057 <tempr_data>
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	82 17       	cp	r24, r18
     572:	93 07       	cpc	r25, r19
     574:	0c f0       	brlt	.+2      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
     576:	dd ce       	rjmp	.-582    	; 0x332 <main+0x42>
     578:	83 e0       	ldi	r24, 0x03	; 3
     57a:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <__data_end>
     57e:	d9 ce       	rjmp	.-590    	; 0x332 <main+0x42>
			
			
		} else if (waveform_state == FALLING) {
     580:	83 30       	cpi	r24, 0x03	; 3
     582:	09 f0       	breq	.+2      	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
     584:	d6 ce       	rjmp	.-596    	; 0x332 <main+0x42>
			//waveform_state = FALLING;
			if (millis < 2000) {
     586:	80 91 5c 40 	lds	r24, 0x405C	; 0x80405c <millis>
     58a:	90 91 5d 40 	lds	r25, 0x405D	; 0x80405d <millis+0x1>
     58e:	80 3d       	cpi	r24, 0xD0	; 208
     590:	97 40       	sbci	r25, 0x07	; 7
     592:	18 f5       	brcc	.+70     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
				TCA0.SINGLE.CMP2BUF = (uint16_t)((1.0*(2000.0-millis)/2000.0)*2482.0);
     594:	60 91 5c 40 	lds	r22, 0x405C	; 0x80405c <millis>
     598:	70 91 5d 40 	lds	r23, 0x405D	; 0x80405d <millis+0x1>
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	0e 94 f2 06 	call	0xde4	; 0xde4 <__floatunsisf>
     5a4:	9b 01       	movw	r18, r22
     5a6:	ac 01       	movw	r20, r24
     5a8:	60 e0       	ldi	r22, 0x00	; 0
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	8a ef       	ldi	r24, 0xFA	; 250
     5ae:	94 e4       	ldi	r25, 0x44	; 68
     5b0:	0e 94 dd 05 	call	0xbba	; 0xbba <__subsf3>
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	4a ef       	ldi	r20, 0xFA	; 250
     5ba:	54 e4       	ldi	r21, 0x44	; 68
     5bc:	0e 94 4a 06 	call	0xc94	; 0xc94 <__divsf3>
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e2       	ldi	r19, 0x20	; 32
     5c4:	4b e1       	ldi	r20, 0x1B	; 27
     5c6:	55 e4       	ldi	r21, 0x45	; 69
     5c8:	0e 94 80 07 	call	0xf00	; 0xf00 <__mulsf3>
     5cc:	0e 94 c3 06 	call	0xd86	; 0xd86 <__fixunssfsi>
     5d0:	60 93 3c 0a 	sts	0x0A3C, r22	; 0x800a3c <__TEXT_REGION_LENGTH__+0x7e0a3c>
     5d4:	70 93 3d 0a 	sts	0x0A3D, r23	; 0x800a3d <__TEXT_REGION_LENGTH__+0x7e0a3d>
     5d8:	ac ce       	rjmp	.-680    	; 0x332 <main+0x42>
			} else {
				millis = 0;
     5da:	10 92 5c 40 	sts	0x405C, r1	; 0x80405c <millis>
     5de:	10 92 5d 40 	sts	0x405D, r1	; 0x80405d <millis+0x1>
				waveform_state = ZERO;
     5e2:	10 92 56 40 	sts	0x4056, r1	; 0x804056 <__data_end>
     5e6:	a5 ce       	rjmp	.-694    	; 0x332 <main+0x42>

000005e8 <__vector_47>:
		}
		
    }
}

ISR(TCA1_OVF_vect) {
     5e8:	1f 92       	push	r1
     5ea:	0f 92       	push	r0
     5ec:	0f b6       	in	r0, 0x3f	; 63
     5ee:	0f 92       	push	r0
     5f0:	11 24       	eor	r1, r1
     5f2:	0b b6       	in	r0, 0x3b	; 59
     5f4:	0f 92       	push	r0
     5f6:	2f 93       	push	r18
     5f8:	8f 93       	push	r24
     5fa:	9f 93       	push	r25
     5fc:	ef 93       	push	r30
     5fe:	ff 93       	push	r31
	if (print_counter <= UINT16_MAX) print_counter++;
     600:	80 91 5e 40 	lds	r24, 0x405E	; 0x80405e <print_counter>
     604:	90 91 5f 40 	lds	r25, 0x405F	; 0x80405f <print_counter+0x1>
     608:	80 91 5e 40 	lds	r24, 0x405E	; 0x80405e <print_counter>
     60c:	90 91 5f 40 	lds	r25, 0x405F	; 0x80405f <print_counter+0x1>
     610:	01 96       	adiw	r24, 0x01	; 1
     612:	80 93 5e 40 	sts	0x405E, r24	; 0x80405e <print_counter>
     616:	90 93 5f 40 	sts	0x405F, r25	; 0x80405f <print_counter+0x1>
	if (waveform_state != ZERO && waveform_state != TOP &&millis <= UINT16_MAX) millis++;
     61a:	80 91 56 40 	lds	r24, 0x4056	; 0x804056 <__data_end>
     61e:	88 23       	and	r24, r24
     620:	79 f0       	breq	.+30     	; 0x640 <__vector_47+0x58>
     622:	82 30       	cpi	r24, 0x02	; 2
     624:	69 f0       	breq	.+26     	; 0x640 <__vector_47+0x58>
     626:	80 91 5c 40 	lds	r24, 0x405C	; 0x80405c <millis>
     62a:	90 91 5d 40 	lds	r25, 0x405D	; 0x80405d <millis+0x1>
     62e:	80 91 5c 40 	lds	r24, 0x405C	; 0x80405c <millis>
     632:	90 91 5d 40 	lds	r25, 0x405D	; 0x80405d <millis+0x1>
     636:	01 96       	adiw	r24, 0x01	; 1
     638:	80 93 5c 40 	sts	0x405C, r24	; 0x80405c <millis>
     63c:	90 93 5d 40 	sts	0x405D, r25	; 0x80405d <millis+0x1>
	
	if (tc_btn5 < UINT16_MAX) tc_btn5++;
     640:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <tc_btn5>
     644:	90 91 5b 40 	lds	r25, 0x405B	; 0x80405b <tc_btn5+0x1>
     648:	01 96       	adiw	r24, 0x01	; 1
     64a:	49 f0       	breq	.+18     	; 0x65e <__vector_47+0x76>
     64c:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <tc_btn5>
     650:	90 91 5b 40 	lds	r25, 0x405B	; 0x80405b <tc_btn5+0x1>
     654:	01 96       	adiw	r24, 0x01	; 1
     656:	80 93 5a 40 	sts	0x405A, r24	; 0x80405a <tc_btn5>
     65a:	90 93 5b 40 	sts	0x405B, r25	; 0x80405b <tc_btn5+0x1>
	if (tc_btn5 >= DEBOUNCE_TIME && BTN5) btn5_flag = 1;
     65e:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <tc_btn5>
     662:	90 91 5b 40 	lds	r25, 0x405B	; 0x80405b <tc_btn5+0x1>
     666:	c2 97       	sbiw	r24, 0x32	; 50
     668:	28 f0       	brcs	.+10     	; 0x674 <__vector_47+0x8c>
     66a:	35 99       	sbic	0x06, 5	; 6
     66c:	03 c0       	rjmp	.+6      	; 0x674 <__vector_47+0x8c>
     66e:	81 e0       	ldi	r24, 0x01	; 1
     670:	80 93 59 40 	sts	0x4059, r24	; 0x804059 <btn5_flag>
	
	TCA1.SINGLE.INTFLAGS |= TCA_SINGLE_OVF_bm;
     674:	e0 e4       	ldi	r30, 0x40	; 64
     676:	fa e0       	ldi	r31, 0x0A	; 10
     678:	83 85       	ldd	r24, Z+11	; 0x0b
     67a:	81 60       	ori	r24, 0x01	; 1
     67c:	83 87       	std	Z+11, r24	; 0x0b
}
     67e:	ff 91       	pop	r31
     680:	ef 91       	pop	r30
     682:	9f 91       	pop	r25
     684:	8f 91       	pop	r24
     686:	2f 91       	pop	r18
     688:	0f 90       	pop	r0
     68a:	0b be       	out	0x3b, r0	; 59
     68c:	0f 90       	pop	r0
     68e:	0f be       	out	0x3f, r0	; 63
     690:	0f 90       	pop	r0
     692:	1f 90       	pop	r1
     694:	18 95       	reti

00000696 <__vector_45>:

ISR(PORTB_PORT_vect) {
     696:	1f 92       	push	r1
     698:	0f 92       	push	r0
     69a:	0f b6       	in	r0, 0x3f	; 63
     69c:	0f 92       	push	r0
     69e:	11 24       	eor	r1, r1
     6a0:	0b b6       	in	r0, 0x3b	; 59
     6a2:	0f 92       	push	r0
     6a4:	8f 93       	push	r24
     6a6:	9f 93       	push	r25
     6a8:	ef 93       	push	r30
     6aa:	ff 93       	push	r31
	if (PORTB.INTFLAGS & PIN5_bm) {
     6ac:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <__TEXT_REGION_LENGTH__+0x7e0429>
     6b0:	85 ff       	sbrs	r24, 5
     6b2:	0f c0       	rjmp	.+30     	; 0x6d2 <__vector_45+0x3c>
		PORTB.INTFLAGS |= PIN5_bm;
     6b4:	e0 e2       	ldi	r30, 0x20	; 32
     6b6:	f4 e0       	ldi	r31, 0x04	; 4
     6b8:	81 85       	ldd	r24, Z+9	; 0x09
     6ba:	80 62       	ori	r24, 0x20	; 32
     6bc:	81 87       	std	Z+9, r24	; 0x09
		if (tc_btn5 >= DEBOUNCE_TIME) tc_btn5 = 0;
     6be:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <tc_btn5>
     6c2:	90 91 5b 40 	lds	r25, 0x405B	; 0x80405b <tc_btn5+0x1>
     6c6:	c2 97       	sbiw	r24, 0x32	; 50
     6c8:	20 f0       	brcs	.+8      	; 0x6d2 <__vector_45+0x3c>
     6ca:	10 92 5a 40 	sts	0x405A, r1	; 0x80405a <tc_btn5>
     6ce:	10 92 5b 40 	sts	0x405B, r1	; 0x80405b <tc_btn5+0x1>
	}
}
     6d2:	ff 91       	pop	r31
     6d4:	ef 91       	pop	r30
     6d6:	9f 91       	pop	r25
     6d8:	8f 91       	pop	r24
     6da:	0f 90       	pop	r0
     6dc:	0b be       	out	0x3b, r0	; 59
     6de:	0f 90       	pop	r0
     6e0:	0f be       	out	0x3f, r0	; 63
     6e2:	0f 90       	pop	r0
     6e4:	1f 90       	pop	r1
     6e6:	18 95       	reti

000006e8 <TWI_Stop>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6e8:	e0 e0       	ldi	r30, 0x00	; 0
     6ea:	f9 e0       	ldi	r31, 0x09	; 9
     6ec:	84 81       	ldd	r24, Z+4	; 0x04
     6ee:	83 60       	ori	r24, 0x03	; 3
     6f0:	84 83       	std	Z+4, r24	; 0x04
     6f2:	08 95       	ret

000006f4 <TWI_Address>:
     6f4:	cf 93       	push	r28
     6f6:	df 93       	push	r29
     6f8:	d8 2f       	mov	r29, r24
     6fa:	c6 2f       	mov	r28, r22
     6fc:	8d 2f       	mov	r24, r29
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	88 0f       	add	r24, r24
     702:	99 1f       	adc	r25, r25
     704:	8c 2b       	or	r24, r28
     706:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     70a:	c1 11       	cpse	r28, r1
     70c:	02 c0       	rjmp	.+4      	; 0x712 <TWI_Address+0x1e>
     70e:	26 e0       	ldi	r18, 0x06	; 6
     710:	01 c0       	rjmp	.+2      	; 0x714 <TWI_Address+0x20>
     712:	27 e0       	ldi	r18, 0x07	; 7
     714:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	02 2e       	mov	r0, r18
     71c:	02 c0       	rjmp	.+4      	; 0x722 <TWI_Address+0x2e>
     71e:	95 95       	asr	r25
     720:	87 95       	ror	r24
     722:	0a 94       	dec	r0
     724:	e2 f7       	brpl	.-8      	; 0x71e <TWI_Address+0x2a>
     726:	80 ff       	sbrs	r24, 0
     728:	f5 cf       	rjmp	.-22     	; 0x714 <TWI_Address+0x20>
     72a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     72e:	84 fd       	sbrc	r24, 4
     730:	0e 94 74 03 	call	0x6e8	; 0x6e8 <TWI_Stop>
     734:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     738:	8c 70       	andi	r24, 0x0C	; 12
     73a:	01 f7       	brne	.-64     	; 0x6fc <TWI_Address+0x8>
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	08 95       	ret

00000742 <TWI_TXData>:
     742:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     746:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     74a:	86 ff       	sbrs	r24, 6
     74c:	fc cf       	rjmp	.-8      	; 0x746 <TWI_TXData+0x4>
     74e:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     752:	8c 70       	andi	r24, 0x0C	; 12
     754:	19 f0       	breq	.+6      	; 0x75c <TWI_TXData+0x1a>
     756:	8f ef       	ldi	r24, 0xFF	; 255
     758:	9f ef       	ldi	r25, 0xFF	; 255
     75a:	08 95       	ret
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	08 95       	ret

00000762 <TWI_RXData>:
     762:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     766:	88 23       	and	r24, r24
     768:	e4 f7       	brge	.-8      	; 0x762 <TWI_RXData>
     76a:	e0 e0       	ldi	r30, 0x00	; 0
     76c:	f9 e0       	ldi	r31, 0x09	; 9
     76e:	80 85       	ldd	r24, Z+8	; 0x08
     770:	94 81       	ldd	r25, Z+4	; 0x04
     772:	94 60       	ori	r25, 0x04	; 4
     774:	94 83       	std	Z+4, r25	; 0x04
     776:	08 95       	ret

00000778 <TWI_Host_Write>:
     778:	cf 93       	push	r28
     77a:	c6 2f       	mov	r28, r22
     77c:	60 e0       	ldi	r22, 0x00	; 0
     77e:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <TWI_Address>
     782:	8c 2f       	mov	r24, r28
     784:	0e 94 a1 03 	call	0x742	; 0x742 <TWI_TXData>
     788:	0e 94 74 03 	call	0x6e8	; 0x6e8 <TWI_Stop>
     78c:	cf 91       	pop	r28
     78e:	08 95       	ret

00000790 <TWI_Host_Read>:
     790:	cf 93       	push	r28
     792:	61 e0       	ldi	r22, 0x01	; 1
     794:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <TWI_Address>
     798:	0e 94 b1 03 	call	0x762	; 0x762 <TWI_RXData>
     79c:	c8 2f       	mov	r28, r24
     79e:	0e 94 74 03 	call	0x6e8	; 0x6e8 <TWI_Stop>
     7a2:	8c 2f       	mov	r24, r28
     7a4:	cf 91       	pop	r28
     7a6:	08 95       	ret

000007a8 <TWI_2TXData>:
     7a8:	1f 93       	push	r17
     7aa:	cf 93       	push	r28
     7ac:	df 93       	push	r29
     7ae:	c6 2f       	mov	r28, r22
     7b0:	14 2f       	mov	r17, r20
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <TWI_Address>
     7b8:	8c 2f       	mov	r24, r28
     7ba:	0e 94 a1 03 	call	0x742	; 0x742 <TWI_TXData>
     7be:	ec 01       	movw	r28, r24
     7c0:	81 2f       	mov	r24, r17
     7c2:	0e 94 a1 03 	call	0x742	; 0x742 <TWI_TXData>
     7c6:	c8 2b       	or	r28, r24
     7c8:	d9 2b       	or	r29, r25
     7ca:	0e 94 74 03 	call	0x6e8	; 0x6e8 <TWI_Stop>
     7ce:	ce 01       	movw	r24, r28
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	1f 91       	pop	r17
     7d6:	08 95       	ret

000007d8 <TWI_Host_Init>:
     7d8:	e0 e0       	ldi	r30, 0x00	; 0
     7da:	f9 e0       	ldi	r31, 0x09	; 9
     7dc:	83 e2       	ldi	r24, 0x23	; 35
     7de:	86 83       	std	Z+6, r24	; 0x06
     7e0:	83 81       	ldd	r24, Z+3	; 0x03
     7e2:	81 60       	ori	r24, 0x01	; 1
     7e4:	83 83       	std	Z+3, r24	; 0x03
     7e6:	85 81       	ldd	r24, Z+5	; 0x05
     7e8:	81 60       	ori	r24, 0x01	; 1
     7ea:	85 83       	std	Z+5, r24	; 0x05
     7ec:	08 95       	ret

000007ee <LCDsendCommand>:
     7ee:	48 2f       	mov	r20, r24
     7f0:	60 e8       	ldi	r22, 0x80	; 128
     7f2:	8e e3       	ldi	r24, 0x3E	; 62
     7f4:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <TWI_2TXData>
     7f8:	08 95       	ret

000007fa <LCDsendData>:
     7fa:	48 2f       	mov	r20, r24
     7fc:	60 e4       	ldi	r22, 0x40	; 64
     7fe:	8e e3       	ldi	r24, 0x3E	; 62
     800:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <TWI_2TXData>
     804:	08 95       	ret

00000806 <LCDinitialize>:
     806:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <TWI_Host_Init>
     80a:	40 e0       	ldi	r20, 0x00	; 0
     80c:	6f e2       	ldi	r22, 0x2F	; 47
     80e:	8b e6       	ldi	r24, 0x6B	; 107
     810:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <TWI_2TXData>
     814:	87 ec       	ldi	r24, 0xC7	; 199
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	01 97       	sbiw	r24, 0x01	; 1
     81a:	f1 f7       	brne	.-4      	; 0x818 <LCDinitialize+0x12>
     81c:	00 c0       	rjmp	.+0      	; 0x81e <LCDinitialize+0x18>
     81e:	00 00       	nop
     820:	40 e2       	ldi	r20, 0x20	; 32
     822:	60 e0       	ldi	r22, 0x00	; 0
     824:	8b e6       	ldi	r24, 0x6B	; 107
     826:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <TWI_2TXData>
     82a:	87 ec       	ldi	r24, 0xC7	; 199
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	01 97       	sbiw	r24, 0x01	; 1
     830:	f1 f7       	brne	.-4      	; 0x82e <LCDinitialize+0x28>
     832:	00 c0       	rjmp	.+0      	; 0x834 <LCDinitialize+0x2e>
     834:	00 00       	nop
     836:	4f ef       	ldi	r20, 0xFF	; 255
     838:	64 e0       	ldi	r22, 0x04	; 4
     83a:	8b e6       	ldi	r24, 0x6B	; 107
     83c:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <TWI_2TXData>
     840:	87 ec       	ldi	r24, 0xC7	; 199
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	f1 f7       	brne	.-4      	; 0x844 <LCDinitialize+0x3e>
     848:	00 c0       	rjmp	.+0      	; 0x84a <LCDinitialize+0x44>
     84a:	00 00       	nop
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	67 e0       	ldi	r22, 0x07	; 7
     850:	8b e6       	ldi	r24, 0x6B	; 107
     852:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <TWI_2TXData>
     856:	8f e5       	ldi	r24, 0x5F	; 95
     858:	9a ee       	ldi	r25, 0xEA	; 234
     85a:	01 97       	sbiw	r24, 0x01	; 1
     85c:	f1 f7       	brne	.-4      	; 0x85a <LCDinitialize+0x54>
     85e:	00 c0       	rjmp	.+0      	; 0x860 <LCDinitialize+0x5a>
     860:	00 00       	nop
     862:	8c e0       	ldi	r24, 0x0C	; 12
     864:	0e 94 f7 03 	call	0x7ee	; 0x7ee <LCDsendCommand>
     868:	95 e3       	ldi	r25, 0x35	; 53
     86a:	9a 95       	dec	r25
     86c:	f1 f7       	brne	.-4      	; 0x86a <LCDinitialize+0x64>
     86e:	00 00       	nop
     870:	88 e3       	ldi	r24, 0x38	; 56
     872:	0e 94 f7 03 	call	0x7ee	; 0x7ee <LCDsendCommand>
     876:	85 e3       	ldi	r24, 0x35	; 53
     878:	8a 95       	dec	r24
     87a:	f1 f7       	brne	.-4      	; 0x878 <LCDinitialize+0x72>
     87c:	00 00       	nop
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	0e 94 f7 03 	call	0x7ee	; 0x7ee <LCDsendCommand>
     884:	8f e3       	ldi	r24, 0x3F	; 63
     886:	9f e1       	ldi	r25, 0x1F	; 31
     888:	01 97       	sbiw	r24, 0x01	; 1
     88a:	f1 f7       	brne	.-4      	; 0x888 <LCDinitialize+0x82>
     88c:	00 c0       	rjmp	.+0      	; 0x88e <LCDinitialize+0x88>
     88e:	00 00       	nop
     890:	86 e0       	ldi	r24, 0x06	; 6
     892:	0e 94 f7 03 	call	0x7ee	; 0x7ee <LCDsendCommand>
     896:	08 95       	ret

00000898 <LCDdataWrite>:
     898:	0e 94 fd 03 	call	0x7fa	; 0x7fa <LCDsendData>
     89c:	08 95       	ret

0000089e <LCDclr>:
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	0e 94 f7 03 	call	0x7ee	; 0x7ee <LCDsendCommand>
     8a4:	8f e3       	ldi	r24, 0x3F	; 63
     8a6:	9f e1       	ldi	r25, 0x1F	; 31
     8a8:	01 97       	sbiw	r24, 0x01	; 1
     8aa:	f1 f7       	brne	.-4      	; 0x8a8 <LCDclr+0xa>
     8ac:	00 c0       	rjmp	.+0      	; 0x8ae <LCDclr+0x10>
     8ae:	00 00       	nop
     8b0:	08 95       	ret

000008b2 <LCDstring>:
void LCDhome(void) {
	LCDsendCommand(0x02);
	_delay_ms(2);
}

void LCDstring(char* str) {
     8b2:	0f 93       	push	r16
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	8c 01       	movw	r16, r24
	int i = 0;
     8bc:	c0 e0       	ldi	r28, 0x00	; 0
     8be:	d0 e0       	ldi	r29, 0x00	; 0
	char p;
	while (str[i] != '\0') {
     8c0:	07 c0       	rjmp	.+14     	; 0x8d0 <LCDstring+0x1e>
		LCDdataWrite(str[i]);
     8c2:	0e 94 4c 04 	call	0x898	; 0x898 <LCDdataWrite>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8c6:	85 ee       	ldi	r24, 0xE5	; 229
     8c8:	8a 95       	dec	r24
     8ca:	f1 f7       	brne	.-4      	; 0x8c8 <LCDstring+0x16>
     8cc:	00 00       	nop
		_delay_us(43);
		i++;
     8ce:	21 96       	adiw	r28, 0x01	; 1
}

void LCDstring(char* str) {
	int i = 0;
	char p;
	while (str[i] != '\0') {
     8d0:	f8 01       	movw	r30, r16
     8d2:	ec 0f       	add	r30, r28
     8d4:	fd 1f       	adc	r31, r29
     8d6:	80 81       	ld	r24, Z
     8d8:	81 11       	cpse	r24, r1
     8da:	f3 cf       	rjmp	.-26     	; 0x8c2 <LCDstring+0x10>
		LCDdataWrite(str[i]);
		_delay_us(43);
		i++;
	}
}
     8dc:	df 91       	pop	r29
     8de:	cf 91       	pop	r28
     8e0:	1f 91       	pop	r17
     8e2:	0f 91       	pop	r16
     8e4:	08 95       	ret

000008e6 <LCDgotoXY>:

void LCDgotoXY(uint8_t x, uint8_t y) {
	if (y == 0) x |= 0x80;
     8e6:	61 11       	cpse	r22, r1
     8e8:	02 c0       	rjmp	.+4      	; 0x8ee <LCDgotoXY+0x8>
     8ea:	80 68       	ori	r24, 0x80	; 128
     8ec:	01 c0       	rjmp	.+2      	; 0x8f0 <LCDgotoXY+0xa>
	else x |= 0xc0;
     8ee:	80 6c       	ori	r24, 0xC0	; 192
	LCDsendCommand(x);
     8f0:	0e 94 f7 03 	call	0x7ee	; 0x7ee <LCDsendCommand>
     8f4:	08 95       	ret

000008f6 <usart_init>:
#include "uart.h"

#define SMPL 16

void* usart_init(uint8_t usartnum, uint32_t baud_rate)
{
     8f6:	cf 93       	push	r28
     8f8:	df 93       	push	r29
    USART_t* usart;

    if (usartnum == 0) {
     8fa:	81 11       	cpse	r24, r1
     8fc:	06 c0       	rjmp	.+12     	; 0x90a <usart_init+0x14>
        usart = &USART0;
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__TEXT_REGION_LENGTH__+0x7e0401>
void* usart_init(uint8_t usartnum, uint32_t baud_rate)
{
    USART_t* usart;

    if (usartnum == 0) {
        usart = &USART0;
     904:	c0 e0       	ldi	r28, 0x00	; 0
     906:	d8 e0       	ldi	r29, 0x08	; 8
     908:	19 c0       	rjmp	.+50     	; 0x93c <usart_init+0x46>
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
    }
    else if (usartnum == 1) {
     90a:	81 30       	cpi	r24, 0x01	; 1
     90c:	29 f4       	brne	.+10     	; 0x918 <usart_init+0x22>
        usart = &USART1;
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
     90e:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <__TEXT_REGION_LENGTH__+0x7e0441>
        usart = &USART0;
        // enable USART0 TX pin
        PORTA.DIRSET = PIN0_bm;
    }
    else if (usartnum == 1) {
        usart = &USART1;
     912:	c0 e2       	ldi	r28, 0x20	; 32
     914:	d8 e0       	ldi	r29, 0x08	; 8
     916:	12 c0       	rjmp	.+36     	; 0x93c <usart_init+0x46>
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
    }
    else if (usartnum == 2) {
     918:	82 30       	cpi	r24, 0x02	; 2
     91a:	31 f4       	brne	.+12     	; 0x928 <usart_init+0x32>
        usart = &USART2;
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
     91c:	81 e0       	ldi	r24, 0x01	; 1
     91e:	80 93 a1 04 	sts	0x04A1, r24	; 0x8004a1 <__TEXT_REGION_LENGTH__+0x7e04a1>
        usart = &USART1;
        // enable USART1 TX pin
        PORTC.DIRSET = PIN0_bm;
    }
    else if (usartnum == 2) {
        usart = &USART2;
     922:	c0 e4       	ldi	r28, 0x40	; 64
     924:	d8 e0       	ldi	r29, 0x08	; 8
     926:	0a c0       	rjmp	.+20     	; 0x93c <usart_init+0x46>
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
    }
    else if (usartnum == 3) {
     928:	83 30       	cpi	r24, 0x03	; 3
     92a:	31 f4       	brne	.+12     	; 0x938 <usart_init+0x42>
        usart = &USART3;
        // enable USART3 TX pin
        PORTB.DIRSET = PIN0_bm;
     92c:	81 e0       	ldi	r24, 0x01	; 1
     92e:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <__TEXT_REGION_LENGTH__+0x7e0421>
        usart = &USART2;
        // enable USART2 TX pin
        PORTF.DIRSET = PIN0_bm;
    }
    else if (usartnum == 3) {
        usart = &USART3;
     932:	c0 e6       	ldi	r28, 0x60	; 96
     934:	d8 e0       	ldi	r29, 0x08	; 8
     936:	02 c0       	rjmp	.+4      	; 0x93c <usart_init+0x46>
        // enable USART3 TX pin
        PORTB.DIRSET = PIN0_bm;
    } 
    else {
        usart = NULL;
     938:	c0 e0       	ldi	r28, 0x00	; 0
     93a:	d0 e0       	ldi	r29, 0x00	; 0
    }

    // set BAUD and CTRLB registers
	// make sure to cast the BAUD to uint16_t before assigning
	usart->BAUD = (uint16_t)( (64 * F_CPU) / (SMPL * baud_rate) );
     93c:	db 01       	movw	r26, r22
     93e:	ca 01       	movw	r24, r20
     940:	88 0f       	add	r24, r24
     942:	99 1f       	adc	r25, r25
     944:	aa 1f       	adc	r26, r26
     946:	bb 1f       	adc	r27, r27
     948:	88 0f       	add	r24, r24
     94a:	99 1f       	adc	r25, r25
     94c:	aa 1f       	adc	r26, r26
     94e:	bb 1f       	adc	r27, r27
     950:	9c 01       	movw	r18, r24
     952:	ad 01       	movw	r20, r26
     954:	22 0f       	add	r18, r18
     956:	33 1f       	adc	r19, r19
     958:	44 1f       	adc	r20, r20
     95a:	55 1f       	adc	r21, r21
     95c:	22 0f       	add	r18, r18
     95e:	33 1f       	adc	r19, r19
     960:	44 1f       	adc	r20, r20
     962:	55 1f       	adc	r21, r21
     964:	60 e0       	ldi	r22, 0x00	; 0
     966:	70 e0       	ldi	r23, 0x00	; 0
     968:	89 e0       	ldi	r24, 0x09	; 9
     96a:	9d e3       	ldi	r25, 0x3D	; 61
     96c:	0e 94 ed 07 	call	0xfda	; 0xfda <__udivmodsi4>
     970:	28 87       	std	Y+8, r18	; 0x08
     972:	39 87       	std	Y+9, r19	; 0x09
	usart->CTRLB |= USART_RXEN_bm | USART_TXEN_bm;
     974:	8e 81       	ldd	r24, Y+6	; 0x06
     976:	80 6c       	ori	r24, 0xC0	; 192
     978:	8e 83       	std	Y+6, r24	; 0x06
    return usart;
}
     97a:	ce 01       	movw	r24, r28
     97c:	df 91       	pop	r29
     97e:	cf 91       	pop	r28
     980:	08 95       	ret

00000982 <usart_transmit_data>:

void usart_transmit_data(void* ptr, char c)
{
    USART_t* usart = (USART_t*)ptr;
    // TODO send data
	usart->TXDATAL = c;
     982:	fc 01       	movw	r30, r24
     984:	62 83       	std	Z+2, r22	; 0x02
     986:	08 95       	ret

00000988 <usart_wait_until_transmit_ready>:
}

void usart_wait_until_transmit_ready(void *ptr)
{
     988:	fc 01       	movw	r30, r24
    USART_t* usart = (USART_t*)ptr;
    // TODO wait until UART is ready to transmit
	while ( !(usart->STATUS & USART_DREIF_bm) );
     98a:	94 81       	ldd	r25, Z+4	; 0x04
     98c:	95 ff       	sbrs	r25, 5
     98e:	fd cf       	rjmp	.-6      	; 0x98a <usart_wait_until_transmit_ready+0x2>
}
     990:	08 95       	ret

00000992 <usart_receive_data>:

int usart_receive_data(void* ptr)
{
     992:	fc 01       	movw	r30, r24
    USART_t* usart = (USART_t*)ptr;
    // TODO wait until data has arrived and then return the data
	while ( !(usart->STATUS & USART_RXCIF_bm) );
     994:	94 81       	ldd	r25, Z+4	; 0x04
     996:	99 23       	and	r25, r25
     998:	ec f7       	brge	.-6      	; 0x994 <usart_receive_data+0x2>
	return (usart->RXDATAL);
     99a:	80 81       	ld	r24, Z
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	08 95       	ret

000009a0 <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     9a0:	0f 93       	push	r16
     9a2:	1f 93       	push	r17
     9a4:	cf 93       	push	r28
     9a6:	c8 2f       	mov	r28, r24
     9a8:	8b 01       	movw	r16, r22
	if (c == '\a') {
     9aa:	87 30       	cpi	r24, 0x07	; 7
     9ac:	69 f4       	brne	.+26     	; 0x9c8 <uart_putchar+0x28>
		fputs("*ring*\n", stderr);
     9ae:	20 91 b6 40 	lds	r18, 0x40B6	; 0x8040b6 <__iob+0x4>
     9b2:	30 91 b7 40 	lds	r19, 0x40B7	; 0x8040b7 <__iob+0x5>
     9b6:	47 e0       	ldi	r20, 0x07	; 7
     9b8:	50 e0       	ldi	r21, 0x00	; 0
     9ba:	61 e0       	ldi	r22, 0x01	; 1
     9bc:	70 e0       	ldi	r23, 0x00	; 0
     9be:	8d e4       	ldi	r24, 0x4D	; 77
     9c0:	90 e4       	ldi	r25, 0x40	; 64
     9c2:	0e 94 2f 08 	call	0x105e	; 0x105e <fwrite>
		return 0;
     9c6:	0f c0       	rjmp	.+30     	; 0x9e6 <uart_putchar+0x46>
	}

	if (c == '\n') {
     9c8:	8a 30       	cpi	r24, 0x0A	; 10
     9ca:	19 f4       	brne	.+6      	; 0x9d2 <uart_putchar+0x32>
		uart_putchar('\r', stream);
     9cc:	8d e0       	ldi	r24, 0x0D	; 13
     9ce:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
	}

	void* usart = fdev_get_udata(stream);
     9d2:	f8 01       	movw	r30, r16
     9d4:	04 85       	ldd	r16, Z+12	; 0x0c
     9d6:	15 85       	ldd	r17, Z+13	; 0x0d
	usart_wait_until_transmit_ready(usart);
     9d8:	c8 01       	movw	r24, r16
     9da:	0e 94 c4 04 	call	0x988	; 0x988 <usart_wait_until_transmit_ready>
	usart_transmit_data(usart, c);
     9de:	6c 2f       	mov	r22, r28
     9e0:	c8 01       	movw	r24, r16
     9e2:	0e 94 c1 04 	call	0x982	; 0x982 <usart_transmit_data>

	return 0;
}
     9e6:	80 e0       	ldi	r24, 0x00	; 0
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	cf 91       	pop	r28
     9ec:	1f 91       	pop	r17
     9ee:	0f 91       	pop	r16
     9f0:	08 95       	ret

000009f2 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     9f2:	ef 92       	push	r14
     9f4:	ff 92       	push	r15
     9f6:	0f 93       	push	r16
     9f8:	1f 93       	push	r17
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
	uint8_t c;
	char *cp, *cp2;
	static char b[RX_BUFSIZE];
	static char *rxp;

	if (rxp == 0) {
     9fe:	20 91 b0 40 	lds	r18, 0x40B0	; 0x8040b0 <rxp.1995>
     a02:	30 91 b1 40 	lds	r19, 0x40B1	; 0x8040b1 <rxp.1995+0x1>
     a06:	23 2b       	or	r18, r19
     a08:	09 f0       	breq	.+2      	; 0xa0c <uart_getchar+0x1a>
     a0a:	9a c0       	rjmp	.+308    	; 0xb40 <uart_getchar+0x14e>
     a0c:	8c 01       	movw	r16, r24
     a0e:	c0 e6       	ldi	r28, 0x60	; 96
     a10:	d0 e4       	ldi	r29, 0x40	; 64
		for (cp = b;;) {
			void* usart = fdev_get_udata(stream);
			c = usart_receive_data(usart);
     a12:	f8 01       	movw	r30, r16
     a14:	84 85       	ldd	r24, Z+12	; 0x0c
     a16:	95 85       	ldd	r25, Z+13	; 0x0d
     a18:	0e 94 c9 04 	call	0x992	; 0x992 <usart_receive_data>

			/* behaviour similar to Unix stty ICRNL */
			if (c == '\r')
     a1c:	8d 30       	cpi	r24, 0x0D	; 13
     a1e:	09 f4       	brne	.+2      	; 0xa22 <uart_getchar+0x30>
				c = '\n';
     a20:	8a e0       	ldi	r24, 0x0A	; 10
			if (c == '\n') {
     a22:	8a 30       	cpi	r24, 0x0A	; 10
     a24:	59 f4       	brne	.+22     	; 0xa3c <uart_getchar+0x4a>
			    *cp = c;
     a26:	88 83       	st	Y, r24
				uart_putchar(c, stream);
     a28:	b8 01       	movw	r22, r16
     a2a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
			    rxp = b;
     a2e:	80 e6       	ldi	r24, 0x60	; 96
     a30:	90 e4       	ldi	r25, 0x40	; 64
     a32:	80 93 b0 40 	sts	0x40B0, r24	; 0x8040b0 <rxp.1995>
     a36:	90 93 b1 40 	sts	0x40B1, r25	; 0x8040b1 <rxp.1995+0x1>
				break;
     a3a:	82 c0       	rjmp	.+260    	; 0xb40 <uart_getchar+0x14e>
			}
			else if (c == '\t')
     a3c:	89 30       	cpi	r24, 0x09	; 9
     a3e:	09 f4       	brne	.+2      	; 0xa42 <uart_getchar+0x50>
				c = ' ';
     a40:	80 e2       	ldi	r24, 0x20	; 32

			if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     a42:	90 ee       	ldi	r25, 0xE0	; 224
     a44:	98 0f       	add	r25, r24
     a46:	9f 35       	cpi	r25, 0x5F	; 95
     a48:	10 f0       	brcs	.+4      	; 0xa4e <uart_getchar+0x5c>
     a4a:	80 3a       	cpi	r24, 0xA0	; 160
     a4c:	98 f0       	brcs	.+38     	; 0xa74 <uart_getchar+0x82>
				c >= (uint8_t)'\xa0') {
			    if (cp == b + RX_BUFSIZE - 1)
     a4e:	f0 e4       	ldi	r31, 0x40	; 64
     a50:	cf 3a       	cpi	r28, 0xAF	; 175
     a52:	df 07       	cpc	r29, r31
     a54:	29 f4       	brne	.+10     	; 0xa60 <uart_getchar+0x6e>
					uart_putchar('\a', stream);
     a56:	b8 01       	movw	r22, r16
     a58:	87 e0       	ldi	r24, 0x07	; 7
     a5a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
     a5e:	d9 cf       	rjmp	.-78     	; 0xa12 <uart_getchar+0x20>
				else {
					*cp++ = c;
     a60:	7e 01       	movw	r14, r28
     a62:	9f ef       	ldi	r25, 0xFF	; 255
     a64:	e9 1a       	sub	r14, r25
     a66:	f9 0a       	sbc	r15, r25
     a68:	88 83       	st	Y, r24
					uart_putchar(c, stream);
     a6a:	b8 01       	movw	r22, r16
     a6c:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
			if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
				c >= (uint8_t)'\xa0') {
			    if (cp == b + RX_BUFSIZE - 1)
					uart_putchar('\a', stream);
				else {
					*cp++ = c;
     a70:	e7 01       	movw	r28, r14
					uart_putchar(c, stream);
				}
			    continue;
     a72:	cf cf       	rjmp	.-98     	; 0xa12 <uart_getchar+0x20>
			}

			switch (c) {
     a74:	82 31       	cpi	r24, 0x12	; 18
     a76:	19 f1       	breq	.+70     	; 0xabe <uart_getchar+0xcc>
     a78:	30 f4       	brcc	.+12     	; 0xa86 <uart_getchar+0x94>
     a7a:	83 30       	cpi	r24, 0x03	; 3
     a7c:	09 f4       	brne	.+2      	; 0xa80 <uart_getchar+0x8e>
     a7e:	73 c0       	rjmp	.+230    	; 0xb66 <uart_getchar+0x174>
     a80:	88 30       	cpi	r24, 0x08	; 8
     a82:	49 f0       	breq	.+18     	; 0xa96 <uart_getchar+0xa4>
     a84:	c6 cf       	rjmp	.-116    	; 0xa12 <uart_getchar+0x20>
     a86:	87 31       	cpi	r24, 0x17	; 23
     a88:	09 f4       	brne	.+2      	; 0xa8c <uart_getchar+0x9a>
     a8a:	4e c0       	rjmp	.+156    	; 0xb28 <uart_getchar+0x136>
     a8c:	8f 37       	cpi	r24, 0x7F	; 127
     a8e:	19 f0       	breq	.+6      	; 0xa96 <uart_getchar+0xa4>
     a90:	85 31       	cpi	r24, 0x15	; 21
     a92:	b9 f1       	breq	.+110    	; 0xb02 <uart_getchar+0x110>
     a94:	be cf       	rjmp	.-132    	; 0xa12 <uart_getchar+0x20>
				case 'c' & 0x1f:
				    return -1;

				case '\b':
				case '\x7f':
				    if (cp > b) {
     a96:	e0 e4       	ldi	r30, 0x40	; 64
     a98:	c0 36       	cpi	r28, 0x60	; 96
     a9a:	de 07       	cpc	r29, r30
     a9c:	09 f0       	breq	.+2      	; 0xaa0 <uart_getchar+0xae>
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <uart_getchar+0xb0>
     aa0:	b8 cf       	rjmp	.-144    	; 0xa12 <uart_getchar+0x20>
						uart_putchar('\b', stream);
     aa2:	b8 01       	movw	r22, r16
     aa4:	88 e0       	ldi	r24, 0x08	; 8
     aa6:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						uart_putchar(' ', stream);
     aaa:	b8 01       	movw	r22, r16
     aac:	80 e2       	ldi	r24, 0x20	; 32
     aae:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						uart_putchar('\b', stream);
     ab2:	b8 01       	movw	r22, r16
     ab4:	88 e0       	ldi	r24, 0x08	; 8
     ab6:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						cp--;
     aba:	21 97       	sbiw	r28, 0x01	; 1
     abc:	aa cf       	rjmp	.-172    	; 0xa12 <uart_getchar+0x20>
					}
					break;

				case 'r' & 0x1f:
					uart_putchar('\r', stream);
     abe:	b8 01       	movw	r22, r16
     ac0:	8d e0       	ldi	r24, 0x0D	; 13
     ac2:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
					for (cp2 = b; cp2 < cp; cp2++)
     ac6:	0f 2e       	mov	r0, r31
     ac8:	f0 e6       	ldi	r31, 0x60	; 96
     aca:	ef 2e       	mov	r14, r31
     acc:	f0 e4       	ldi	r31, 0x40	; 64
     ace:	ff 2e       	mov	r15, r31
     ad0:	f0 2d       	mov	r31, r0
     ad2:	06 c0       	rjmp	.+12     	; 0xae0 <uart_getchar+0xee>
						uart_putchar(*cp2, stream);
     ad4:	b8 01       	movw	r22, r16
     ad6:	f7 01       	movw	r30, r14
     ad8:	81 91       	ld	r24, Z+
     ada:	7f 01       	movw	r14, r30
     adc:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
					}
					break;

				case 'r' & 0x1f:
					uart_putchar('\r', stream);
					for (cp2 = b; cp2 < cp; cp2++)
     ae0:	ec 16       	cp	r14, r28
     ae2:	fd 06       	cpc	r15, r29
     ae4:	b8 f3       	brcs	.-18     	; 0xad4 <uart_getchar+0xe2>
     ae6:	95 cf       	rjmp	.-214    	; 0xa12 <uart_getchar+0x20>
						uart_putchar(*cp2, stream);
					break;

				case 'u' & 0x1f:
					while (cp > b) {
						uart_putchar('\b', stream);
     ae8:	b8 01       	movw	r22, r16
     aea:	88 e0       	ldi	r24, 0x08	; 8
     aec:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						uart_putchar(' ', stream);
     af0:	b8 01       	movw	r22, r16
     af2:	80 e2       	ldi	r24, 0x20	; 32
     af4:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						uart_putchar('\b', stream);
     af8:	b8 01       	movw	r22, r16
     afa:	88 e0       	ldi	r24, 0x08	; 8
     afc:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						cp--;
     b00:	21 97       	sbiw	r28, 0x01	; 1
					for (cp2 = b; cp2 < cp; cp2++)
						uart_putchar(*cp2, stream);
					break;

				case 'u' & 0x1f:
					while (cp > b) {
     b02:	f0 e4       	ldi	r31, 0x40	; 64
     b04:	c0 36       	cpi	r28, 0x60	; 96
     b06:	df 07       	cpc	r29, r31
     b08:	09 f0       	breq	.+2      	; 0xb0c <uart_getchar+0x11a>
     b0a:	70 f7       	brcc	.-36     	; 0xae8 <uart_getchar+0xf6>
     b0c:	82 cf       	rjmp	.-252    	; 0xa12 <uart_getchar+0x20>
					}
					break;

				case 'w' & 0x1f:
					while (cp > b && cp[-1] != ' ') {
						uart_putchar('\b', stream);
     b0e:	b8 01       	movw	r22, r16
     b10:	88 e0       	ldi	r24, 0x08	; 8
     b12:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						uart_putchar(' ', stream);
     b16:	b8 01       	movw	r22, r16
     b18:	80 e2       	ldi	r24, 0x20	; 32
     b1a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						uart_putchar('\b', stream);
     b1e:	b8 01       	movw	r22, r16
     b20:	88 e0       	ldi	r24, 0x08	; 8
     b22:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <uart_putchar>
						cp--;
     b26:	21 97       	sbiw	r28, 0x01	; 1
						cp--;
					}
					break;

				case 'w' & 0x1f:
					while (cp > b && cp[-1] != ' ') {
     b28:	80 e4       	ldi	r24, 0x40	; 64
     b2a:	c0 36       	cpi	r28, 0x60	; 96
     b2c:	d8 07       	cpc	r29, r24
     b2e:	09 f0       	breq	.+2      	; 0xb32 <uart_getchar+0x140>
     b30:	08 f4       	brcc	.+2      	; 0xb34 <uart_getchar+0x142>
     b32:	6f cf       	rjmp	.-290    	; 0xa12 <uart_getchar+0x20>
     b34:	fe 01       	movw	r30, r28
     b36:	31 97       	sbiw	r30, 0x01	; 1
     b38:	80 81       	ld	r24, Z
     b3a:	80 32       	cpi	r24, 0x20	; 32
     b3c:	41 f7       	brne	.-48     	; 0xb0e <uart_getchar+0x11c>
     b3e:	69 cf       	rjmp	.-302    	; 0xa12 <uart_getchar+0x20>
					break;
			}
		}
	}

	c = *rxp++;
     b40:	e0 91 b0 40 	lds	r30, 0x40B0	; 0x8040b0 <rxp.1995>
     b44:	f0 91 b1 40 	lds	r31, 0x40B1	; 0x8040b1 <rxp.1995+0x1>
     b48:	cf 01       	movw	r24, r30
     b4a:	01 96       	adiw	r24, 0x01	; 1
     b4c:	80 93 b0 40 	sts	0x40B0, r24	; 0x8040b0 <rxp.1995>
     b50:	90 93 b1 40 	sts	0x40B1, r25	; 0x8040b1 <rxp.1995+0x1>
     b54:	80 81       	ld	r24, Z
	if (c == '\n')
     b56:	8a 30       	cpi	r24, 0x0A	; 10
     b58:	21 f4       	brne	.+8      	; 0xb62 <uart_getchar+0x170>
		rxp = 0;
     b5a:	10 92 b0 40 	sts	0x40B0, r1	; 0x8040b0 <rxp.1995>
     b5e:	10 92 b1 40 	sts	0x40B1, r1	; 0x8040b1 <rxp.1995+0x1>

	return c;
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	02 c0       	rjmp	.+4      	; 0xb6a <uart_getchar+0x178>
			    continue;
			}

			switch (c) {
				case 'c' & 0x1f:
				    return -1;
     b66:	8f ef       	ldi	r24, 0xFF	; 255
     b68:	9f ef       	ldi	r25, 0xFF	; 255
	c = *rxp++;
	if (c == '\n')
		rxp = 0;

	return c;
}
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	1f 91       	pop	r17
     b70:	0f 91       	pop	r16
     b72:	ff 90       	pop	r15
     b74:	ef 90       	pop	r14
     b76:	08 95       	ret

00000b78 <uart_init>:
/*
 * Initialize the UART to 9600 Bd, tx/rx, 8N1.
 */
FILE*
uart_init(uint8_t usartnum, uint32_t baud_rate, FILE* stream)
{
     b78:	cf 93       	push	r28
     b7a:	df 93       	push	r29
     b7c:	e9 01       	movw	r28, r18
	if (stream) {
     b7e:	20 97       	sbiw	r28, 0x00	; 0
     b80:	49 f0       	breq	.+18     	; 0xb94 <uart_init+0x1c>
		*stream = uartFile;
     b82:	9e e0       	ldi	r25, 0x0E	; 14
     b84:	e2 e0       	ldi	r30, 0x02	; 2
     b86:	f0 e4       	ldi	r31, 0x40	; 64
     b88:	d9 01       	movw	r26, r18
     b8a:	01 90       	ld	r0, Z+
     b8c:	0d 92       	st	X+, r0
     b8e:	9a 95       	dec	r25
     b90:	e1 f7       	brne	.-8      	; 0xb8a <uart_init+0x12>
     b92:	0b c0       	rjmp	.+22     	; 0xbaa <uart_init+0x32>
	} else {
		stdout = &uartFile;
     b94:	e2 eb       	ldi	r30, 0xB2	; 178
     b96:	f0 e4       	ldi	r31, 0x40	; 64
     b98:	22 e0       	ldi	r18, 0x02	; 2
     b9a:	30 e4       	ldi	r19, 0x40	; 64
     b9c:	22 83       	std	Z+2, r18	; 0x02
     b9e:	33 83       	std	Z+3, r19	; 0x03
		stdin = &uartFile;
     ba0:	20 83       	st	Z, r18
     ba2:	31 83       	std	Z+1, r19	; 0x01
		stderr = &uartFile;
     ba4:	24 83       	std	Z+4, r18	; 0x04
     ba6:	35 83       	std	Z+5, r19	; 0x05
		stream = &uartFile;
     ba8:	e9 01       	movw	r28, r18
	}

	void* usart = usart_init(usartnum, baud_rate);
     baa:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <usart_init>
	fdev_set_udata(stream, usart);
     bae:	8c 87       	std	Y+12, r24	; 0x0c
     bb0:	9d 87       	std	Y+13, r25	; 0x0d
	  
	return stream;
}
     bb2:	ce 01       	movw	r24, r28
     bb4:	df 91       	pop	r29
     bb6:	cf 91       	pop	r28
     bb8:	08 95       	ret

00000bba <__subsf3>:
     bba:	50 58       	subi	r21, 0x80	; 128

00000bbc <__addsf3>:
     bbc:	bb 27       	eor	r27, r27
     bbe:	aa 27       	eor	r26, r26
     bc0:	0e 94 f5 05 	call	0xbea	; 0xbea <__addsf3x>
     bc4:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__fp_round>
     bc8:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_pscA>
     bcc:	38 f0       	brcs	.+14     	; 0xbdc <__addsf3+0x20>
     bce:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__fp_pscB>
     bd2:	20 f0       	brcs	.+8      	; 0xbdc <__addsf3+0x20>
     bd4:	39 f4       	brne	.+14     	; 0xbe4 <__addsf3+0x28>
     bd6:	9f 3f       	cpi	r25, 0xFF	; 255
     bd8:	19 f4       	brne	.+6      	; 0xbe0 <__addsf3+0x24>
     bda:	26 f4       	brtc	.+8      	; 0xbe4 <__addsf3+0x28>
     bdc:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__fp_nan>
     be0:	0e f4       	brtc	.+2      	; 0xbe4 <__addsf3+0x28>
     be2:	e0 95       	com	r30
     be4:	e7 fb       	bst	r30, 7
     be6:	0c 94 2f 07 	jmp	0xe5e	; 0xe5e <__fp_inf>

00000bea <__addsf3x>:
     bea:	e9 2f       	mov	r30, r25
     bec:	0e 94 57 07 	call	0xeae	; 0xeae <__fp_split3>
     bf0:	58 f3       	brcs	.-42     	; 0xbc8 <__addsf3+0xc>
     bf2:	ba 17       	cp	r27, r26
     bf4:	62 07       	cpc	r22, r18
     bf6:	73 07       	cpc	r23, r19
     bf8:	84 07       	cpc	r24, r20
     bfa:	95 07       	cpc	r25, r21
     bfc:	20 f0       	brcs	.+8      	; 0xc06 <__addsf3x+0x1c>
     bfe:	79 f4       	brne	.+30     	; 0xc1e <__addsf3x+0x34>
     c00:	a6 f5       	brtc	.+104    	; 0xc6a <__addsf3x+0x80>
     c02:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__fp_zero>
     c06:	0e f4       	brtc	.+2      	; 0xc0a <__addsf3x+0x20>
     c08:	e0 95       	com	r30
     c0a:	0b 2e       	mov	r0, r27
     c0c:	ba 2f       	mov	r27, r26
     c0e:	a0 2d       	mov	r26, r0
     c10:	0b 01       	movw	r0, r22
     c12:	b9 01       	movw	r22, r18
     c14:	90 01       	movw	r18, r0
     c16:	0c 01       	movw	r0, r24
     c18:	ca 01       	movw	r24, r20
     c1a:	a0 01       	movw	r20, r0
     c1c:	11 24       	eor	r1, r1
     c1e:	ff 27       	eor	r31, r31
     c20:	59 1b       	sub	r21, r25
     c22:	99 f0       	breq	.+38     	; 0xc4a <__addsf3x+0x60>
     c24:	59 3f       	cpi	r21, 0xF9	; 249
     c26:	50 f4       	brcc	.+20     	; 0xc3c <__addsf3x+0x52>
     c28:	50 3e       	cpi	r21, 0xE0	; 224
     c2a:	68 f1       	brcs	.+90     	; 0xc86 <__addsf3x+0x9c>
     c2c:	1a 16       	cp	r1, r26
     c2e:	f0 40       	sbci	r31, 0x00	; 0
     c30:	a2 2f       	mov	r26, r18
     c32:	23 2f       	mov	r18, r19
     c34:	34 2f       	mov	r19, r20
     c36:	44 27       	eor	r20, r20
     c38:	58 5f       	subi	r21, 0xF8	; 248
     c3a:	f3 cf       	rjmp	.-26     	; 0xc22 <__addsf3x+0x38>
     c3c:	46 95       	lsr	r20
     c3e:	37 95       	ror	r19
     c40:	27 95       	ror	r18
     c42:	a7 95       	ror	r26
     c44:	f0 40       	sbci	r31, 0x00	; 0
     c46:	53 95       	inc	r21
     c48:	c9 f7       	brne	.-14     	; 0xc3c <__addsf3x+0x52>
     c4a:	7e f4       	brtc	.+30     	; 0xc6a <__addsf3x+0x80>
     c4c:	1f 16       	cp	r1, r31
     c4e:	ba 0b       	sbc	r27, r26
     c50:	62 0b       	sbc	r22, r18
     c52:	73 0b       	sbc	r23, r19
     c54:	84 0b       	sbc	r24, r20
     c56:	ba f0       	brmi	.+46     	; 0xc86 <__addsf3x+0x9c>
     c58:	91 50       	subi	r25, 0x01	; 1
     c5a:	a1 f0       	breq	.+40     	; 0xc84 <__addsf3x+0x9a>
     c5c:	ff 0f       	add	r31, r31
     c5e:	bb 1f       	adc	r27, r27
     c60:	66 1f       	adc	r22, r22
     c62:	77 1f       	adc	r23, r23
     c64:	88 1f       	adc	r24, r24
     c66:	c2 f7       	brpl	.-16     	; 0xc58 <__addsf3x+0x6e>
     c68:	0e c0       	rjmp	.+28     	; 0xc86 <__addsf3x+0x9c>
     c6a:	ba 0f       	add	r27, r26
     c6c:	62 1f       	adc	r22, r18
     c6e:	73 1f       	adc	r23, r19
     c70:	84 1f       	adc	r24, r20
     c72:	48 f4       	brcc	.+18     	; 0xc86 <__addsf3x+0x9c>
     c74:	87 95       	ror	r24
     c76:	77 95       	ror	r23
     c78:	67 95       	ror	r22
     c7a:	b7 95       	ror	r27
     c7c:	f7 95       	ror	r31
     c7e:	9e 3f       	cpi	r25, 0xFE	; 254
     c80:	08 f0       	brcs	.+2      	; 0xc84 <__addsf3x+0x9a>
     c82:	b0 cf       	rjmp	.-160    	; 0xbe4 <__addsf3+0x28>
     c84:	93 95       	inc	r25
     c86:	88 0f       	add	r24, r24
     c88:	08 f0       	brcs	.+2      	; 0xc8c <__addsf3x+0xa2>
     c8a:	99 27       	eor	r25, r25
     c8c:	ee 0f       	add	r30, r30
     c8e:	97 95       	ror	r25
     c90:	87 95       	ror	r24
     c92:	08 95       	ret

00000c94 <__divsf3>:
     c94:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__divsf3x>
     c98:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__fp_round>
     c9c:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__fp_pscB>
     ca0:	58 f0       	brcs	.+22     	; 0xcb8 <__divsf3+0x24>
     ca2:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_pscA>
     ca6:	40 f0       	brcs	.+16     	; 0xcb8 <__divsf3+0x24>
     ca8:	29 f4       	brne	.+10     	; 0xcb4 <__divsf3+0x20>
     caa:	5f 3f       	cpi	r21, 0xFF	; 255
     cac:	29 f0       	breq	.+10     	; 0xcb8 <__divsf3+0x24>
     cae:	0c 94 2f 07 	jmp	0xe5e	; 0xe5e <__fp_inf>
     cb2:	51 11       	cpse	r21, r1
     cb4:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__fp_szero>
     cb8:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__fp_nan>

00000cbc <__divsf3x>:
     cbc:	0e 94 57 07 	call	0xeae	; 0xeae <__fp_split3>
     cc0:	68 f3       	brcs	.-38     	; 0xc9c <__divsf3+0x8>

00000cc2 <__divsf3_pse>:
     cc2:	99 23       	and	r25, r25
     cc4:	b1 f3       	breq	.-20     	; 0xcb2 <__divsf3+0x1e>
     cc6:	55 23       	and	r21, r21
     cc8:	91 f3       	breq	.-28     	; 0xcae <__divsf3+0x1a>
     cca:	95 1b       	sub	r25, r21
     ccc:	55 0b       	sbc	r21, r21
     cce:	bb 27       	eor	r27, r27
     cd0:	aa 27       	eor	r26, r26
     cd2:	62 17       	cp	r22, r18
     cd4:	73 07       	cpc	r23, r19
     cd6:	84 07       	cpc	r24, r20
     cd8:	38 f0       	brcs	.+14     	; 0xce8 <__divsf3_pse+0x26>
     cda:	9f 5f       	subi	r25, 0xFF	; 255
     cdc:	5f 4f       	sbci	r21, 0xFF	; 255
     cde:	22 0f       	add	r18, r18
     ce0:	33 1f       	adc	r19, r19
     ce2:	44 1f       	adc	r20, r20
     ce4:	aa 1f       	adc	r26, r26
     ce6:	a9 f3       	breq	.-22     	; 0xcd2 <__divsf3_pse+0x10>
     ce8:	35 d0       	rcall	.+106    	; 0xd54 <__divsf3_pse+0x92>
     cea:	0e 2e       	mov	r0, r30
     cec:	3a f0       	brmi	.+14     	; 0xcfc <__divsf3_pse+0x3a>
     cee:	e0 e8       	ldi	r30, 0x80	; 128
     cf0:	32 d0       	rcall	.+100    	; 0xd56 <__divsf3_pse+0x94>
     cf2:	91 50       	subi	r25, 0x01	; 1
     cf4:	50 40       	sbci	r21, 0x00	; 0
     cf6:	e6 95       	lsr	r30
     cf8:	00 1c       	adc	r0, r0
     cfa:	ca f7       	brpl	.-14     	; 0xcee <__divsf3_pse+0x2c>
     cfc:	2b d0       	rcall	.+86     	; 0xd54 <__divsf3_pse+0x92>
     cfe:	fe 2f       	mov	r31, r30
     d00:	29 d0       	rcall	.+82     	; 0xd54 <__divsf3_pse+0x92>
     d02:	66 0f       	add	r22, r22
     d04:	77 1f       	adc	r23, r23
     d06:	88 1f       	adc	r24, r24
     d08:	bb 1f       	adc	r27, r27
     d0a:	26 17       	cp	r18, r22
     d0c:	37 07       	cpc	r19, r23
     d0e:	48 07       	cpc	r20, r24
     d10:	ab 07       	cpc	r26, r27
     d12:	b0 e8       	ldi	r27, 0x80	; 128
     d14:	09 f0       	breq	.+2      	; 0xd18 <__divsf3_pse+0x56>
     d16:	bb 0b       	sbc	r27, r27
     d18:	80 2d       	mov	r24, r0
     d1a:	bf 01       	movw	r22, r30
     d1c:	ff 27       	eor	r31, r31
     d1e:	93 58       	subi	r25, 0x83	; 131
     d20:	5f 4f       	sbci	r21, 0xFF	; 255
     d22:	3a f0       	brmi	.+14     	; 0xd32 <__divsf3_pse+0x70>
     d24:	9e 3f       	cpi	r25, 0xFE	; 254
     d26:	51 05       	cpc	r21, r1
     d28:	78 f0       	brcs	.+30     	; 0xd48 <__divsf3_pse+0x86>
     d2a:	0c 94 2f 07 	jmp	0xe5e	; 0xe5e <__fp_inf>
     d2e:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__fp_szero>
     d32:	5f 3f       	cpi	r21, 0xFF	; 255
     d34:	e4 f3       	brlt	.-8      	; 0xd2e <__divsf3_pse+0x6c>
     d36:	98 3e       	cpi	r25, 0xE8	; 232
     d38:	d4 f3       	brlt	.-12     	; 0xd2e <__divsf3_pse+0x6c>
     d3a:	86 95       	lsr	r24
     d3c:	77 95       	ror	r23
     d3e:	67 95       	ror	r22
     d40:	b7 95       	ror	r27
     d42:	f7 95       	ror	r31
     d44:	9f 5f       	subi	r25, 0xFF	; 255
     d46:	c9 f7       	brne	.-14     	; 0xd3a <__divsf3_pse+0x78>
     d48:	88 0f       	add	r24, r24
     d4a:	91 1d       	adc	r25, r1
     d4c:	96 95       	lsr	r25
     d4e:	87 95       	ror	r24
     d50:	97 f9       	bld	r25, 7
     d52:	08 95       	ret
     d54:	e1 e0       	ldi	r30, 0x01	; 1
     d56:	66 0f       	add	r22, r22
     d58:	77 1f       	adc	r23, r23
     d5a:	88 1f       	adc	r24, r24
     d5c:	bb 1f       	adc	r27, r27
     d5e:	62 17       	cp	r22, r18
     d60:	73 07       	cpc	r23, r19
     d62:	84 07       	cpc	r24, r20
     d64:	ba 07       	cpc	r27, r26
     d66:	20 f0       	brcs	.+8      	; 0xd70 <__divsf3_pse+0xae>
     d68:	62 1b       	sub	r22, r18
     d6a:	73 0b       	sbc	r23, r19
     d6c:	84 0b       	sbc	r24, r20
     d6e:	ba 0b       	sbc	r27, r26
     d70:	ee 1f       	adc	r30, r30
     d72:	88 f7       	brcc	.-30     	; 0xd56 <__divsf3_pse+0x94>
     d74:	e0 95       	com	r30
     d76:	08 95       	ret

00000d78 <__fixsfsi>:
     d78:	0e 94 c3 06 	call	0xd86	; 0xd86 <__fixunssfsi>
     d7c:	68 94       	set
     d7e:	b1 11       	cpse	r27, r1
     d80:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__fp_szero>
     d84:	08 95       	ret

00000d86 <__fixunssfsi>:
     d86:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_splitA>
     d8a:	88 f0       	brcs	.+34     	; 0xdae <__fixunssfsi+0x28>
     d8c:	9f 57       	subi	r25, 0x7F	; 127
     d8e:	98 f0       	brcs	.+38     	; 0xdb6 <__fixunssfsi+0x30>
     d90:	b9 2f       	mov	r27, r25
     d92:	99 27       	eor	r25, r25
     d94:	b7 51       	subi	r27, 0x17	; 23
     d96:	b0 f0       	brcs	.+44     	; 0xdc4 <__fixunssfsi+0x3e>
     d98:	e1 f0       	breq	.+56     	; 0xdd2 <__fixunssfsi+0x4c>
     d9a:	66 0f       	add	r22, r22
     d9c:	77 1f       	adc	r23, r23
     d9e:	88 1f       	adc	r24, r24
     da0:	99 1f       	adc	r25, r25
     da2:	1a f0       	brmi	.+6      	; 0xdaa <__fixunssfsi+0x24>
     da4:	ba 95       	dec	r27
     da6:	c9 f7       	brne	.-14     	; 0xd9a <__fixunssfsi+0x14>
     da8:	14 c0       	rjmp	.+40     	; 0xdd2 <__fixunssfsi+0x4c>
     daa:	b1 30       	cpi	r27, 0x01	; 1
     dac:	91 f0       	breq	.+36     	; 0xdd2 <__fixunssfsi+0x4c>
     dae:	0e 94 79 07 	call	0xef2	; 0xef2 <__fp_zero>
     db2:	b1 e0       	ldi	r27, 0x01	; 1
     db4:	08 95       	ret
     db6:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__fp_zero>
     dba:	67 2f       	mov	r22, r23
     dbc:	78 2f       	mov	r23, r24
     dbe:	88 27       	eor	r24, r24
     dc0:	b8 5f       	subi	r27, 0xF8	; 248
     dc2:	39 f0       	breq	.+14     	; 0xdd2 <__fixunssfsi+0x4c>
     dc4:	b9 3f       	cpi	r27, 0xF9	; 249
     dc6:	cc f3       	brlt	.-14     	; 0xdba <__fixunssfsi+0x34>
     dc8:	86 95       	lsr	r24
     dca:	77 95       	ror	r23
     dcc:	67 95       	ror	r22
     dce:	b3 95       	inc	r27
     dd0:	d9 f7       	brne	.-10     	; 0xdc8 <__fixunssfsi+0x42>
     dd2:	3e f4       	brtc	.+14     	; 0xde2 <__fixunssfsi+0x5c>
     dd4:	90 95       	com	r25
     dd6:	80 95       	com	r24
     dd8:	70 95       	com	r23
     dda:	61 95       	neg	r22
     ddc:	7f 4f       	sbci	r23, 0xFF	; 255
     dde:	8f 4f       	sbci	r24, 0xFF	; 255
     de0:	9f 4f       	sbci	r25, 0xFF	; 255
     de2:	08 95       	ret

00000de4 <__floatunsisf>:
     de4:	e8 94       	clt
     de6:	09 c0       	rjmp	.+18     	; 0xdfa <__floatsisf+0x12>

00000de8 <__floatsisf>:
     de8:	97 fb       	bst	r25, 7
     dea:	3e f4       	brtc	.+14     	; 0xdfa <__floatsisf+0x12>
     dec:	90 95       	com	r25
     dee:	80 95       	com	r24
     df0:	70 95       	com	r23
     df2:	61 95       	neg	r22
     df4:	7f 4f       	sbci	r23, 0xFF	; 255
     df6:	8f 4f       	sbci	r24, 0xFF	; 255
     df8:	9f 4f       	sbci	r25, 0xFF	; 255
     dfa:	99 23       	and	r25, r25
     dfc:	a9 f0       	breq	.+42     	; 0xe28 <__floatsisf+0x40>
     dfe:	f9 2f       	mov	r31, r25
     e00:	96 e9       	ldi	r25, 0x96	; 150
     e02:	bb 27       	eor	r27, r27
     e04:	93 95       	inc	r25
     e06:	f6 95       	lsr	r31
     e08:	87 95       	ror	r24
     e0a:	77 95       	ror	r23
     e0c:	67 95       	ror	r22
     e0e:	b7 95       	ror	r27
     e10:	f1 11       	cpse	r31, r1
     e12:	f8 cf       	rjmp	.-16     	; 0xe04 <__floatsisf+0x1c>
     e14:	fa f4       	brpl	.+62     	; 0xe54 <__floatsisf+0x6c>
     e16:	bb 0f       	add	r27, r27
     e18:	11 f4       	brne	.+4      	; 0xe1e <__floatsisf+0x36>
     e1a:	60 ff       	sbrs	r22, 0
     e1c:	1b c0       	rjmp	.+54     	; 0xe54 <__floatsisf+0x6c>
     e1e:	6f 5f       	subi	r22, 0xFF	; 255
     e20:	7f 4f       	sbci	r23, 0xFF	; 255
     e22:	8f 4f       	sbci	r24, 0xFF	; 255
     e24:	9f 4f       	sbci	r25, 0xFF	; 255
     e26:	16 c0       	rjmp	.+44     	; 0xe54 <__floatsisf+0x6c>
     e28:	88 23       	and	r24, r24
     e2a:	11 f0       	breq	.+4      	; 0xe30 <__floatsisf+0x48>
     e2c:	96 e9       	ldi	r25, 0x96	; 150
     e2e:	11 c0       	rjmp	.+34     	; 0xe52 <__floatsisf+0x6a>
     e30:	77 23       	and	r23, r23
     e32:	21 f0       	breq	.+8      	; 0xe3c <__floatsisf+0x54>
     e34:	9e e8       	ldi	r25, 0x8E	; 142
     e36:	87 2f       	mov	r24, r23
     e38:	76 2f       	mov	r23, r22
     e3a:	05 c0       	rjmp	.+10     	; 0xe46 <__floatsisf+0x5e>
     e3c:	66 23       	and	r22, r22
     e3e:	71 f0       	breq	.+28     	; 0xe5c <__floatsisf+0x74>
     e40:	96 e8       	ldi	r25, 0x86	; 134
     e42:	86 2f       	mov	r24, r22
     e44:	70 e0       	ldi	r23, 0x00	; 0
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	2a f0       	brmi	.+10     	; 0xe54 <__floatsisf+0x6c>
     e4a:	9a 95       	dec	r25
     e4c:	66 0f       	add	r22, r22
     e4e:	77 1f       	adc	r23, r23
     e50:	88 1f       	adc	r24, r24
     e52:	da f7       	brpl	.-10     	; 0xe4a <__floatsisf+0x62>
     e54:	88 0f       	add	r24, r24
     e56:	96 95       	lsr	r25
     e58:	87 95       	ror	r24
     e5a:	97 f9       	bld	r25, 7
     e5c:	08 95       	ret

00000e5e <__fp_inf>:
     e5e:	97 f9       	bld	r25, 7
     e60:	9f 67       	ori	r25, 0x7F	; 127
     e62:	80 e8       	ldi	r24, 0x80	; 128
     e64:	70 e0       	ldi	r23, 0x00	; 0
     e66:	60 e0       	ldi	r22, 0x00	; 0
     e68:	08 95       	ret

00000e6a <__fp_nan>:
     e6a:	9f ef       	ldi	r25, 0xFF	; 255
     e6c:	80 ec       	ldi	r24, 0xC0	; 192
     e6e:	08 95       	ret

00000e70 <__fp_pscA>:
     e70:	00 24       	eor	r0, r0
     e72:	0a 94       	dec	r0
     e74:	16 16       	cp	r1, r22
     e76:	17 06       	cpc	r1, r23
     e78:	18 06       	cpc	r1, r24
     e7a:	09 06       	cpc	r0, r25
     e7c:	08 95       	ret

00000e7e <__fp_pscB>:
     e7e:	00 24       	eor	r0, r0
     e80:	0a 94       	dec	r0
     e82:	12 16       	cp	r1, r18
     e84:	13 06       	cpc	r1, r19
     e86:	14 06       	cpc	r1, r20
     e88:	05 06       	cpc	r0, r21
     e8a:	08 95       	ret

00000e8c <__fp_round>:
     e8c:	09 2e       	mov	r0, r25
     e8e:	03 94       	inc	r0
     e90:	00 0c       	add	r0, r0
     e92:	11 f4       	brne	.+4      	; 0xe98 <__fp_round+0xc>
     e94:	88 23       	and	r24, r24
     e96:	52 f0       	brmi	.+20     	; 0xeac <__fp_round+0x20>
     e98:	bb 0f       	add	r27, r27
     e9a:	40 f4       	brcc	.+16     	; 0xeac <__fp_round+0x20>
     e9c:	bf 2b       	or	r27, r31
     e9e:	11 f4       	brne	.+4      	; 0xea4 <__fp_round+0x18>
     ea0:	60 ff       	sbrs	r22, 0
     ea2:	04 c0       	rjmp	.+8      	; 0xeac <__fp_round+0x20>
     ea4:	6f 5f       	subi	r22, 0xFF	; 255
     ea6:	7f 4f       	sbci	r23, 0xFF	; 255
     ea8:	8f 4f       	sbci	r24, 0xFF	; 255
     eaa:	9f 4f       	sbci	r25, 0xFF	; 255
     eac:	08 95       	ret

00000eae <__fp_split3>:
     eae:	57 fd       	sbrc	r21, 7
     eb0:	90 58       	subi	r25, 0x80	; 128
     eb2:	44 0f       	add	r20, r20
     eb4:	55 1f       	adc	r21, r21
     eb6:	59 f0       	breq	.+22     	; 0xece <__fp_splitA+0x10>
     eb8:	5f 3f       	cpi	r21, 0xFF	; 255
     eba:	71 f0       	breq	.+28     	; 0xed8 <__fp_splitA+0x1a>
     ebc:	47 95       	ror	r20

00000ebe <__fp_splitA>:
     ebe:	88 0f       	add	r24, r24
     ec0:	97 fb       	bst	r25, 7
     ec2:	99 1f       	adc	r25, r25
     ec4:	61 f0       	breq	.+24     	; 0xede <__fp_splitA+0x20>
     ec6:	9f 3f       	cpi	r25, 0xFF	; 255
     ec8:	79 f0       	breq	.+30     	; 0xee8 <__fp_splitA+0x2a>
     eca:	87 95       	ror	r24
     ecc:	08 95       	ret
     ece:	12 16       	cp	r1, r18
     ed0:	13 06       	cpc	r1, r19
     ed2:	14 06       	cpc	r1, r20
     ed4:	55 1f       	adc	r21, r21
     ed6:	f2 cf       	rjmp	.-28     	; 0xebc <__fp_split3+0xe>
     ed8:	46 95       	lsr	r20
     eda:	f1 df       	rcall	.-30     	; 0xebe <__fp_splitA>
     edc:	08 c0       	rjmp	.+16     	; 0xeee <__fp_splitA+0x30>
     ede:	16 16       	cp	r1, r22
     ee0:	17 06       	cpc	r1, r23
     ee2:	18 06       	cpc	r1, r24
     ee4:	99 1f       	adc	r25, r25
     ee6:	f1 cf       	rjmp	.-30     	; 0xeca <__fp_splitA+0xc>
     ee8:	86 95       	lsr	r24
     eea:	71 05       	cpc	r23, r1
     eec:	61 05       	cpc	r22, r1
     eee:	08 94       	sec
     ef0:	08 95       	ret

00000ef2 <__fp_zero>:
     ef2:	e8 94       	clt

00000ef4 <__fp_szero>:
     ef4:	bb 27       	eor	r27, r27
     ef6:	66 27       	eor	r22, r22
     ef8:	77 27       	eor	r23, r23
     efa:	cb 01       	movw	r24, r22
     efc:	97 f9       	bld	r25, 7
     efe:	08 95       	ret

00000f00 <__mulsf3>:
     f00:	0e 94 93 07 	call	0xf26	; 0xf26 <__mulsf3x>
     f04:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__fp_round>
     f08:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_pscA>
     f0c:	38 f0       	brcs	.+14     	; 0xf1c <__mulsf3+0x1c>
     f0e:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__fp_pscB>
     f12:	20 f0       	brcs	.+8      	; 0xf1c <__mulsf3+0x1c>
     f14:	95 23       	and	r25, r21
     f16:	11 f0       	breq	.+4      	; 0xf1c <__mulsf3+0x1c>
     f18:	0c 94 2f 07 	jmp	0xe5e	; 0xe5e <__fp_inf>
     f1c:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__fp_nan>
     f20:	11 24       	eor	r1, r1
     f22:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__fp_szero>

00000f26 <__mulsf3x>:
     f26:	0e 94 57 07 	call	0xeae	; 0xeae <__fp_split3>
     f2a:	70 f3       	brcs	.-36     	; 0xf08 <__mulsf3+0x8>

00000f2c <__mulsf3_pse>:
     f2c:	95 9f       	mul	r25, r21
     f2e:	c1 f3       	breq	.-16     	; 0xf20 <__mulsf3+0x20>
     f30:	95 0f       	add	r25, r21
     f32:	50 e0       	ldi	r21, 0x00	; 0
     f34:	55 1f       	adc	r21, r21
     f36:	62 9f       	mul	r22, r18
     f38:	f0 01       	movw	r30, r0
     f3a:	72 9f       	mul	r23, r18
     f3c:	bb 27       	eor	r27, r27
     f3e:	f0 0d       	add	r31, r0
     f40:	b1 1d       	adc	r27, r1
     f42:	63 9f       	mul	r22, r19
     f44:	aa 27       	eor	r26, r26
     f46:	f0 0d       	add	r31, r0
     f48:	b1 1d       	adc	r27, r1
     f4a:	aa 1f       	adc	r26, r26
     f4c:	64 9f       	mul	r22, r20
     f4e:	66 27       	eor	r22, r22
     f50:	b0 0d       	add	r27, r0
     f52:	a1 1d       	adc	r26, r1
     f54:	66 1f       	adc	r22, r22
     f56:	82 9f       	mul	r24, r18
     f58:	22 27       	eor	r18, r18
     f5a:	b0 0d       	add	r27, r0
     f5c:	a1 1d       	adc	r26, r1
     f5e:	62 1f       	adc	r22, r18
     f60:	73 9f       	mul	r23, r19
     f62:	b0 0d       	add	r27, r0
     f64:	a1 1d       	adc	r26, r1
     f66:	62 1f       	adc	r22, r18
     f68:	83 9f       	mul	r24, r19
     f6a:	a0 0d       	add	r26, r0
     f6c:	61 1d       	adc	r22, r1
     f6e:	22 1f       	adc	r18, r18
     f70:	74 9f       	mul	r23, r20
     f72:	33 27       	eor	r19, r19
     f74:	a0 0d       	add	r26, r0
     f76:	61 1d       	adc	r22, r1
     f78:	23 1f       	adc	r18, r19
     f7a:	84 9f       	mul	r24, r20
     f7c:	60 0d       	add	r22, r0
     f7e:	21 1d       	adc	r18, r1
     f80:	82 2f       	mov	r24, r18
     f82:	76 2f       	mov	r23, r22
     f84:	6a 2f       	mov	r22, r26
     f86:	11 24       	eor	r1, r1
     f88:	9f 57       	subi	r25, 0x7F	; 127
     f8a:	50 40       	sbci	r21, 0x00	; 0
     f8c:	9a f0       	brmi	.+38     	; 0xfb4 <__mulsf3_pse+0x88>
     f8e:	f1 f0       	breq	.+60     	; 0xfcc <__mulsf3_pse+0xa0>
     f90:	88 23       	and	r24, r24
     f92:	4a f0       	brmi	.+18     	; 0xfa6 <__mulsf3_pse+0x7a>
     f94:	ee 0f       	add	r30, r30
     f96:	ff 1f       	adc	r31, r31
     f98:	bb 1f       	adc	r27, r27
     f9a:	66 1f       	adc	r22, r22
     f9c:	77 1f       	adc	r23, r23
     f9e:	88 1f       	adc	r24, r24
     fa0:	91 50       	subi	r25, 0x01	; 1
     fa2:	50 40       	sbci	r21, 0x00	; 0
     fa4:	a9 f7       	brne	.-22     	; 0xf90 <__mulsf3_pse+0x64>
     fa6:	9e 3f       	cpi	r25, 0xFE	; 254
     fa8:	51 05       	cpc	r21, r1
     faa:	80 f0       	brcs	.+32     	; 0xfcc <__mulsf3_pse+0xa0>
     fac:	0c 94 2f 07 	jmp	0xe5e	; 0xe5e <__fp_inf>
     fb0:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__fp_szero>
     fb4:	5f 3f       	cpi	r21, 0xFF	; 255
     fb6:	e4 f3       	brlt	.-8      	; 0xfb0 <__mulsf3_pse+0x84>
     fb8:	98 3e       	cpi	r25, 0xE8	; 232
     fba:	d4 f3       	brlt	.-12     	; 0xfb0 <__mulsf3_pse+0x84>
     fbc:	86 95       	lsr	r24
     fbe:	77 95       	ror	r23
     fc0:	67 95       	ror	r22
     fc2:	b7 95       	ror	r27
     fc4:	f7 95       	ror	r31
     fc6:	e7 95       	ror	r30
     fc8:	9f 5f       	subi	r25, 0xFF	; 255
     fca:	c1 f7       	brne	.-16     	; 0xfbc <__mulsf3_pse+0x90>
     fcc:	fe 2b       	or	r31, r30
     fce:	88 0f       	add	r24, r24
     fd0:	91 1d       	adc	r25, r1
     fd2:	96 95       	lsr	r25
     fd4:	87 95       	ror	r24
     fd6:	97 f9       	bld	r25, 7
     fd8:	08 95       	ret

00000fda <__udivmodsi4>:
     fda:	a1 e2       	ldi	r26, 0x21	; 33
     fdc:	1a 2e       	mov	r1, r26
     fde:	aa 1b       	sub	r26, r26
     fe0:	bb 1b       	sub	r27, r27
     fe2:	fd 01       	movw	r30, r26
     fe4:	0d c0       	rjmp	.+26     	; 0x1000 <__udivmodsi4_ep>

00000fe6 <__udivmodsi4_loop>:
     fe6:	aa 1f       	adc	r26, r26
     fe8:	bb 1f       	adc	r27, r27
     fea:	ee 1f       	adc	r30, r30
     fec:	ff 1f       	adc	r31, r31
     fee:	a2 17       	cp	r26, r18
     ff0:	b3 07       	cpc	r27, r19
     ff2:	e4 07       	cpc	r30, r20
     ff4:	f5 07       	cpc	r31, r21
     ff6:	20 f0       	brcs	.+8      	; 0x1000 <__udivmodsi4_ep>
     ff8:	a2 1b       	sub	r26, r18
     ffa:	b3 0b       	sbc	r27, r19
     ffc:	e4 0b       	sbc	r30, r20
     ffe:	f5 0b       	sbc	r31, r21

00001000 <__udivmodsi4_ep>:
    1000:	66 1f       	adc	r22, r22
    1002:	77 1f       	adc	r23, r23
    1004:	88 1f       	adc	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	1a 94       	dec	r1
    100a:	69 f7       	brne	.-38     	; 0xfe6 <__udivmodsi4_loop>
    100c:	60 95       	com	r22
    100e:	70 95       	com	r23
    1010:	80 95       	com	r24
    1012:	90 95       	com	r25
    1014:	9b 01       	movw	r18, r22
    1016:	ac 01       	movw	r20, r24
    1018:	bd 01       	movw	r22, r26
    101a:	cf 01       	movw	r24, r30
    101c:	08 95       	ret

0000101e <dtostrf>:
    101e:	ef 92       	push	r14
    1020:	0f 93       	push	r16
    1022:	1f 93       	push	r17
    1024:	cf 93       	push	r28
    1026:	df 93       	push	r29
    1028:	e8 01       	movw	r28, r16
    102a:	47 fd       	sbrc	r20, 7
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <dtostrf+0x14>
    102e:	34 e0       	ldi	r19, 0x04	; 4
    1030:	01 c0       	rjmp	.+2      	; 0x1034 <dtostrf+0x16>
    1032:	34 e1       	ldi	r19, 0x14	; 20
    1034:	04 2e       	mov	r0, r20
    1036:	00 0c       	add	r0, r0
    1038:	55 0b       	sbc	r21, r21
    103a:	57 ff       	sbrs	r21, 7
    103c:	03 c0       	rjmp	.+6      	; 0x1044 <dtostrf+0x26>
    103e:	51 95       	neg	r21
    1040:	41 95       	neg	r20
    1042:	51 09       	sbc	r21, r1
    1044:	e3 2e       	mov	r14, r19
    1046:	02 2f       	mov	r16, r18
    1048:	24 2f       	mov	r18, r20
    104a:	ae 01       	movw	r20, r28
    104c:	0e 94 b9 0a 	call	0x1572	; 0x1572 <dtoa_prf>
    1050:	ce 01       	movw	r24, r28
    1052:	df 91       	pop	r29
    1054:	cf 91       	pop	r28
    1056:	1f 91       	pop	r17
    1058:	0f 91       	pop	r16
    105a:	ef 90       	pop	r14
    105c:	08 95       	ret

0000105e <fwrite>:
    105e:	8f 92       	push	r8
    1060:	9f 92       	push	r9
    1062:	af 92       	push	r10
    1064:	bf 92       	push	r11
    1066:	cf 92       	push	r12
    1068:	df 92       	push	r13
    106a:	ef 92       	push	r14
    106c:	ff 92       	push	r15
    106e:	0f 93       	push	r16
    1070:	1f 93       	push	r17
    1072:	cf 93       	push	r28
    1074:	df 93       	push	r29
    1076:	5b 01       	movw	r10, r22
    1078:	4a 01       	movw	r8, r20
    107a:	79 01       	movw	r14, r18
    107c:	d9 01       	movw	r26, r18
    107e:	13 96       	adiw	r26, 0x03	; 3
    1080:	2c 91       	ld	r18, X
    1082:	21 ff       	sbrs	r18, 1
    1084:	1d c0       	rjmp	.+58     	; 0x10c0 <fwrite+0x62>
    1086:	c0 e0       	ldi	r28, 0x00	; 0
    1088:	d0 e0       	ldi	r29, 0x00	; 0
    108a:	c8 15       	cp	r28, r8
    108c:	d9 05       	cpc	r29, r9
    108e:	d9 f0       	breq	.+54     	; 0x10c6 <fwrite+0x68>
    1090:	8c 01       	movw	r16, r24
    1092:	6c 01       	movw	r12, r24
    1094:	ca 0c       	add	r12, r10
    1096:	db 1c       	adc	r13, r11
    1098:	c8 01       	movw	r24, r16
    109a:	0c 15       	cp	r16, r12
    109c:	1d 05       	cpc	r17, r13
    109e:	71 f0       	breq	.+28     	; 0x10bc <fwrite+0x5e>
    10a0:	0f 5f       	subi	r16, 0xFF	; 255
    10a2:	1f 4f       	sbci	r17, 0xFF	; 255
    10a4:	d7 01       	movw	r26, r14
    10a6:	18 96       	adiw	r26, 0x08	; 8
    10a8:	ed 91       	ld	r30, X+
    10aa:	fc 91       	ld	r31, X
    10ac:	19 97       	sbiw	r26, 0x09	; 9
    10ae:	b7 01       	movw	r22, r14
    10b0:	dc 01       	movw	r26, r24
    10b2:	8c 91       	ld	r24, X
    10b4:	09 95       	icall
    10b6:	89 2b       	or	r24, r25
    10b8:	79 f3       	breq	.-34     	; 0x1098 <fwrite+0x3a>
    10ba:	05 c0       	rjmp	.+10     	; 0x10c6 <fwrite+0x68>
    10bc:	21 96       	adiw	r28, 0x01	; 1
    10be:	e5 cf       	rjmp	.-54     	; 0x108a <fwrite+0x2c>
    10c0:	80 e0       	ldi	r24, 0x00	; 0
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	01 c0       	rjmp	.+2      	; 0x10c8 <fwrite+0x6a>
    10c6:	ce 01       	movw	r24, r28
    10c8:	df 91       	pop	r29
    10ca:	cf 91       	pop	r28
    10cc:	1f 91       	pop	r17
    10ce:	0f 91       	pop	r16
    10d0:	ff 90       	pop	r15
    10d2:	ef 90       	pop	r14
    10d4:	df 90       	pop	r13
    10d6:	cf 90       	pop	r12
    10d8:	bf 90       	pop	r11
    10da:	af 90       	pop	r10
    10dc:	9f 90       	pop	r9
    10de:	8f 90       	pop	r8
    10e0:	08 95       	ret

000010e2 <printf>:
    10e2:	cf 93       	push	r28
    10e4:	df 93       	push	r29
    10e6:	cd b7       	in	r28, 0x3d	; 61
    10e8:	de b7       	in	r29, 0x3e	; 62
    10ea:	ae 01       	movw	r20, r28
    10ec:	4b 5f       	subi	r20, 0xFB	; 251
    10ee:	5f 4f       	sbci	r21, 0xFF	; 255
    10f0:	fa 01       	movw	r30, r20
    10f2:	61 91       	ld	r22, Z+
    10f4:	71 91       	ld	r23, Z+
    10f6:	af 01       	movw	r20, r30
    10f8:	80 91 b4 40 	lds	r24, 0x40B4	; 0x8040b4 <__iob+0x2>
    10fc:	90 91 b5 40 	lds	r25, 0x40B5	; 0x8040b5 <__iob+0x3>
    1100:	0e 94 b5 08 	call	0x116a	; 0x116a <vfprintf>
    1104:	df 91       	pop	r29
    1106:	cf 91       	pop	r28
    1108:	08 95       	ret

0000110a <puts>:
    110a:	0f 93       	push	r16
    110c:	1f 93       	push	r17
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	e0 91 b4 40 	lds	r30, 0x40B4	; 0x8040b4 <__iob+0x2>
    1116:	f0 91 b5 40 	lds	r31, 0x40B5	; 0x8040b5 <__iob+0x3>
    111a:	23 81       	ldd	r18, Z+3	; 0x03
    111c:	21 ff       	sbrs	r18, 1
    111e:	1b c0       	rjmp	.+54     	; 0x1156 <puts+0x4c>
    1120:	8c 01       	movw	r16, r24
    1122:	d0 e0       	ldi	r29, 0x00	; 0
    1124:	c0 e0       	ldi	r28, 0x00	; 0
    1126:	f8 01       	movw	r30, r16
    1128:	81 91       	ld	r24, Z+
    112a:	8f 01       	movw	r16, r30
    112c:	60 91 b4 40 	lds	r22, 0x40B4	; 0x8040b4 <__iob+0x2>
    1130:	70 91 b5 40 	lds	r23, 0x40B5	; 0x8040b5 <__iob+0x3>
    1134:	db 01       	movw	r26, r22
    1136:	18 96       	adiw	r26, 0x08	; 8
    1138:	ed 91       	ld	r30, X+
    113a:	fc 91       	ld	r31, X
    113c:	19 97       	sbiw	r26, 0x09	; 9
    113e:	88 23       	and	r24, r24
    1140:	31 f0       	breq	.+12     	; 0x114e <puts+0x44>
    1142:	09 95       	icall
    1144:	89 2b       	or	r24, r25
    1146:	79 f3       	breq	.-34     	; 0x1126 <puts+0x1c>
    1148:	df ef       	ldi	r29, 0xFF	; 255
    114a:	cf ef       	ldi	r28, 0xFF	; 255
    114c:	ec cf       	rjmp	.-40     	; 0x1126 <puts+0x1c>
    114e:	8a e0       	ldi	r24, 0x0A	; 10
    1150:	09 95       	icall
    1152:	89 2b       	or	r24, r25
    1154:	19 f0       	breq	.+6      	; 0x115c <puts+0x52>
    1156:	8f ef       	ldi	r24, 0xFF	; 255
    1158:	9f ef       	ldi	r25, 0xFF	; 255
    115a:	02 c0       	rjmp	.+4      	; 0x1160 <puts+0x56>
    115c:	8d 2f       	mov	r24, r29
    115e:	9c 2f       	mov	r25, r28
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	1f 91       	pop	r17
    1166:	0f 91       	pop	r16
    1168:	08 95       	ret

0000116a <vfprintf>:
    116a:	2f 92       	push	r2
    116c:	3f 92       	push	r3
    116e:	4f 92       	push	r4
    1170:	5f 92       	push	r5
    1172:	6f 92       	push	r6
    1174:	7f 92       	push	r7
    1176:	8f 92       	push	r8
    1178:	9f 92       	push	r9
    117a:	af 92       	push	r10
    117c:	bf 92       	push	r11
    117e:	cf 92       	push	r12
    1180:	df 92       	push	r13
    1182:	ef 92       	push	r14
    1184:	ff 92       	push	r15
    1186:	0f 93       	push	r16
    1188:	1f 93       	push	r17
    118a:	cf 93       	push	r28
    118c:	df 93       	push	r29
    118e:	cd b7       	in	r28, 0x3d	; 61
    1190:	de b7       	in	r29, 0x3e	; 62
    1192:	2b 97       	sbiw	r28, 0x0b	; 11
    1194:	cd bf       	out	0x3d, r28	; 61
    1196:	de bf       	out	0x3e, r29	; 62
    1198:	6c 01       	movw	r12, r24
    119a:	7b 01       	movw	r14, r22
    119c:	8a 01       	movw	r16, r20
    119e:	fc 01       	movw	r30, r24
    11a0:	16 82       	std	Z+6, r1	; 0x06
    11a2:	17 82       	std	Z+7, r1	; 0x07
    11a4:	83 81       	ldd	r24, Z+3	; 0x03
    11a6:	81 ff       	sbrs	r24, 1
    11a8:	cc c1       	rjmp	.+920    	; 0x1542 <vfprintf+0x3d8>
    11aa:	ce 01       	movw	r24, r28
    11ac:	01 96       	adiw	r24, 0x01	; 1
    11ae:	3c 01       	movw	r6, r24
    11b0:	f6 01       	movw	r30, r12
    11b2:	93 81       	ldd	r25, Z+3	; 0x03
    11b4:	f7 01       	movw	r30, r14
    11b6:	93 fd       	sbrc	r25, 3
    11b8:	85 91       	lpm	r24, Z+
    11ba:	93 ff       	sbrs	r25, 3
    11bc:	81 91       	ld	r24, Z+
    11be:	7f 01       	movw	r14, r30
    11c0:	88 23       	and	r24, r24
    11c2:	09 f4       	brne	.+2      	; 0x11c6 <vfprintf+0x5c>
    11c4:	ba c1       	rjmp	.+884    	; 0x153a <vfprintf+0x3d0>
    11c6:	85 32       	cpi	r24, 0x25	; 37
    11c8:	39 f4       	brne	.+14     	; 0x11d8 <vfprintf+0x6e>
    11ca:	93 fd       	sbrc	r25, 3
    11cc:	85 91       	lpm	r24, Z+
    11ce:	93 ff       	sbrs	r25, 3
    11d0:	81 91       	ld	r24, Z+
    11d2:	7f 01       	movw	r14, r30
    11d4:	85 32       	cpi	r24, 0x25	; 37
    11d6:	29 f4       	brne	.+10     	; 0x11e2 <vfprintf+0x78>
    11d8:	b6 01       	movw	r22, r12
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    11e0:	e7 cf       	rjmp	.-50     	; 0x11b0 <vfprintf+0x46>
    11e2:	91 2c       	mov	r9, r1
    11e4:	21 2c       	mov	r2, r1
    11e6:	31 2c       	mov	r3, r1
    11e8:	ff e1       	ldi	r31, 0x1F	; 31
    11ea:	f3 15       	cp	r31, r3
    11ec:	d8 f0       	brcs	.+54     	; 0x1224 <vfprintf+0xba>
    11ee:	8b 32       	cpi	r24, 0x2B	; 43
    11f0:	79 f0       	breq	.+30     	; 0x1210 <vfprintf+0xa6>
    11f2:	38 f4       	brcc	.+14     	; 0x1202 <vfprintf+0x98>
    11f4:	80 32       	cpi	r24, 0x20	; 32
    11f6:	79 f0       	breq	.+30     	; 0x1216 <vfprintf+0xac>
    11f8:	83 32       	cpi	r24, 0x23	; 35
    11fa:	a1 f4       	brne	.+40     	; 0x1224 <vfprintf+0xba>
    11fc:	23 2d       	mov	r18, r3
    11fe:	20 61       	ori	r18, 0x10	; 16
    1200:	1d c0       	rjmp	.+58     	; 0x123c <vfprintf+0xd2>
    1202:	8d 32       	cpi	r24, 0x2D	; 45
    1204:	61 f0       	breq	.+24     	; 0x121e <vfprintf+0xb4>
    1206:	80 33       	cpi	r24, 0x30	; 48
    1208:	69 f4       	brne	.+26     	; 0x1224 <vfprintf+0xba>
    120a:	23 2d       	mov	r18, r3
    120c:	21 60       	ori	r18, 0x01	; 1
    120e:	16 c0       	rjmp	.+44     	; 0x123c <vfprintf+0xd2>
    1210:	83 2d       	mov	r24, r3
    1212:	82 60       	ori	r24, 0x02	; 2
    1214:	38 2e       	mov	r3, r24
    1216:	e3 2d       	mov	r30, r3
    1218:	e4 60       	ori	r30, 0x04	; 4
    121a:	3e 2e       	mov	r3, r30
    121c:	2a c0       	rjmp	.+84     	; 0x1272 <vfprintf+0x108>
    121e:	f3 2d       	mov	r31, r3
    1220:	f8 60       	ori	r31, 0x08	; 8
    1222:	1d c0       	rjmp	.+58     	; 0x125e <vfprintf+0xf4>
    1224:	37 fc       	sbrc	r3, 7
    1226:	2d c0       	rjmp	.+90     	; 0x1282 <vfprintf+0x118>
    1228:	20 ed       	ldi	r18, 0xD0	; 208
    122a:	28 0f       	add	r18, r24
    122c:	2a 30       	cpi	r18, 0x0A	; 10
    122e:	40 f0       	brcs	.+16     	; 0x1240 <vfprintf+0xd6>
    1230:	8e 32       	cpi	r24, 0x2E	; 46
    1232:	b9 f4       	brne	.+46     	; 0x1262 <vfprintf+0xf8>
    1234:	36 fc       	sbrc	r3, 6
    1236:	81 c1       	rjmp	.+770    	; 0x153a <vfprintf+0x3d0>
    1238:	23 2d       	mov	r18, r3
    123a:	20 64       	ori	r18, 0x40	; 64
    123c:	32 2e       	mov	r3, r18
    123e:	19 c0       	rjmp	.+50     	; 0x1272 <vfprintf+0x108>
    1240:	36 fe       	sbrs	r3, 6
    1242:	06 c0       	rjmp	.+12     	; 0x1250 <vfprintf+0xe6>
    1244:	8a e0       	ldi	r24, 0x0A	; 10
    1246:	98 9e       	mul	r9, r24
    1248:	20 0d       	add	r18, r0
    124a:	11 24       	eor	r1, r1
    124c:	92 2e       	mov	r9, r18
    124e:	11 c0       	rjmp	.+34     	; 0x1272 <vfprintf+0x108>
    1250:	ea e0       	ldi	r30, 0x0A	; 10
    1252:	2e 9e       	mul	r2, r30
    1254:	20 0d       	add	r18, r0
    1256:	11 24       	eor	r1, r1
    1258:	22 2e       	mov	r2, r18
    125a:	f3 2d       	mov	r31, r3
    125c:	f0 62       	ori	r31, 0x20	; 32
    125e:	3f 2e       	mov	r3, r31
    1260:	08 c0       	rjmp	.+16     	; 0x1272 <vfprintf+0x108>
    1262:	8c 36       	cpi	r24, 0x6C	; 108
    1264:	21 f4       	brne	.+8      	; 0x126e <vfprintf+0x104>
    1266:	83 2d       	mov	r24, r3
    1268:	80 68       	ori	r24, 0x80	; 128
    126a:	38 2e       	mov	r3, r24
    126c:	02 c0       	rjmp	.+4      	; 0x1272 <vfprintf+0x108>
    126e:	88 36       	cpi	r24, 0x68	; 104
    1270:	41 f4       	brne	.+16     	; 0x1282 <vfprintf+0x118>
    1272:	f7 01       	movw	r30, r14
    1274:	93 fd       	sbrc	r25, 3
    1276:	85 91       	lpm	r24, Z+
    1278:	93 ff       	sbrs	r25, 3
    127a:	81 91       	ld	r24, Z+
    127c:	7f 01       	movw	r14, r30
    127e:	81 11       	cpse	r24, r1
    1280:	b3 cf       	rjmp	.-154    	; 0x11e8 <vfprintf+0x7e>
    1282:	98 2f       	mov	r25, r24
    1284:	9f 7d       	andi	r25, 0xDF	; 223
    1286:	95 54       	subi	r25, 0x45	; 69
    1288:	93 30       	cpi	r25, 0x03	; 3
    128a:	28 f4       	brcc	.+10     	; 0x1296 <vfprintf+0x12c>
    128c:	0c 5f       	subi	r16, 0xFC	; 252
    128e:	1f 4f       	sbci	r17, 0xFF	; 255
    1290:	9f e3       	ldi	r25, 0x3F	; 63
    1292:	99 83       	std	Y+1, r25	; 0x01
    1294:	0d c0       	rjmp	.+26     	; 0x12b0 <vfprintf+0x146>
    1296:	83 36       	cpi	r24, 0x63	; 99
    1298:	31 f0       	breq	.+12     	; 0x12a6 <vfprintf+0x13c>
    129a:	83 37       	cpi	r24, 0x73	; 115
    129c:	71 f0       	breq	.+28     	; 0x12ba <vfprintf+0x150>
    129e:	83 35       	cpi	r24, 0x53	; 83
    12a0:	09 f0       	breq	.+2      	; 0x12a4 <vfprintf+0x13a>
    12a2:	59 c0       	rjmp	.+178    	; 0x1356 <vfprintf+0x1ec>
    12a4:	21 c0       	rjmp	.+66     	; 0x12e8 <vfprintf+0x17e>
    12a6:	f8 01       	movw	r30, r16
    12a8:	80 81       	ld	r24, Z
    12aa:	89 83       	std	Y+1, r24	; 0x01
    12ac:	0e 5f       	subi	r16, 0xFE	; 254
    12ae:	1f 4f       	sbci	r17, 0xFF	; 255
    12b0:	88 24       	eor	r8, r8
    12b2:	83 94       	inc	r8
    12b4:	91 2c       	mov	r9, r1
    12b6:	53 01       	movw	r10, r6
    12b8:	13 c0       	rjmp	.+38     	; 0x12e0 <vfprintf+0x176>
    12ba:	28 01       	movw	r4, r16
    12bc:	f2 e0       	ldi	r31, 0x02	; 2
    12be:	4f 0e       	add	r4, r31
    12c0:	51 1c       	adc	r5, r1
    12c2:	f8 01       	movw	r30, r16
    12c4:	a0 80       	ld	r10, Z
    12c6:	b1 80       	ldd	r11, Z+1	; 0x01
    12c8:	36 fe       	sbrs	r3, 6
    12ca:	03 c0       	rjmp	.+6      	; 0x12d2 <vfprintf+0x168>
    12cc:	69 2d       	mov	r22, r9
    12ce:	70 e0       	ldi	r23, 0x00	; 0
    12d0:	02 c0       	rjmp	.+4      	; 0x12d6 <vfprintf+0x16c>
    12d2:	6f ef       	ldi	r22, 0xFF	; 255
    12d4:	7f ef       	ldi	r23, 0xFF	; 255
    12d6:	c5 01       	movw	r24, r10
    12d8:	0e 94 0d 0d 	call	0x1a1a	; 0x1a1a <strnlen>
    12dc:	4c 01       	movw	r8, r24
    12de:	82 01       	movw	r16, r4
    12e0:	f3 2d       	mov	r31, r3
    12e2:	ff 77       	andi	r31, 0x7F	; 127
    12e4:	3f 2e       	mov	r3, r31
    12e6:	16 c0       	rjmp	.+44     	; 0x1314 <vfprintf+0x1aa>
    12e8:	28 01       	movw	r4, r16
    12ea:	22 e0       	ldi	r18, 0x02	; 2
    12ec:	42 0e       	add	r4, r18
    12ee:	51 1c       	adc	r5, r1
    12f0:	f8 01       	movw	r30, r16
    12f2:	a0 80       	ld	r10, Z
    12f4:	b1 80       	ldd	r11, Z+1	; 0x01
    12f6:	36 fe       	sbrs	r3, 6
    12f8:	03 c0       	rjmp	.+6      	; 0x1300 <vfprintf+0x196>
    12fa:	69 2d       	mov	r22, r9
    12fc:	70 e0       	ldi	r23, 0x00	; 0
    12fe:	02 c0       	rjmp	.+4      	; 0x1304 <vfprintf+0x19a>
    1300:	6f ef       	ldi	r22, 0xFF	; 255
    1302:	7f ef       	ldi	r23, 0xFF	; 255
    1304:	c5 01       	movw	r24, r10
    1306:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <strnlen_P>
    130a:	4c 01       	movw	r8, r24
    130c:	f3 2d       	mov	r31, r3
    130e:	f0 68       	ori	r31, 0x80	; 128
    1310:	3f 2e       	mov	r3, r31
    1312:	82 01       	movw	r16, r4
    1314:	33 fc       	sbrc	r3, 3
    1316:	1b c0       	rjmp	.+54     	; 0x134e <vfprintf+0x1e4>
    1318:	82 2d       	mov	r24, r2
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	88 16       	cp	r8, r24
    131e:	99 06       	cpc	r9, r25
    1320:	b0 f4       	brcc	.+44     	; 0x134e <vfprintf+0x1e4>
    1322:	b6 01       	movw	r22, r12
    1324:	80 e2       	ldi	r24, 0x20	; 32
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    132c:	2a 94       	dec	r2
    132e:	f4 cf       	rjmp	.-24     	; 0x1318 <vfprintf+0x1ae>
    1330:	f5 01       	movw	r30, r10
    1332:	37 fc       	sbrc	r3, 7
    1334:	85 91       	lpm	r24, Z+
    1336:	37 fe       	sbrs	r3, 7
    1338:	81 91       	ld	r24, Z+
    133a:	5f 01       	movw	r10, r30
    133c:	b6 01       	movw	r22, r12
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    1344:	21 10       	cpse	r2, r1
    1346:	2a 94       	dec	r2
    1348:	21 e0       	ldi	r18, 0x01	; 1
    134a:	82 1a       	sub	r8, r18
    134c:	91 08       	sbc	r9, r1
    134e:	81 14       	cp	r8, r1
    1350:	91 04       	cpc	r9, r1
    1352:	71 f7       	brne	.-36     	; 0x1330 <vfprintf+0x1c6>
    1354:	e8 c0       	rjmp	.+464    	; 0x1526 <vfprintf+0x3bc>
    1356:	84 36       	cpi	r24, 0x64	; 100
    1358:	11 f0       	breq	.+4      	; 0x135e <vfprintf+0x1f4>
    135a:	89 36       	cpi	r24, 0x69	; 105
    135c:	41 f5       	brne	.+80     	; 0x13ae <vfprintf+0x244>
    135e:	f8 01       	movw	r30, r16
    1360:	37 fe       	sbrs	r3, 7
    1362:	07 c0       	rjmp	.+14     	; 0x1372 <vfprintf+0x208>
    1364:	60 81       	ld	r22, Z
    1366:	71 81       	ldd	r23, Z+1	; 0x01
    1368:	82 81       	ldd	r24, Z+2	; 0x02
    136a:	93 81       	ldd	r25, Z+3	; 0x03
    136c:	0c 5f       	subi	r16, 0xFC	; 252
    136e:	1f 4f       	sbci	r17, 0xFF	; 255
    1370:	08 c0       	rjmp	.+16     	; 0x1382 <vfprintf+0x218>
    1372:	60 81       	ld	r22, Z
    1374:	71 81       	ldd	r23, Z+1	; 0x01
    1376:	07 2e       	mov	r0, r23
    1378:	00 0c       	add	r0, r0
    137a:	88 0b       	sbc	r24, r24
    137c:	99 0b       	sbc	r25, r25
    137e:	0e 5f       	subi	r16, 0xFE	; 254
    1380:	1f 4f       	sbci	r17, 0xFF	; 255
    1382:	f3 2d       	mov	r31, r3
    1384:	ff 76       	andi	r31, 0x6F	; 111
    1386:	3f 2e       	mov	r3, r31
    1388:	97 ff       	sbrs	r25, 7
    138a:	09 c0       	rjmp	.+18     	; 0x139e <vfprintf+0x234>
    138c:	90 95       	com	r25
    138e:	80 95       	com	r24
    1390:	70 95       	com	r23
    1392:	61 95       	neg	r22
    1394:	7f 4f       	sbci	r23, 0xFF	; 255
    1396:	8f 4f       	sbci	r24, 0xFF	; 255
    1398:	9f 4f       	sbci	r25, 0xFF	; 255
    139a:	f0 68       	ori	r31, 0x80	; 128
    139c:	3f 2e       	mov	r3, r31
    139e:	2a e0       	ldi	r18, 0x0A	; 10
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	a3 01       	movw	r20, r6
    13a4:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__ultoa_invert>
    13a8:	88 2e       	mov	r8, r24
    13aa:	86 18       	sub	r8, r6
    13ac:	45 c0       	rjmp	.+138    	; 0x1438 <vfprintf+0x2ce>
    13ae:	85 37       	cpi	r24, 0x75	; 117
    13b0:	31 f4       	brne	.+12     	; 0x13be <vfprintf+0x254>
    13b2:	23 2d       	mov	r18, r3
    13b4:	2f 7e       	andi	r18, 0xEF	; 239
    13b6:	b2 2e       	mov	r11, r18
    13b8:	2a e0       	ldi	r18, 0x0A	; 10
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	25 c0       	rjmp	.+74     	; 0x1408 <vfprintf+0x29e>
    13be:	93 2d       	mov	r25, r3
    13c0:	99 7f       	andi	r25, 0xF9	; 249
    13c2:	b9 2e       	mov	r11, r25
    13c4:	8f 36       	cpi	r24, 0x6F	; 111
    13c6:	c1 f0       	breq	.+48     	; 0x13f8 <vfprintf+0x28e>
    13c8:	18 f4       	brcc	.+6      	; 0x13d0 <vfprintf+0x266>
    13ca:	88 35       	cpi	r24, 0x58	; 88
    13cc:	79 f0       	breq	.+30     	; 0x13ec <vfprintf+0x282>
    13ce:	b5 c0       	rjmp	.+362    	; 0x153a <vfprintf+0x3d0>
    13d0:	80 37       	cpi	r24, 0x70	; 112
    13d2:	19 f0       	breq	.+6      	; 0x13da <vfprintf+0x270>
    13d4:	88 37       	cpi	r24, 0x78	; 120
    13d6:	21 f0       	breq	.+8      	; 0x13e0 <vfprintf+0x276>
    13d8:	b0 c0       	rjmp	.+352    	; 0x153a <vfprintf+0x3d0>
    13da:	e9 2f       	mov	r30, r25
    13dc:	e0 61       	ori	r30, 0x10	; 16
    13de:	be 2e       	mov	r11, r30
    13e0:	b4 fe       	sbrs	r11, 4
    13e2:	0d c0       	rjmp	.+26     	; 0x13fe <vfprintf+0x294>
    13e4:	fb 2d       	mov	r31, r11
    13e6:	f4 60       	ori	r31, 0x04	; 4
    13e8:	bf 2e       	mov	r11, r31
    13ea:	09 c0       	rjmp	.+18     	; 0x13fe <vfprintf+0x294>
    13ec:	34 fe       	sbrs	r3, 4
    13ee:	0a c0       	rjmp	.+20     	; 0x1404 <vfprintf+0x29a>
    13f0:	29 2f       	mov	r18, r25
    13f2:	26 60       	ori	r18, 0x06	; 6
    13f4:	b2 2e       	mov	r11, r18
    13f6:	06 c0       	rjmp	.+12     	; 0x1404 <vfprintf+0x29a>
    13f8:	28 e0       	ldi	r18, 0x08	; 8
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	05 c0       	rjmp	.+10     	; 0x1408 <vfprintf+0x29e>
    13fe:	20 e1       	ldi	r18, 0x10	; 16
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	02 c0       	rjmp	.+4      	; 0x1408 <vfprintf+0x29e>
    1404:	20 e1       	ldi	r18, 0x10	; 16
    1406:	32 e0       	ldi	r19, 0x02	; 2
    1408:	f8 01       	movw	r30, r16
    140a:	b7 fe       	sbrs	r11, 7
    140c:	07 c0       	rjmp	.+14     	; 0x141c <vfprintf+0x2b2>
    140e:	60 81       	ld	r22, Z
    1410:	71 81       	ldd	r23, Z+1	; 0x01
    1412:	82 81       	ldd	r24, Z+2	; 0x02
    1414:	93 81       	ldd	r25, Z+3	; 0x03
    1416:	0c 5f       	subi	r16, 0xFC	; 252
    1418:	1f 4f       	sbci	r17, 0xFF	; 255
    141a:	06 c0       	rjmp	.+12     	; 0x1428 <vfprintf+0x2be>
    141c:	60 81       	ld	r22, Z
    141e:	71 81       	ldd	r23, Z+1	; 0x01
    1420:	80 e0       	ldi	r24, 0x00	; 0
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	0e 5f       	subi	r16, 0xFE	; 254
    1426:	1f 4f       	sbci	r17, 0xFF	; 255
    1428:	a3 01       	movw	r20, r6
    142a:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__ultoa_invert>
    142e:	88 2e       	mov	r8, r24
    1430:	86 18       	sub	r8, r6
    1432:	fb 2d       	mov	r31, r11
    1434:	ff 77       	andi	r31, 0x7F	; 127
    1436:	3f 2e       	mov	r3, r31
    1438:	36 fe       	sbrs	r3, 6
    143a:	0d c0       	rjmp	.+26     	; 0x1456 <vfprintf+0x2ec>
    143c:	23 2d       	mov	r18, r3
    143e:	2e 7f       	andi	r18, 0xFE	; 254
    1440:	a2 2e       	mov	r10, r18
    1442:	89 14       	cp	r8, r9
    1444:	58 f4       	brcc	.+22     	; 0x145c <vfprintf+0x2f2>
    1446:	34 fe       	sbrs	r3, 4
    1448:	0b c0       	rjmp	.+22     	; 0x1460 <vfprintf+0x2f6>
    144a:	32 fc       	sbrc	r3, 2
    144c:	09 c0       	rjmp	.+18     	; 0x1460 <vfprintf+0x2f6>
    144e:	83 2d       	mov	r24, r3
    1450:	8e 7e       	andi	r24, 0xEE	; 238
    1452:	a8 2e       	mov	r10, r24
    1454:	05 c0       	rjmp	.+10     	; 0x1460 <vfprintf+0x2f6>
    1456:	b8 2c       	mov	r11, r8
    1458:	a3 2c       	mov	r10, r3
    145a:	03 c0       	rjmp	.+6      	; 0x1462 <vfprintf+0x2f8>
    145c:	b8 2c       	mov	r11, r8
    145e:	01 c0       	rjmp	.+2      	; 0x1462 <vfprintf+0x2f8>
    1460:	b9 2c       	mov	r11, r9
    1462:	a4 fe       	sbrs	r10, 4
    1464:	0f c0       	rjmp	.+30     	; 0x1484 <vfprintf+0x31a>
    1466:	fe 01       	movw	r30, r28
    1468:	e8 0d       	add	r30, r8
    146a:	f1 1d       	adc	r31, r1
    146c:	80 81       	ld	r24, Z
    146e:	80 33       	cpi	r24, 0x30	; 48
    1470:	21 f4       	brne	.+8      	; 0x147a <vfprintf+0x310>
    1472:	9a 2d       	mov	r25, r10
    1474:	99 7e       	andi	r25, 0xE9	; 233
    1476:	a9 2e       	mov	r10, r25
    1478:	09 c0       	rjmp	.+18     	; 0x148c <vfprintf+0x322>
    147a:	a2 fe       	sbrs	r10, 2
    147c:	06 c0       	rjmp	.+12     	; 0x148a <vfprintf+0x320>
    147e:	b3 94       	inc	r11
    1480:	b3 94       	inc	r11
    1482:	04 c0       	rjmp	.+8      	; 0x148c <vfprintf+0x322>
    1484:	8a 2d       	mov	r24, r10
    1486:	86 78       	andi	r24, 0x86	; 134
    1488:	09 f0       	breq	.+2      	; 0x148c <vfprintf+0x322>
    148a:	b3 94       	inc	r11
    148c:	a3 fc       	sbrc	r10, 3
    148e:	11 c0       	rjmp	.+34     	; 0x14b2 <vfprintf+0x348>
    1490:	a0 fe       	sbrs	r10, 0
    1492:	06 c0       	rjmp	.+12     	; 0x14a0 <vfprintf+0x336>
    1494:	b2 14       	cp	r11, r2
    1496:	88 f4       	brcc	.+34     	; 0x14ba <vfprintf+0x350>
    1498:	28 0c       	add	r2, r8
    149a:	92 2c       	mov	r9, r2
    149c:	9b 18       	sub	r9, r11
    149e:	0e c0       	rjmp	.+28     	; 0x14bc <vfprintf+0x352>
    14a0:	b2 14       	cp	r11, r2
    14a2:	60 f4       	brcc	.+24     	; 0x14bc <vfprintf+0x352>
    14a4:	b6 01       	movw	r22, r12
    14a6:	80 e2       	ldi	r24, 0x20	; 32
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    14ae:	b3 94       	inc	r11
    14b0:	f7 cf       	rjmp	.-18     	; 0x14a0 <vfprintf+0x336>
    14b2:	b2 14       	cp	r11, r2
    14b4:	18 f4       	brcc	.+6      	; 0x14bc <vfprintf+0x352>
    14b6:	2b 18       	sub	r2, r11
    14b8:	02 c0       	rjmp	.+4      	; 0x14be <vfprintf+0x354>
    14ba:	98 2c       	mov	r9, r8
    14bc:	21 2c       	mov	r2, r1
    14be:	a4 fe       	sbrs	r10, 4
    14c0:	10 c0       	rjmp	.+32     	; 0x14e2 <vfprintf+0x378>
    14c2:	b6 01       	movw	r22, r12
    14c4:	80 e3       	ldi	r24, 0x30	; 48
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    14cc:	a2 fe       	sbrs	r10, 2
    14ce:	17 c0       	rjmp	.+46     	; 0x14fe <vfprintf+0x394>
    14d0:	a1 fc       	sbrc	r10, 1
    14d2:	03 c0       	rjmp	.+6      	; 0x14da <vfprintf+0x370>
    14d4:	88 e7       	ldi	r24, 0x78	; 120
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	02 c0       	rjmp	.+4      	; 0x14de <vfprintf+0x374>
    14da:	88 e5       	ldi	r24, 0x58	; 88
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	b6 01       	movw	r22, r12
    14e0:	0c c0       	rjmp	.+24     	; 0x14fa <vfprintf+0x390>
    14e2:	8a 2d       	mov	r24, r10
    14e4:	86 78       	andi	r24, 0x86	; 134
    14e6:	59 f0       	breq	.+22     	; 0x14fe <vfprintf+0x394>
    14e8:	a1 fe       	sbrs	r10, 1
    14ea:	02 c0       	rjmp	.+4      	; 0x14f0 <vfprintf+0x386>
    14ec:	8b e2       	ldi	r24, 0x2B	; 43
    14ee:	01 c0       	rjmp	.+2      	; 0x14f2 <vfprintf+0x388>
    14f0:	80 e2       	ldi	r24, 0x20	; 32
    14f2:	a7 fc       	sbrc	r10, 7
    14f4:	8d e2       	ldi	r24, 0x2D	; 45
    14f6:	b6 01       	movw	r22, r12
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    14fe:	89 14       	cp	r8, r9
    1500:	38 f4       	brcc	.+14     	; 0x1510 <vfprintf+0x3a6>
    1502:	b6 01       	movw	r22, r12
    1504:	80 e3       	ldi	r24, 0x30	; 48
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    150c:	9a 94       	dec	r9
    150e:	f7 cf       	rjmp	.-18     	; 0x14fe <vfprintf+0x394>
    1510:	8a 94       	dec	r8
    1512:	f3 01       	movw	r30, r6
    1514:	e8 0d       	add	r30, r8
    1516:	f1 1d       	adc	r31, r1
    1518:	80 81       	ld	r24, Z
    151a:	b6 01       	movw	r22, r12
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    1522:	81 10       	cpse	r8, r1
    1524:	f5 cf       	rjmp	.-22     	; 0x1510 <vfprintf+0x3a6>
    1526:	22 20       	and	r2, r2
    1528:	09 f4       	brne	.+2      	; 0x152c <vfprintf+0x3c2>
    152a:	42 ce       	rjmp	.-892    	; 0x11b0 <vfprintf+0x46>
    152c:	b6 01       	movw	r22, r12
    152e:	80 e2       	ldi	r24, 0x20	; 32
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <fputc>
    1536:	2a 94       	dec	r2
    1538:	f6 cf       	rjmp	.-20     	; 0x1526 <vfprintf+0x3bc>
    153a:	f6 01       	movw	r30, r12
    153c:	86 81       	ldd	r24, Z+6	; 0x06
    153e:	97 81       	ldd	r25, Z+7	; 0x07
    1540:	02 c0       	rjmp	.+4      	; 0x1546 <vfprintf+0x3dc>
    1542:	8f ef       	ldi	r24, 0xFF	; 255
    1544:	9f ef       	ldi	r25, 0xFF	; 255
    1546:	2b 96       	adiw	r28, 0x0b	; 11
    1548:	cd bf       	out	0x3d, r28	; 61
    154a:	de bf       	out	0x3e, r29	; 62
    154c:	df 91       	pop	r29
    154e:	cf 91       	pop	r28
    1550:	1f 91       	pop	r17
    1552:	0f 91       	pop	r16
    1554:	ff 90       	pop	r15
    1556:	ef 90       	pop	r14
    1558:	df 90       	pop	r13
    155a:	cf 90       	pop	r12
    155c:	bf 90       	pop	r11
    155e:	af 90       	pop	r10
    1560:	9f 90       	pop	r9
    1562:	8f 90       	pop	r8
    1564:	7f 90       	pop	r7
    1566:	6f 90       	pop	r6
    1568:	5f 90       	pop	r5
    156a:	4f 90       	pop	r4
    156c:	3f 90       	pop	r3
    156e:	2f 90       	pop	r2
    1570:	08 95       	ret

00001572 <dtoa_prf>:
    1572:	8f 92       	push	r8
    1574:	9f 92       	push	r9
    1576:	af 92       	push	r10
    1578:	bf 92       	push	r11
    157a:	cf 92       	push	r12
    157c:	df 92       	push	r13
    157e:	ef 92       	push	r14
    1580:	ff 92       	push	r15
    1582:	0f 93       	push	r16
    1584:	1f 93       	push	r17
    1586:	cf 93       	push	r28
    1588:	df 93       	push	r29
    158a:	cd b7       	in	r28, 0x3d	; 61
    158c:	de b7       	in	r29, 0x3e	; 62
    158e:	29 97       	sbiw	r28, 0x09	; 9
    1590:	cd bf       	out	0x3d, r28	; 61
    1592:	de bf       	out	0x3e, r29	; 62
    1594:	6a 01       	movw	r12, r20
    1596:	12 2f       	mov	r17, r18
    1598:	b0 2e       	mov	r11, r16
    159a:	2b e3       	ldi	r18, 0x3B	; 59
    159c:	20 17       	cp	r18, r16
    159e:	20 f0       	brcs	.+8      	; 0x15a8 <dtoa_prf+0x36>
    15a0:	ff 24       	eor	r15, r15
    15a2:	f3 94       	inc	r15
    15a4:	f0 0e       	add	r15, r16
    15a6:	02 c0       	rjmp	.+4      	; 0x15ac <dtoa_prf+0x3a>
    15a8:	2c e3       	ldi	r18, 0x3C	; 60
    15aa:	f2 2e       	mov	r15, r18
    15ac:	0f 2d       	mov	r16, r15
    15ae:	27 e0       	ldi	r18, 0x07	; 7
    15b0:	ae 01       	movw	r20, r28
    15b2:	4f 5f       	subi	r20, 0xFF	; 255
    15b4:	5f 4f       	sbci	r21, 0xFF	; 255
    15b6:	0e 94 2a 0c 	call	0x1854	; 0x1854 <__ftoa_engine>
    15ba:	bc 01       	movw	r22, r24
    15bc:	49 81       	ldd	r20, Y+1	; 0x01
    15be:	84 2f       	mov	r24, r20
    15c0:	89 70       	andi	r24, 0x09	; 9
    15c2:	81 30       	cpi	r24, 0x01	; 1
    15c4:	31 f0       	breq	.+12     	; 0x15d2 <dtoa_prf+0x60>
    15c6:	e1 fc       	sbrc	r14, 1
    15c8:	06 c0       	rjmp	.+12     	; 0x15d6 <dtoa_prf+0x64>
    15ca:	e0 fe       	sbrs	r14, 0
    15cc:	06 c0       	rjmp	.+12     	; 0x15da <dtoa_prf+0x68>
    15ce:	90 e2       	ldi	r25, 0x20	; 32
    15d0:	05 c0       	rjmp	.+10     	; 0x15dc <dtoa_prf+0x6a>
    15d2:	9d e2       	ldi	r25, 0x2D	; 45
    15d4:	03 c0       	rjmp	.+6      	; 0x15dc <dtoa_prf+0x6a>
    15d6:	9b e2       	ldi	r25, 0x2B	; 43
    15d8:	01 c0       	rjmp	.+2      	; 0x15dc <dtoa_prf+0x6a>
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	5e 2d       	mov	r21, r14
    15de:	50 71       	andi	r21, 0x10	; 16
    15e0:	43 ff       	sbrs	r20, 3
    15e2:	3c c0       	rjmp	.+120    	; 0x165c <dtoa_prf+0xea>
    15e4:	91 11       	cpse	r25, r1
    15e6:	02 c0       	rjmp	.+4      	; 0x15ec <dtoa_prf+0x7a>
    15e8:	83 e0       	ldi	r24, 0x03	; 3
    15ea:	01 c0       	rjmp	.+2      	; 0x15ee <dtoa_prf+0x7c>
    15ec:	84 e0       	ldi	r24, 0x04	; 4
    15ee:	81 17       	cp	r24, r17
    15f0:	18 f4       	brcc	.+6      	; 0x15f8 <dtoa_prf+0x86>
    15f2:	21 2f       	mov	r18, r17
    15f4:	28 1b       	sub	r18, r24
    15f6:	01 c0       	rjmp	.+2      	; 0x15fa <dtoa_prf+0x88>
    15f8:	20 e0       	ldi	r18, 0x00	; 0
    15fa:	51 11       	cpse	r21, r1
    15fc:	0b c0       	rjmp	.+22     	; 0x1614 <dtoa_prf+0xa2>
    15fe:	f6 01       	movw	r30, r12
    1600:	82 2f       	mov	r24, r18
    1602:	30 e2       	ldi	r19, 0x20	; 32
    1604:	88 23       	and	r24, r24
    1606:	19 f0       	breq	.+6      	; 0x160e <dtoa_prf+0x9c>
    1608:	31 93       	st	Z+, r19
    160a:	81 50       	subi	r24, 0x01	; 1
    160c:	fb cf       	rjmp	.-10     	; 0x1604 <dtoa_prf+0x92>
    160e:	c2 0e       	add	r12, r18
    1610:	d1 1c       	adc	r13, r1
    1612:	20 e0       	ldi	r18, 0x00	; 0
    1614:	99 23       	and	r25, r25
    1616:	29 f0       	breq	.+10     	; 0x1622 <dtoa_prf+0xb0>
    1618:	d6 01       	movw	r26, r12
    161a:	9c 93       	st	X, r25
    161c:	f6 01       	movw	r30, r12
    161e:	31 96       	adiw	r30, 0x01	; 1
    1620:	6f 01       	movw	r12, r30
    1622:	c6 01       	movw	r24, r12
    1624:	03 96       	adiw	r24, 0x03	; 3
    1626:	e2 fe       	sbrs	r14, 2
    1628:	0a c0       	rjmp	.+20     	; 0x163e <dtoa_prf+0xcc>
    162a:	3e e4       	ldi	r19, 0x4E	; 78
    162c:	d6 01       	movw	r26, r12
    162e:	3c 93       	st	X, r19
    1630:	41 e4       	ldi	r20, 0x41	; 65
    1632:	11 96       	adiw	r26, 0x01	; 1
    1634:	4c 93       	st	X, r20
    1636:	11 97       	sbiw	r26, 0x01	; 1
    1638:	12 96       	adiw	r26, 0x02	; 2
    163a:	3c 93       	st	X, r19
    163c:	06 c0       	rjmp	.+12     	; 0x164a <dtoa_prf+0xd8>
    163e:	3e e6       	ldi	r19, 0x6E	; 110
    1640:	f6 01       	movw	r30, r12
    1642:	30 83       	st	Z, r19
    1644:	41 e6       	ldi	r20, 0x61	; 97
    1646:	41 83       	std	Z+1, r20	; 0x01
    1648:	32 83       	std	Z+2, r19	; 0x02
    164a:	fc 01       	movw	r30, r24
    164c:	32 2f       	mov	r19, r18
    164e:	40 e2       	ldi	r20, 0x20	; 32
    1650:	33 23       	and	r19, r19
    1652:	09 f4       	brne	.+2      	; 0x1656 <dtoa_prf+0xe4>
    1654:	42 c0       	rjmp	.+132    	; 0x16da <dtoa_prf+0x168>
    1656:	41 93       	st	Z+, r20
    1658:	31 50       	subi	r19, 0x01	; 1
    165a:	fa cf       	rjmp	.-12     	; 0x1650 <dtoa_prf+0xde>
    165c:	42 ff       	sbrs	r20, 2
    165e:	44 c0       	rjmp	.+136    	; 0x16e8 <dtoa_prf+0x176>
    1660:	91 11       	cpse	r25, r1
    1662:	02 c0       	rjmp	.+4      	; 0x1668 <dtoa_prf+0xf6>
    1664:	83 e0       	ldi	r24, 0x03	; 3
    1666:	01 c0       	rjmp	.+2      	; 0x166a <dtoa_prf+0xf8>
    1668:	84 e0       	ldi	r24, 0x04	; 4
    166a:	81 17       	cp	r24, r17
    166c:	18 f4       	brcc	.+6      	; 0x1674 <dtoa_prf+0x102>
    166e:	21 2f       	mov	r18, r17
    1670:	28 1b       	sub	r18, r24
    1672:	01 c0       	rjmp	.+2      	; 0x1676 <dtoa_prf+0x104>
    1674:	20 e0       	ldi	r18, 0x00	; 0
    1676:	51 11       	cpse	r21, r1
    1678:	0b c0       	rjmp	.+22     	; 0x1690 <dtoa_prf+0x11e>
    167a:	f6 01       	movw	r30, r12
    167c:	82 2f       	mov	r24, r18
    167e:	30 e2       	ldi	r19, 0x20	; 32
    1680:	88 23       	and	r24, r24
    1682:	19 f0       	breq	.+6      	; 0x168a <dtoa_prf+0x118>
    1684:	31 93       	st	Z+, r19
    1686:	81 50       	subi	r24, 0x01	; 1
    1688:	fb cf       	rjmp	.-10     	; 0x1680 <dtoa_prf+0x10e>
    168a:	c2 0e       	add	r12, r18
    168c:	d1 1c       	adc	r13, r1
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	99 23       	and	r25, r25
    1692:	29 f0       	breq	.+10     	; 0x169e <dtoa_prf+0x12c>
    1694:	d6 01       	movw	r26, r12
    1696:	9c 93       	st	X, r25
    1698:	f6 01       	movw	r30, r12
    169a:	31 96       	adiw	r30, 0x01	; 1
    169c:	6f 01       	movw	r12, r30
    169e:	c6 01       	movw	r24, r12
    16a0:	03 96       	adiw	r24, 0x03	; 3
    16a2:	e2 fe       	sbrs	r14, 2
    16a4:	0b c0       	rjmp	.+22     	; 0x16bc <dtoa_prf+0x14a>
    16a6:	39 e4       	ldi	r19, 0x49	; 73
    16a8:	d6 01       	movw	r26, r12
    16aa:	3c 93       	st	X, r19
    16ac:	3e e4       	ldi	r19, 0x4E	; 78
    16ae:	11 96       	adiw	r26, 0x01	; 1
    16b0:	3c 93       	st	X, r19
    16b2:	11 97       	sbiw	r26, 0x01	; 1
    16b4:	36 e4       	ldi	r19, 0x46	; 70
    16b6:	12 96       	adiw	r26, 0x02	; 2
    16b8:	3c 93       	st	X, r19
    16ba:	07 c0       	rjmp	.+14     	; 0x16ca <dtoa_prf+0x158>
    16bc:	39 e6       	ldi	r19, 0x69	; 105
    16be:	f6 01       	movw	r30, r12
    16c0:	30 83       	st	Z, r19
    16c2:	3e e6       	ldi	r19, 0x6E	; 110
    16c4:	31 83       	std	Z+1, r19	; 0x01
    16c6:	36 e6       	ldi	r19, 0x66	; 102
    16c8:	32 83       	std	Z+2, r19	; 0x02
    16ca:	fc 01       	movw	r30, r24
    16cc:	32 2f       	mov	r19, r18
    16ce:	40 e2       	ldi	r20, 0x20	; 32
    16d0:	33 23       	and	r19, r19
    16d2:	19 f0       	breq	.+6      	; 0x16da <dtoa_prf+0x168>
    16d4:	41 93       	st	Z+, r20
    16d6:	31 50       	subi	r19, 0x01	; 1
    16d8:	fb cf       	rjmp	.-10     	; 0x16d0 <dtoa_prf+0x15e>
    16da:	fc 01       	movw	r30, r24
    16dc:	e2 0f       	add	r30, r18
    16de:	f1 1d       	adc	r31, r1
    16e0:	10 82       	st	Z, r1
    16e2:	8e ef       	ldi	r24, 0xFE	; 254
    16e4:	9f ef       	ldi	r25, 0xFF	; 255
    16e6:	a6 c0       	rjmp	.+332    	; 0x1834 <dtoa_prf+0x2c2>
    16e8:	21 e0       	ldi	r18, 0x01	; 1
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	91 11       	cpse	r25, r1
    16ee:	02 c0       	rjmp	.+4      	; 0x16f4 <dtoa_prf+0x182>
    16f0:	20 e0       	ldi	r18, 0x00	; 0
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	16 16       	cp	r1, r22
    16f6:	17 06       	cpc	r1, r23
    16f8:	1c f4       	brge	.+6      	; 0x1700 <dtoa_prf+0x18e>
    16fa:	fb 01       	movw	r30, r22
    16fc:	31 96       	adiw	r30, 0x01	; 1
    16fe:	02 c0       	rjmp	.+4      	; 0x1704 <dtoa_prf+0x192>
    1700:	e1 e0       	ldi	r30, 0x01	; 1
    1702:	f0 e0       	ldi	r31, 0x00	; 0
    1704:	2e 0f       	add	r18, r30
    1706:	3f 1f       	adc	r19, r31
    1708:	bb 20       	and	r11, r11
    170a:	21 f0       	breq	.+8      	; 0x1714 <dtoa_prf+0x1a2>
    170c:	eb 2d       	mov	r30, r11
    170e:	f0 e0       	ldi	r31, 0x00	; 0
    1710:	31 96       	adiw	r30, 0x01	; 1
    1712:	02 c0       	rjmp	.+4      	; 0x1718 <dtoa_prf+0x1a6>
    1714:	e0 e0       	ldi	r30, 0x00	; 0
    1716:	f0 e0       	ldi	r31, 0x00	; 0
    1718:	2e 0f       	add	r18, r30
    171a:	3f 1f       	adc	r19, r31
    171c:	e1 2f       	mov	r30, r17
    171e:	f0 e0       	ldi	r31, 0x00	; 0
    1720:	2e 17       	cp	r18, r30
    1722:	3f 07       	cpc	r19, r31
    1724:	1c f4       	brge	.+6      	; 0x172c <dtoa_prf+0x1ba>
    1726:	12 1b       	sub	r17, r18
    1728:	21 2f       	mov	r18, r17
    172a:	01 c0       	rjmp	.+2      	; 0x172e <dtoa_prf+0x1bc>
    172c:	20 e0       	ldi	r18, 0x00	; 0
    172e:	8e 2d       	mov	r24, r14
    1730:	88 71       	andi	r24, 0x18	; 24
    1732:	59 f4       	brne	.+22     	; 0x174a <dtoa_prf+0x1d8>
    1734:	f6 01       	movw	r30, r12
    1736:	82 2f       	mov	r24, r18
    1738:	30 e2       	ldi	r19, 0x20	; 32
    173a:	88 23       	and	r24, r24
    173c:	19 f0       	breq	.+6      	; 0x1744 <dtoa_prf+0x1d2>
    173e:	31 93       	st	Z+, r19
    1740:	81 50       	subi	r24, 0x01	; 1
    1742:	fb cf       	rjmp	.-10     	; 0x173a <dtoa_prf+0x1c8>
    1744:	c2 0e       	add	r12, r18
    1746:	d1 1c       	adc	r13, r1
    1748:	20 e0       	ldi	r18, 0x00	; 0
    174a:	99 23       	and	r25, r25
    174c:	29 f0       	breq	.+10     	; 0x1758 <dtoa_prf+0x1e6>
    174e:	d6 01       	movw	r26, r12
    1750:	9c 93       	st	X, r25
    1752:	f6 01       	movw	r30, r12
    1754:	31 96       	adiw	r30, 0x01	; 1
    1756:	6f 01       	movw	r12, r30
    1758:	51 11       	cpse	r21, r1
    175a:	0b c0       	rjmp	.+22     	; 0x1772 <dtoa_prf+0x200>
    175c:	f6 01       	movw	r30, r12
    175e:	82 2f       	mov	r24, r18
    1760:	90 e3       	ldi	r25, 0x30	; 48
    1762:	88 23       	and	r24, r24
    1764:	19 f0       	breq	.+6      	; 0x176c <dtoa_prf+0x1fa>
    1766:	91 93       	st	Z+, r25
    1768:	81 50       	subi	r24, 0x01	; 1
    176a:	fb cf       	rjmp	.-10     	; 0x1762 <dtoa_prf+0x1f0>
    176c:	c2 0e       	add	r12, r18
    176e:	d1 1c       	adc	r13, r1
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	0f 2d       	mov	r16, r15
    1774:	06 0f       	add	r16, r22
    1776:	9a 81       	ldd	r25, Y+2	; 0x02
    1778:	34 2f       	mov	r19, r20
    177a:	30 71       	andi	r19, 0x10	; 16
    177c:	44 ff       	sbrs	r20, 4
    177e:	03 c0       	rjmp	.+6      	; 0x1786 <dtoa_prf+0x214>
    1780:	91 33       	cpi	r25, 0x31	; 49
    1782:	09 f4       	brne	.+2      	; 0x1786 <dtoa_prf+0x214>
    1784:	01 50       	subi	r16, 0x01	; 1
    1786:	10 16       	cp	r1, r16
    1788:	24 f4       	brge	.+8      	; 0x1792 <dtoa_prf+0x220>
    178a:	09 30       	cpi	r16, 0x09	; 9
    178c:	18 f0       	brcs	.+6      	; 0x1794 <dtoa_prf+0x222>
    178e:	08 e0       	ldi	r16, 0x08	; 8
    1790:	01 c0       	rjmp	.+2      	; 0x1794 <dtoa_prf+0x222>
    1792:	01 e0       	ldi	r16, 0x01	; 1
    1794:	ab 01       	movw	r20, r22
    1796:	77 ff       	sbrs	r23, 7
    1798:	02 c0       	rjmp	.+4      	; 0x179e <dtoa_prf+0x22c>
    179a:	40 e0       	ldi	r20, 0x00	; 0
    179c:	50 e0       	ldi	r21, 0x00	; 0
    179e:	fb 01       	movw	r30, r22
    17a0:	e4 1b       	sub	r30, r20
    17a2:	f5 0b       	sbc	r31, r21
    17a4:	a1 e0       	ldi	r26, 0x01	; 1
    17a6:	b0 e0       	ldi	r27, 0x00	; 0
    17a8:	ac 0f       	add	r26, r28
    17aa:	bd 1f       	adc	r27, r29
    17ac:	ea 0f       	add	r30, r26
    17ae:	fb 1f       	adc	r31, r27
    17b0:	8e e2       	ldi	r24, 0x2E	; 46
    17b2:	a8 2e       	mov	r10, r24
    17b4:	4b 01       	movw	r8, r22
    17b6:	80 1a       	sub	r8, r16
    17b8:	91 08       	sbc	r9, r1
    17ba:	0b 2d       	mov	r16, r11
    17bc:	10 e0       	ldi	r17, 0x00	; 0
    17be:	11 95       	neg	r17
    17c0:	01 95       	neg	r16
    17c2:	11 09       	sbc	r17, r1
    17c4:	4f 3f       	cpi	r20, 0xFF	; 255
    17c6:	bf ef       	ldi	r27, 0xFF	; 255
    17c8:	5b 07       	cpc	r21, r27
    17ca:	21 f4       	brne	.+8      	; 0x17d4 <dtoa_prf+0x262>
    17cc:	d6 01       	movw	r26, r12
    17ce:	ac 92       	st	X, r10
    17d0:	11 96       	adiw	r26, 0x01	; 1
    17d2:	6d 01       	movw	r12, r26
    17d4:	64 17       	cp	r22, r20
    17d6:	75 07       	cpc	r23, r21
    17d8:	2c f0       	brlt	.+10     	; 0x17e4 <dtoa_prf+0x272>
    17da:	84 16       	cp	r8, r20
    17dc:	95 06       	cpc	r9, r21
    17de:	14 f4       	brge	.+4      	; 0x17e4 <dtoa_prf+0x272>
    17e0:	81 81       	ldd	r24, Z+1	; 0x01
    17e2:	01 c0       	rjmp	.+2      	; 0x17e6 <dtoa_prf+0x274>
    17e4:	80 e3       	ldi	r24, 0x30	; 48
    17e6:	41 50       	subi	r20, 0x01	; 1
    17e8:	51 09       	sbc	r21, r1
    17ea:	31 96       	adiw	r30, 0x01	; 1
    17ec:	d6 01       	movw	r26, r12
    17ee:	11 96       	adiw	r26, 0x01	; 1
    17f0:	7d 01       	movw	r14, r26
    17f2:	40 17       	cp	r20, r16
    17f4:	51 07       	cpc	r21, r17
    17f6:	24 f0       	brlt	.+8      	; 0x1800 <dtoa_prf+0x28e>
    17f8:	d6 01       	movw	r26, r12
    17fa:	8c 93       	st	X, r24
    17fc:	67 01       	movw	r12, r14
    17fe:	e2 cf       	rjmp	.-60     	; 0x17c4 <dtoa_prf+0x252>
    1800:	64 17       	cp	r22, r20
    1802:	75 07       	cpc	r23, r21
    1804:	39 f4       	brne	.+14     	; 0x1814 <dtoa_prf+0x2a2>
    1806:	96 33       	cpi	r25, 0x36	; 54
    1808:	20 f4       	brcc	.+8      	; 0x1812 <dtoa_prf+0x2a0>
    180a:	95 33       	cpi	r25, 0x35	; 53
    180c:	19 f4       	brne	.+6      	; 0x1814 <dtoa_prf+0x2a2>
    180e:	31 11       	cpse	r19, r1
    1810:	01 c0       	rjmp	.+2      	; 0x1814 <dtoa_prf+0x2a2>
    1812:	81 e3       	ldi	r24, 0x31	; 49
    1814:	f6 01       	movw	r30, r12
    1816:	80 83       	st	Z, r24
    1818:	f7 01       	movw	r30, r14
    181a:	82 2f       	mov	r24, r18
    181c:	90 e2       	ldi	r25, 0x20	; 32
    181e:	88 23       	and	r24, r24
    1820:	19 f0       	breq	.+6      	; 0x1828 <dtoa_prf+0x2b6>
    1822:	91 93       	st	Z+, r25
    1824:	81 50       	subi	r24, 0x01	; 1
    1826:	fb cf       	rjmp	.-10     	; 0x181e <dtoa_prf+0x2ac>
    1828:	f7 01       	movw	r30, r14
    182a:	e2 0f       	add	r30, r18
    182c:	f1 1d       	adc	r31, r1
    182e:	10 82       	st	Z, r1
    1830:	80 e0       	ldi	r24, 0x00	; 0
    1832:	90 e0       	ldi	r25, 0x00	; 0
    1834:	29 96       	adiw	r28, 0x09	; 9
    1836:	cd bf       	out	0x3d, r28	; 61
    1838:	de bf       	out	0x3e, r29	; 62
    183a:	df 91       	pop	r29
    183c:	cf 91       	pop	r28
    183e:	1f 91       	pop	r17
    1840:	0f 91       	pop	r16
    1842:	ff 90       	pop	r15
    1844:	ef 90       	pop	r14
    1846:	df 90       	pop	r13
    1848:	cf 90       	pop	r12
    184a:	bf 90       	pop	r11
    184c:	af 90       	pop	r10
    184e:	9f 90       	pop	r9
    1850:	8f 90       	pop	r8
    1852:	08 95       	ret

00001854 <__ftoa_engine>:
    1854:	28 30       	cpi	r18, 0x08	; 8
    1856:	08 f0       	brcs	.+2      	; 0x185a <__ftoa_engine+0x6>
    1858:	27 e0       	ldi	r18, 0x07	; 7
    185a:	33 27       	eor	r19, r19
    185c:	da 01       	movw	r26, r20
    185e:	99 0f       	add	r25, r25
    1860:	31 1d       	adc	r19, r1
    1862:	87 fd       	sbrc	r24, 7
    1864:	91 60       	ori	r25, 0x01	; 1
    1866:	00 96       	adiw	r24, 0x00	; 0
    1868:	61 05       	cpc	r22, r1
    186a:	71 05       	cpc	r23, r1
    186c:	39 f4       	brne	.+14     	; 0x187c <__ftoa_engine+0x28>
    186e:	32 60       	ori	r19, 0x02	; 2
    1870:	2e 5f       	subi	r18, 0xFE	; 254
    1872:	3d 93       	st	X+, r19
    1874:	30 e3       	ldi	r19, 0x30	; 48
    1876:	2a 95       	dec	r18
    1878:	e1 f7       	brne	.-8      	; 0x1872 <__ftoa_engine+0x1e>
    187a:	08 95       	ret
    187c:	9f 3f       	cpi	r25, 0xFF	; 255
    187e:	30 f0       	brcs	.+12     	; 0x188c <__ftoa_engine+0x38>
    1880:	80 38       	cpi	r24, 0x80	; 128
    1882:	71 05       	cpc	r23, r1
    1884:	61 05       	cpc	r22, r1
    1886:	09 f0       	breq	.+2      	; 0x188a <__ftoa_engine+0x36>
    1888:	3c 5f       	subi	r19, 0xFC	; 252
    188a:	3c 5f       	subi	r19, 0xFC	; 252
    188c:	3d 93       	st	X+, r19
    188e:	91 30       	cpi	r25, 0x01	; 1
    1890:	08 f0       	brcs	.+2      	; 0x1894 <__ftoa_engine+0x40>
    1892:	80 68       	ori	r24, 0x80	; 128
    1894:	91 1d       	adc	r25, r1
    1896:	df 93       	push	r29
    1898:	cf 93       	push	r28
    189a:	1f 93       	push	r17
    189c:	0f 93       	push	r16
    189e:	ff 92       	push	r15
    18a0:	ef 92       	push	r14
    18a2:	19 2f       	mov	r17, r25
    18a4:	98 7f       	andi	r25, 0xF8	; 248
    18a6:	96 95       	lsr	r25
    18a8:	e9 2f       	mov	r30, r25
    18aa:	96 95       	lsr	r25
    18ac:	96 95       	lsr	r25
    18ae:	e9 0f       	add	r30, r25
    18b0:	ff 27       	eor	r31, r31
    18b2:	e2 5b       	subi	r30, 0xB2	; 178
    18b4:	fe 4f       	sbci	r31, 0xFE	; 254
    18b6:	99 27       	eor	r25, r25
    18b8:	33 27       	eor	r19, r19
    18ba:	ee 24       	eor	r14, r14
    18bc:	ff 24       	eor	r15, r15
    18be:	a7 01       	movw	r20, r14
    18c0:	e7 01       	movw	r28, r14
    18c2:	05 90       	lpm	r0, Z+
    18c4:	08 94       	sec
    18c6:	07 94       	ror	r0
    18c8:	28 f4       	brcc	.+10     	; 0x18d4 <__ftoa_engine+0x80>
    18ca:	36 0f       	add	r19, r22
    18cc:	e7 1e       	adc	r14, r23
    18ce:	f8 1e       	adc	r15, r24
    18d0:	49 1f       	adc	r20, r25
    18d2:	51 1d       	adc	r21, r1
    18d4:	66 0f       	add	r22, r22
    18d6:	77 1f       	adc	r23, r23
    18d8:	88 1f       	adc	r24, r24
    18da:	99 1f       	adc	r25, r25
    18dc:	06 94       	lsr	r0
    18de:	a1 f7       	brne	.-24     	; 0x18c8 <__ftoa_engine+0x74>
    18e0:	05 90       	lpm	r0, Z+
    18e2:	07 94       	ror	r0
    18e4:	28 f4       	brcc	.+10     	; 0x18f0 <__ftoa_engine+0x9c>
    18e6:	e7 0e       	add	r14, r23
    18e8:	f8 1e       	adc	r15, r24
    18ea:	49 1f       	adc	r20, r25
    18ec:	56 1f       	adc	r21, r22
    18ee:	c1 1d       	adc	r28, r1
    18f0:	77 0f       	add	r23, r23
    18f2:	88 1f       	adc	r24, r24
    18f4:	99 1f       	adc	r25, r25
    18f6:	66 1f       	adc	r22, r22
    18f8:	06 94       	lsr	r0
    18fa:	a1 f7       	brne	.-24     	; 0x18e4 <__ftoa_engine+0x90>
    18fc:	05 90       	lpm	r0, Z+
    18fe:	07 94       	ror	r0
    1900:	28 f4       	brcc	.+10     	; 0x190c <__ftoa_engine+0xb8>
    1902:	f8 0e       	add	r15, r24
    1904:	49 1f       	adc	r20, r25
    1906:	56 1f       	adc	r21, r22
    1908:	c7 1f       	adc	r28, r23
    190a:	d1 1d       	adc	r29, r1
    190c:	88 0f       	add	r24, r24
    190e:	99 1f       	adc	r25, r25
    1910:	66 1f       	adc	r22, r22
    1912:	77 1f       	adc	r23, r23
    1914:	06 94       	lsr	r0
    1916:	a1 f7       	brne	.-24     	; 0x1900 <__ftoa_engine+0xac>
    1918:	05 90       	lpm	r0, Z+
    191a:	07 94       	ror	r0
    191c:	20 f4       	brcc	.+8      	; 0x1926 <__ftoa_engine+0xd2>
    191e:	49 0f       	add	r20, r25
    1920:	56 1f       	adc	r21, r22
    1922:	c7 1f       	adc	r28, r23
    1924:	d8 1f       	adc	r29, r24
    1926:	99 0f       	add	r25, r25
    1928:	66 1f       	adc	r22, r22
    192a:	77 1f       	adc	r23, r23
    192c:	88 1f       	adc	r24, r24
    192e:	06 94       	lsr	r0
    1930:	a9 f7       	brne	.-22     	; 0x191c <__ftoa_engine+0xc8>
    1932:	84 91       	lpm	r24, Z
    1934:	10 95       	com	r17
    1936:	17 70       	andi	r17, 0x07	; 7
    1938:	41 f0       	breq	.+16     	; 0x194a <__ftoa_engine+0xf6>
    193a:	d6 95       	lsr	r29
    193c:	c7 95       	ror	r28
    193e:	57 95       	ror	r21
    1940:	47 95       	ror	r20
    1942:	f7 94       	ror	r15
    1944:	e7 94       	ror	r14
    1946:	1a 95       	dec	r17
    1948:	c1 f7       	brne	.-16     	; 0x193a <__ftoa_engine+0xe6>
    194a:	e4 ef       	ldi	r30, 0xF4	; 244
    194c:	f0 e0       	ldi	r31, 0x00	; 0
    194e:	68 94       	set
    1950:	15 90       	lpm	r1, Z+
    1952:	15 91       	lpm	r17, Z+
    1954:	35 91       	lpm	r19, Z+
    1956:	65 91       	lpm	r22, Z+
    1958:	95 91       	lpm	r25, Z+
    195a:	05 90       	lpm	r0, Z+
    195c:	7f e2       	ldi	r23, 0x2F	; 47
    195e:	73 95       	inc	r23
    1960:	e1 18       	sub	r14, r1
    1962:	f1 0a       	sbc	r15, r17
    1964:	43 0b       	sbc	r20, r19
    1966:	56 0b       	sbc	r21, r22
    1968:	c9 0b       	sbc	r28, r25
    196a:	d0 09       	sbc	r29, r0
    196c:	c0 f7       	brcc	.-16     	; 0x195e <__ftoa_engine+0x10a>
    196e:	e1 0c       	add	r14, r1
    1970:	f1 1e       	adc	r15, r17
    1972:	43 1f       	adc	r20, r19
    1974:	56 1f       	adc	r21, r22
    1976:	c9 1f       	adc	r28, r25
    1978:	d0 1d       	adc	r29, r0
    197a:	7e f4       	brtc	.+30     	; 0x199a <__ftoa_engine+0x146>
    197c:	70 33       	cpi	r23, 0x30	; 48
    197e:	11 f4       	brne	.+4      	; 0x1984 <__ftoa_engine+0x130>
    1980:	8a 95       	dec	r24
    1982:	e6 cf       	rjmp	.-52     	; 0x1950 <__ftoa_engine+0xfc>
    1984:	e8 94       	clt
    1986:	01 50       	subi	r16, 0x01	; 1
    1988:	30 f0       	brcs	.+12     	; 0x1996 <__ftoa_engine+0x142>
    198a:	08 0f       	add	r16, r24
    198c:	0a f4       	brpl	.+2      	; 0x1990 <__ftoa_engine+0x13c>
    198e:	00 27       	eor	r16, r16
    1990:	02 17       	cp	r16, r18
    1992:	08 f4       	brcc	.+2      	; 0x1996 <__ftoa_engine+0x142>
    1994:	20 2f       	mov	r18, r16
    1996:	23 95       	inc	r18
    1998:	02 2f       	mov	r16, r18
    199a:	7a 33       	cpi	r23, 0x3A	; 58
    199c:	28 f0       	brcs	.+10     	; 0x19a8 <__ftoa_engine+0x154>
    199e:	79 e3       	ldi	r23, 0x39	; 57
    19a0:	7d 93       	st	X+, r23
    19a2:	2a 95       	dec	r18
    19a4:	e9 f7       	brne	.-6      	; 0x19a0 <__ftoa_engine+0x14c>
    19a6:	10 c0       	rjmp	.+32     	; 0x19c8 <__ftoa_engine+0x174>
    19a8:	7d 93       	st	X+, r23
    19aa:	2a 95       	dec	r18
    19ac:	89 f6       	brne	.-94     	; 0x1950 <__ftoa_engine+0xfc>
    19ae:	06 94       	lsr	r0
    19b0:	97 95       	ror	r25
    19b2:	67 95       	ror	r22
    19b4:	37 95       	ror	r19
    19b6:	17 95       	ror	r17
    19b8:	17 94       	ror	r1
    19ba:	e1 18       	sub	r14, r1
    19bc:	f1 0a       	sbc	r15, r17
    19be:	43 0b       	sbc	r20, r19
    19c0:	56 0b       	sbc	r21, r22
    19c2:	c9 0b       	sbc	r28, r25
    19c4:	d0 09       	sbc	r29, r0
    19c6:	98 f0       	brcs	.+38     	; 0x19ee <__ftoa_engine+0x19a>
    19c8:	23 95       	inc	r18
    19ca:	7e 91       	ld	r23, -X
    19cc:	73 95       	inc	r23
    19ce:	7a 33       	cpi	r23, 0x3A	; 58
    19d0:	08 f0       	brcs	.+2      	; 0x19d4 <__ftoa_engine+0x180>
    19d2:	70 e3       	ldi	r23, 0x30	; 48
    19d4:	7c 93       	st	X, r23
    19d6:	20 13       	cpse	r18, r16
    19d8:	b8 f7       	brcc	.-18     	; 0x19c8 <__ftoa_engine+0x174>
    19da:	7e 91       	ld	r23, -X
    19dc:	70 61       	ori	r23, 0x10	; 16
    19de:	7d 93       	st	X+, r23
    19e0:	30 f0       	brcs	.+12     	; 0x19ee <__ftoa_engine+0x19a>
    19e2:	83 95       	inc	r24
    19e4:	71 e3       	ldi	r23, 0x31	; 49
    19e6:	7d 93       	st	X+, r23
    19e8:	70 e3       	ldi	r23, 0x30	; 48
    19ea:	2a 95       	dec	r18
    19ec:	e1 f7       	brne	.-8      	; 0x19e6 <__ftoa_engine+0x192>
    19ee:	11 24       	eor	r1, r1
    19f0:	ef 90       	pop	r14
    19f2:	ff 90       	pop	r15
    19f4:	0f 91       	pop	r16
    19f6:	1f 91       	pop	r17
    19f8:	cf 91       	pop	r28
    19fa:	df 91       	pop	r29
    19fc:	99 27       	eor	r25, r25
    19fe:	87 fd       	sbrc	r24, 7
    1a00:	90 95       	com	r25
    1a02:	08 95       	ret

00001a04 <strnlen_P>:
    1a04:	fc 01       	movw	r30, r24
    1a06:	05 90       	lpm	r0, Z+
    1a08:	61 50       	subi	r22, 0x01	; 1
    1a0a:	70 40       	sbci	r23, 0x00	; 0
    1a0c:	01 10       	cpse	r0, r1
    1a0e:	d8 f7       	brcc	.-10     	; 0x1a06 <strnlen_P+0x2>
    1a10:	80 95       	com	r24
    1a12:	90 95       	com	r25
    1a14:	8e 0f       	add	r24, r30
    1a16:	9f 1f       	adc	r25, r31
    1a18:	08 95       	ret

00001a1a <strnlen>:
    1a1a:	fc 01       	movw	r30, r24
    1a1c:	61 50       	subi	r22, 0x01	; 1
    1a1e:	70 40       	sbci	r23, 0x00	; 0
    1a20:	01 90       	ld	r0, Z+
    1a22:	01 10       	cpse	r0, r1
    1a24:	d8 f7       	brcc	.-10     	; 0x1a1c <strnlen+0x2>
    1a26:	80 95       	com	r24
    1a28:	90 95       	com	r25
    1a2a:	8e 0f       	add	r24, r30
    1a2c:	9f 1f       	adc	r25, r31
    1a2e:	08 95       	ret

00001a30 <fputc>:
    1a30:	0f 93       	push	r16
    1a32:	1f 93       	push	r17
    1a34:	cf 93       	push	r28
    1a36:	df 93       	push	r29
    1a38:	fb 01       	movw	r30, r22
    1a3a:	23 81       	ldd	r18, Z+3	; 0x03
    1a3c:	21 fd       	sbrc	r18, 1
    1a3e:	03 c0       	rjmp	.+6      	; 0x1a46 <fputc+0x16>
    1a40:	8f ef       	ldi	r24, 0xFF	; 255
    1a42:	9f ef       	ldi	r25, 0xFF	; 255
    1a44:	2c c0       	rjmp	.+88     	; 0x1a9e <fputc+0x6e>
    1a46:	22 ff       	sbrs	r18, 2
    1a48:	16 c0       	rjmp	.+44     	; 0x1a76 <fputc+0x46>
    1a4a:	46 81       	ldd	r20, Z+6	; 0x06
    1a4c:	57 81       	ldd	r21, Z+7	; 0x07
    1a4e:	24 81       	ldd	r18, Z+4	; 0x04
    1a50:	35 81       	ldd	r19, Z+5	; 0x05
    1a52:	42 17       	cp	r20, r18
    1a54:	53 07       	cpc	r21, r19
    1a56:	44 f4       	brge	.+16     	; 0x1a68 <fputc+0x38>
    1a58:	a0 81       	ld	r26, Z
    1a5a:	b1 81       	ldd	r27, Z+1	; 0x01
    1a5c:	9d 01       	movw	r18, r26
    1a5e:	2f 5f       	subi	r18, 0xFF	; 255
    1a60:	3f 4f       	sbci	r19, 0xFF	; 255
    1a62:	20 83       	st	Z, r18
    1a64:	31 83       	std	Z+1, r19	; 0x01
    1a66:	8c 93       	st	X, r24
    1a68:	26 81       	ldd	r18, Z+6	; 0x06
    1a6a:	37 81       	ldd	r19, Z+7	; 0x07
    1a6c:	2f 5f       	subi	r18, 0xFF	; 255
    1a6e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a70:	26 83       	std	Z+6, r18	; 0x06
    1a72:	37 83       	std	Z+7, r19	; 0x07
    1a74:	14 c0       	rjmp	.+40     	; 0x1a9e <fputc+0x6e>
    1a76:	8b 01       	movw	r16, r22
    1a78:	ec 01       	movw	r28, r24
    1a7a:	fb 01       	movw	r30, r22
    1a7c:	00 84       	ldd	r0, Z+8	; 0x08
    1a7e:	f1 85       	ldd	r31, Z+9	; 0x09
    1a80:	e0 2d       	mov	r30, r0
    1a82:	09 95       	icall
    1a84:	89 2b       	or	r24, r25
    1a86:	e1 f6       	brne	.-72     	; 0x1a40 <fputc+0x10>
    1a88:	d8 01       	movw	r26, r16
    1a8a:	16 96       	adiw	r26, 0x06	; 6
    1a8c:	8d 91       	ld	r24, X+
    1a8e:	9c 91       	ld	r25, X
    1a90:	17 97       	sbiw	r26, 0x07	; 7
    1a92:	01 96       	adiw	r24, 0x01	; 1
    1a94:	16 96       	adiw	r26, 0x06	; 6
    1a96:	8d 93       	st	X+, r24
    1a98:	9c 93       	st	X, r25
    1a9a:	17 97       	sbiw	r26, 0x07	; 7
    1a9c:	ce 01       	movw	r24, r28
    1a9e:	df 91       	pop	r29
    1aa0:	cf 91       	pop	r28
    1aa2:	1f 91       	pop	r17
    1aa4:	0f 91       	pop	r16
    1aa6:	08 95       	ret

00001aa8 <__ultoa_invert>:
    1aa8:	fa 01       	movw	r30, r20
    1aaa:	aa 27       	eor	r26, r26
    1aac:	28 30       	cpi	r18, 0x08	; 8
    1aae:	51 f1       	breq	.+84     	; 0x1b04 <__ultoa_invert+0x5c>
    1ab0:	20 31       	cpi	r18, 0x10	; 16
    1ab2:	81 f1       	breq	.+96     	; 0x1b14 <__ultoa_invert+0x6c>
    1ab4:	e8 94       	clt
    1ab6:	6f 93       	push	r22
    1ab8:	6e 7f       	andi	r22, 0xFE	; 254
    1aba:	6e 5f       	subi	r22, 0xFE	; 254
    1abc:	7f 4f       	sbci	r23, 0xFF	; 255
    1abe:	8f 4f       	sbci	r24, 0xFF	; 255
    1ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac2:	af 4f       	sbci	r26, 0xFF	; 255
    1ac4:	b1 e0       	ldi	r27, 0x01	; 1
    1ac6:	3e d0       	rcall	.+124    	; 0x1b44 <__ultoa_invert+0x9c>
    1ac8:	b4 e0       	ldi	r27, 0x04	; 4
    1aca:	3c d0       	rcall	.+120    	; 0x1b44 <__ultoa_invert+0x9c>
    1acc:	67 0f       	add	r22, r23
    1ace:	78 1f       	adc	r23, r24
    1ad0:	89 1f       	adc	r24, r25
    1ad2:	9a 1f       	adc	r25, r26
    1ad4:	a1 1d       	adc	r26, r1
    1ad6:	68 0f       	add	r22, r24
    1ad8:	79 1f       	adc	r23, r25
    1ada:	8a 1f       	adc	r24, r26
    1adc:	91 1d       	adc	r25, r1
    1ade:	a1 1d       	adc	r26, r1
    1ae0:	6a 0f       	add	r22, r26
    1ae2:	71 1d       	adc	r23, r1
    1ae4:	81 1d       	adc	r24, r1
    1ae6:	91 1d       	adc	r25, r1
    1ae8:	a1 1d       	adc	r26, r1
    1aea:	20 d0       	rcall	.+64     	; 0x1b2c <__ultoa_invert+0x84>
    1aec:	09 f4       	brne	.+2      	; 0x1af0 <__ultoa_invert+0x48>
    1aee:	68 94       	set
    1af0:	3f 91       	pop	r19
    1af2:	2a e0       	ldi	r18, 0x0A	; 10
    1af4:	26 9f       	mul	r18, r22
    1af6:	11 24       	eor	r1, r1
    1af8:	30 19       	sub	r19, r0
    1afa:	30 5d       	subi	r19, 0xD0	; 208
    1afc:	31 93       	st	Z+, r19
    1afe:	de f6       	brtc	.-74     	; 0x1ab6 <__ultoa_invert+0xe>
    1b00:	cf 01       	movw	r24, r30
    1b02:	08 95       	ret
    1b04:	46 2f       	mov	r20, r22
    1b06:	47 70       	andi	r20, 0x07	; 7
    1b08:	40 5d       	subi	r20, 0xD0	; 208
    1b0a:	41 93       	st	Z+, r20
    1b0c:	b3 e0       	ldi	r27, 0x03	; 3
    1b0e:	0f d0       	rcall	.+30     	; 0x1b2e <__ultoa_invert+0x86>
    1b10:	c9 f7       	brne	.-14     	; 0x1b04 <__ultoa_invert+0x5c>
    1b12:	f6 cf       	rjmp	.-20     	; 0x1b00 <__ultoa_invert+0x58>
    1b14:	46 2f       	mov	r20, r22
    1b16:	4f 70       	andi	r20, 0x0F	; 15
    1b18:	40 5d       	subi	r20, 0xD0	; 208
    1b1a:	4a 33       	cpi	r20, 0x3A	; 58
    1b1c:	18 f0       	brcs	.+6      	; 0x1b24 <__ultoa_invert+0x7c>
    1b1e:	49 5d       	subi	r20, 0xD9	; 217
    1b20:	31 fd       	sbrc	r19, 1
    1b22:	40 52       	subi	r20, 0x20	; 32
    1b24:	41 93       	st	Z+, r20
    1b26:	02 d0       	rcall	.+4      	; 0x1b2c <__ultoa_invert+0x84>
    1b28:	a9 f7       	brne	.-22     	; 0x1b14 <__ultoa_invert+0x6c>
    1b2a:	ea cf       	rjmp	.-44     	; 0x1b00 <__ultoa_invert+0x58>
    1b2c:	b4 e0       	ldi	r27, 0x04	; 4
    1b2e:	a6 95       	lsr	r26
    1b30:	97 95       	ror	r25
    1b32:	87 95       	ror	r24
    1b34:	77 95       	ror	r23
    1b36:	67 95       	ror	r22
    1b38:	ba 95       	dec	r27
    1b3a:	c9 f7       	brne	.-14     	; 0x1b2e <__ultoa_invert+0x86>
    1b3c:	00 97       	sbiw	r24, 0x00	; 0
    1b3e:	61 05       	cpc	r22, r1
    1b40:	71 05       	cpc	r23, r1
    1b42:	08 95       	ret
    1b44:	9b 01       	movw	r18, r22
    1b46:	ac 01       	movw	r20, r24
    1b48:	0a 2e       	mov	r0, r26
    1b4a:	06 94       	lsr	r0
    1b4c:	57 95       	ror	r21
    1b4e:	47 95       	ror	r20
    1b50:	37 95       	ror	r19
    1b52:	27 95       	ror	r18
    1b54:	ba 95       	dec	r27
    1b56:	c9 f7       	brne	.-14     	; 0x1b4a <__ultoa_invert+0xa2>
    1b58:	62 0f       	add	r22, r18
    1b5a:	73 1f       	adc	r23, r19
    1b5c:	84 1f       	adc	r24, r20
    1b5e:	95 1f       	adc	r25, r21
    1b60:	a0 1d       	adc	r26, r0
    1b62:	08 95       	ret

00001b64 <_exit>:
    1b64:	f8 94       	cli

00001b66 <__stop_program>:
    1b66:	ff cf       	rjmp	.-2      	; 0x1b66 <__stop_program>
